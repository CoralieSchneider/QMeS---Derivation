(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    397693,       9678]
NotebookOptionsPosition[    384050,       9429]
NotebookOutlinePosition[    384446,       9445]
CellTagsIndexPosition[    384403,       9442]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Derive Functional Equation", "Chapter",ExpressionUUID->"45ddee6f-3f32-44ef-82cd-b73bd4ff308b"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<QMeSderivation`Tools`\>\"", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.917437823899316*^9, 3.917437865877355*^9}, 
   3.918319540359568*^9, {3.918571376709474*^9, 3.918571381993163*^9}, {
   3.918571723423622*^9, 3.918571759564589*^9}, {3.918572083319786*^9, 
   3.918572109042968*^9}, {3.918572153658847*^9, 3.9185721676824493`*^9}, 
   3.918572256965791*^9, {3.921794881128136*^9, 3.921794894868227*^9}, {
   3.921837555545008*^9, 3.921837572726562*^9}, {3.924145135891276*^9, 
   3.924145141069645*^9}, {3.930796106319742*^9, 3.930796154391613*^9}, {
   3.930796383888001*^9, 3.930796443504225*^9}, 3.9307970905042343`*^9, {
   3.930832616160828*^9, 3.930832657016365*^9}, {3.932041387765153*^9, 
   3.932041402023022*^9}, {3.9321161727392597`*^9, 
   3.932116177007122*^9}},ExpressionUUID->"09445a57-7255-4382-a99e-\
890a2d3f1c1c"],

Cell[BoxData[
 RowBox[{"BeginPackage", "[", "\"\<QMeSderivation`\>\"", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.932116153957696*^9, 
  3.932116180634678*^9}},ExpressionUUID->"5b3b251d-1a0d-4384-ba9b-\
26af0d4bef2e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$DistributedContexts", ":=", 
   RowBox[{"{", 
    RowBox[{
    "$Context", ",", "\"\<QMeSderivation`\>\"", ",", 
     "\"\<QMeSderivation`Private`\>\""}], "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.917437823899316*^9, 3.917437865877355*^9}, 
   3.918319540359568*^9, {3.918571376709474*^9, 3.918571381993163*^9}, {
   3.918571723423622*^9, 3.918571759564589*^9}, {3.918572083319786*^9, 
   3.918572109042968*^9}, {3.918572153658847*^9, 3.9185721676824493`*^9}, 
   3.918572256965791*^9, {3.921794881128136*^9, 3.921794894868227*^9}, {
   3.921837555545008*^9, 3.921837572726562*^9}, {3.924145135891276*^9, 
   3.924145141069645*^9}, {3.930796106319742*^9, 3.930796154391613*^9}, {
   3.930796383888001*^9, 3.930796443504225*^9}, 3.9307970905042343`*^9, {
   3.930832616160828*^9, 3.930832657016365*^9}, {3.932041387765153*^9, 
   3.932041402023022*^9}, {3.932229803649088*^9, 3.9322298147324133`*^9}, {
   3.932229876010373*^9, 3.932229878615309*^9}, {3.932229960935116*^9, 
   3.932229980326703*^9}, {3.932230012273373*^9, 
   3.932230013946618*^9}},ExpressionUUID->"68080c37-4b9f-4d66-a306-\
bec84e35eeaf"],

Cell[CellGroupData[{

Cell["Exports", "Section",
 CellChangeTimes->{{3.925554935377668*^9, 
  3.925554956974764*^9}},ExpressionUUID->"ab79d882-34f1-4122-9150-\
7e5976bab5c1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DeriveFunctionalEquation", "::", "usage"}], " ", "=", " ", 
   "\"\<DeriveFunctionalEquation[setup, derivativelist, options]\n\nIf you \
already have a master equation the setup is:\nsetup = \
<|\\\"MasterEquation\\\" -> masterEquation, \\\"FieldSpace\\\" -> fields, \
\\\"Truncation\\\" -> truncation|>\n\nIf you first want to derive the DSE for \
a theory:\nSetupDSE = <|\\\"MasterEquation\\\" -> <|\\\"getDSE\\\" -> \
\\\"True\\\", \\\"classicalAction\\\" -> classicalAction|>, \n\
\\\"FieldSpace\\\" -> fields, \\\"Truncation\\\" -> truncation|>\n\nMaster \
equations can be the FRG equation:\nFRGEq = {\\\"Prefactor\\\" -> {1/2}, <|\\\
\"type\\\" -> \\\"Regulatordot\\\", \\\"indices\\\" -> {a, b}|>, \n<|\\\"type\
\\\" -> \\\"Propagator\\\", \\\"indices\\\" -> {a, b}|>}\n\nor the mSTI:\n\
LHSmSTIEq = {\\\"Prefactor\\\" -> {1}, <|\\\"type\\\" -> \\\"nPoint\\\", \
\\\"indices\\\" -> {Q[i]}, \\\"nPoint\\\" -> 1, \\\"spec\\\" -> \
\\\"BRST\\\"|>, <|\\\"type\\\" -> \\\"nPoint\\\", \\\"indices\\\" -> {i}, \
\\\"nPoint\\\" -> 1, \\\"spec\\\" -> \\\"none\\\"|>,}\n\nmSTIEq = \
{\\\"Prefactor\\\" -> {1}, <|\\\"type\\\" -> \\\"Regulator\\\", \\\"indices\\\
\" -> {a, b}|>, \n<|\\\"type\\\" -> \\\"Propagator\\\", \\\"indices\\\" -> \
{b, c}|>, \n<|\\\"type\\\" -> \\\"nPoint\\\", \\\"indices\\\" -> {c, Q[a]}, \
\\\"nPoint\\\" -> 2, \\\"spec\\\" -> \\\"BRST\\\"|>}\n\nOne specifies the \
theory by giving a list of fields (and BRST sources) with their respective \
indices and statistics. If no bosonic or fermionic fields are present in a \
theory one must insert an empty list. \nfields = <|\\\"bosonic\\\" -> {A[p, \
{mu, i}], B[p,{i}]},\n\n\\\"fermionic\\\" -> {{cbar[p, {i}], c[p, {i}]}, \
{af[p,{i}], f[p,{i}]}},\n\n\\\"BRSTsources\\\" -> {{Q[A], \\\"fermionic\\\"}, \
{Q[B], \\\"fermionic\\\"}, {Q[cbar], \\\"bosonic\\\"}, {Q[c], \
\\\"bosonic\\\"}, {Q[af], \\\"bosonic\\\"}, {Q[f], \\\"bosonic\\\"}}|>\n\nThe \
classical action and truncation are simply a list of possible vertices \
starting with the possible propagators. \nclassicalAction = {{A, A}, {c, \
cbar}, {A, A, A}, {A, A, A, A}, {A, c, cbar}}\n\ntruncation = {{A, A}, {c, \
cbar}, {A, A, A}, {A, A, A, A}, {A, c, cbar}, {A, A, c, cbar}}\n\n\nFor the \
list of derivatives one generally has three options:\nDerivativeList1 = {A, \
A}\nDerivativeList2 = {A[a], A[b]}\nDerivativeList3 = {A[-p, {mu, m}], A[p, \
{nu, n}]}\n\nThe options for the function getFunctionalDerivatives are:\n\
\\\"OutputLevel\\\" ->  \\\"getDSE\\\"\n\\\"OutputLevel\\\" ->  \
\\\"FunctionalDerivatives\\\"\n\\\"OutputLevel\\\" ->  \\\"SuperindexDiagrams\
\\\"\n\\\"OutputLevel\\\" ->  \\\"FullDiagrams\\\"\n\nDerivativeList1 works \
with the first two output levels, DerivativeList2 with the first three and \
DerivativeList3 works for all output levels.\n\n\\\"getDSE\\\": Computes the \
DSE of the theory\n\\\"FunctionalDerivatives\\\": Takes functional \
derivatives of the master equation\n\\\"SuperindexDiagrams\\\": Takes the \
trace in field space and sorts the objects\n\\\"FullDiagrams\\\": replaces \
the superfield indices with physical indices and writes the objects as \
funtions\n\>\""}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"ed4d7724-1b4a-4971-a017-4caeafa6af48"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getDSE", "::", "usage"}], " ", "=", " ", 
   "\"\<getDSE[classicalAction, firstDerivative]\n\nDerive the DSE for a \
given classical action. A simple example is\n\
getDSE[{{phi,phi},{phi,phi,phi,phi}}, phi[a]]\n\>\""}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"efb2446e-7b3a-4843-a2ec-076083ba1d3a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SuperindexToFullDiagrams", "::", "usage"}], " ", "=", " ", 
   "\"\<SuperindexToFullDiagrams[diagrams,setup, derivativelist, options]\n\n\
Insert the physical indices and momentum routing into a list of superindex \
diagrams.\n\>\""}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.932180882638589*^9, 3.932180907839029*^9}, {
  3.932180946451118*^9, 
  3.932180976749114*^9}},ExpressionUUID->"56b00adc-6ded-4055-9c3d-\
9c77060da24a"],

Cell[BoxData[
 RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"90ac0479-f244-40f4-93cf-d5751b4e9a16"]
}, Closed]],

Cell[CellGroupData[{

Cell["Debug", "Section",
 CellChangeTimes->{{3.925555181021306*^9, 
  3.925555190406625*^9}},ExpressionUUID->"0e5efc1c-b67a-456f-b36e-\
d1bb2591cd71"],

Cell[BoxData[
 RowBox[{
  RowBox[{"qmesDerivationDirectory", "=", 
   RowBox[{"SelectFirst", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Join", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"FileNameJoin", "[", 
          RowBox[{"{", 
           RowBox[{
           "$UserBaseDirectory", ",", "\"\<Applications\>\"", ",", 
            "\"\<QMeSderivation\>\""}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"FileNameJoin", "[", 
          RowBox[{"{", 
           RowBox[{
           "$BaseDirectory", ",", "\"\<Applications\>\"", ",", 
            "\"\<QMeSderivation\>\""}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"FileNameJoin", "[", 
          RowBox[{"{", 
           RowBox[{
           "$InstallationDirectory", ",", "\"\<AddOns\>\"", ",", 
            "\"\<Applications\>\"", ",", "\"\<QMeSderivation\>\""}], "}"}], 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"FileNameJoin", "[", 
          RowBox[{"{", 
           RowBox[{
           "$InstallationDirectory", ",", "\"\<AddOns\>\"", ",", 
            "\"\<Packages\>\"", ",", "\"\<QMeSderivation\>\""}], "}"}], "]"}],
          ",", "\[IndentingNewLine]", 
         RowBox[{"FileNameJoin", "[", 
          RowBox[{"{", 
           RowBox[{
           "$InstallationDirectory", ",", "\"\<AddOns\>\"", ",", 
            "\"\<ExtraPackages\>\"", ",", "\"\<QMeSderivation\>\""}], "}"}], 
          "]"}]}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Select", "[", 
        RowBox[{"$Path", ",", 
         RowBox[{
          RowBox[{"StringContainsQ", "[", 
           RowBox[{"#", ",", "\"\<QMeS-Derivation\>\""}], "]"}], "&"}]}], 
        "]"}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"DirectoryQ", "[", "#", "]"}], "&"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.925554963689718*^9, 3.925555018648334*^9}, {
  3.925555067350979*^9, 3.925555091557687*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"9fda98be-e781-446e-a3a2-a2ea51d98fb7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$DebugLevel", " ", "=", "0"}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"399502b2-65cd-48c5-bc19-8af476d3d318"],

Cell[BoxData[
 RowBox[{
  RowBox[{"myEcho", "[", 
   RowBox[{"msg_", ",", "lvl_"}], "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"$DebugLevel", " ", ">=", "lvl"}], ",", " ", 
    RowBox[{
     RowBox[{"Echo", "[", "msg", "]"}], ";"}], ",", " ", 
    RowBox[{"Nothing", ";"}]}], "]"}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"37db1de1-8a68-46a0-adc2-0015e58de4d6"]
}, Closed]],

Cell[CellGroupData[{

Cell["Get DSE", "Section",ExpressionUUID->"facb5743-108a-440d-a72a-36a58aae5f55"],

Cell[CellGroupData[{

Cell["Main", "Subsection",ExpressionUUID->"95d4f988-e43d-4461-9871-bad4e8bddd38"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "getDSE", "]"}], "\n", 
 RowBox[{
  RowBox[{"getDSE", "[", 
   RowBox[{"classicalAction_", ",", "firstDerivative_"}], "]"}], " ", ":=", 
  " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "fullClassicalAction", ",", "derAction", ",", "rhsExpDSE", ",", 
      "rhsDSE"}], "}"}], ",", "\n", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"fullClassicalAction", " ", "=", " ", 
      RowBox[{"generateClassicalAction", "[", "classicalAction", "]"}]}], ";",
      "\n", "\[IndentingNewLine]", 
     RowBox[{"derAction", " ", "=", " ", 
      RowBox[{"takeFieldDerivative", "[", 
       RowBox[{"fullClassicalAction", ",", "firstDerivative"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"rhsExpDSE", " ", "=", " ", 
      RowBox[{"replaceExpectationValue", "[", "derAction", "]"}]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"rhsDSE", " ", "=", " ", 
      RowBox[{
       RowBox[{"takeFinalFieldDerivatives", "[", "rhsExpDSE", "]"}], "/.", 
       RowBox[{"\"\<dummyEntry\>\"", "->", "Nothing"}]}]}], ";", "\n", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "rhsDSE", "]"}]}]}], "\n", "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9255552215246897`*^9, 
  3.925555230437595*^9}},ExpressionUUID->"aead25f1-6518-48fc-bf5b-\
7dcba37b3228"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generate Classical Action", "Subsection",ExpressionUUID->"72ef84f0-2b33-4001-9007-a371effeb273"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "generate", " ", "the", " ", "classical", " ", "action", " ", "in", " ", 
    "operator", " ", "and", " ", "list", " ", "form", " ", "form", " ", 
    "with", " ", "superfield", " ", "indices"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"Clear", "[", "generateClassicalAction", "]"}], "\n", 
   RowBox[{
    RowBox[{"generateClassicalAction", "[", "classicalAction_", "]"}], " ", ":=",
     " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\n", 
      RowBox[{"generateClassicalAction", "[", 
       RowBox[{
        RowBox[{"{", "}"}], ",", "classicalAction"}], "]"}]}], "\n", "]"}]}], 
   "\n", 
   RowBox[{
    RowBox[{"generateClassicalAction", "[", 
     RowBox[{"actionList_", ",", "classicalAction_"}], "]"}], " ", ":=", " ", 
    
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"newTerm", ",", "newactionList", ",", "newclassicalAction"}], 
       "}"}], ",", "\n", "\n", 
      RowBox[{
       RowBox[{"newTerm", " ", "=", " ", 
        RowBox[{"transformToClassicalObject", "[", 
         RowBox[{"classicalAction", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", "\n", 
       RowBox[{"newactionList", " ", "=", " ", 
        RowBox[{"Join", "[", 
         RowBox[{"actionList", ",", 
          RowBox[{"{", "newTerm", "}"}]}], "]"}]}], ";", "\n", 
       RowBox[{"newclassicalAction", " ", "=", " ", 
        RowBox[{"classicalAction", "[", 
         RowBox[{"[", 
          RowBox[{"2", ";;", 
           RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", "\n", "\n", 
       RowBox[{"generateClassicalAction", "[", 
        RowBox[{"newactionList", ",", "newclassicalAction"}], "]"}]}]}], "\n",
      "]"}]}], "\n", 
   RowBox[{
    RowBox[{"generateClassicalAction", "[", 
     RowBox[{"actionList_", ",", 
      RowBox[{"{", "}"}]}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\n", 
      RowBox[{"Return", "[", "actionList", "]"}]}], "\n", 
     "]"}]}]}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"4295dc07-9432-40d1-a0a3-da643a8f69a2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "transform", " ", "list", " ", "of", " ", "vertices", " ", "into", " ", 
    "objects"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"Clear", "[", "transformToClassicalObject", "]"}], "\n", 
   RowBox[{
    RowBox[{"transformToClassicalObject", "[", "classicalActionEntry_", "]"}],
     " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "objectList", ",", "objectsIndices", ",", "fullObjectList", ",", " ", 
        "prefac"}], "}"}], ",", "\n", 
      RowBox[{
       RowBox[{"objectList", " ", "=", "  ", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<type\>\"", "->", " ", "\"\<classicalField\>\""}], 
             ",", " ", 
             RowBox[{"\"\<indices\>\"", "->", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"classicalActionEntry", "[", 
                 RowBox[{"[", "#", "]"}], "]"}], "[", 
                RowBox[{"Unique", "[", "Global`a83", "]"}], "]"}], "}"}]}]}], 
            "|>"}], ")"}], "&"}], "/@", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "@", "classicalActionEntry"}], "]"}]}]}], ";", 
       "\n", "\n", 
       RowBox[{"objectsIndices", " ", "=", " ", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"Reverse", "@", 
           RowBox[{"objectList", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "\"\<indices\>\""}], "]"}], "]"}]}], "]"}], 
         "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", "\n", "\n", 
       RowBox[{"prefac", " ", "=", " ", 
        RowBox[{"getPrefactor", "[", "classicalActionEntry", "]"}]}], ";", 
       "\n", "\n", 
       RowBox[{"fullObjectList", " ", "=", " ", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<Prefactor\>\"", "->", " ", 
             RowBox[{"{", "prefac", "}"}]}], ",", 
            RowBox[{"<|", 
             RowBox[{
              RowBox[{"\"\<type\>\"", "->", "\"\<nPoint\>\""}], ",", 
              RowBox[{"\"\<indices\>\"", "->", "objectsIndices"}], ",", 
              RowBox[{"\"\<nPoint\>\"", "->", " ", 
               RowBox[{"Length", "@", "objectList"}]}], ",", 
              RowBox[{"\"\<spec\>\"", "->", "\"\<classical\>\""}]}], "|>"}]}],
            "}"}], ",", "objectList"}], "]"}]}], ";", "\n", "\n", 
       RowBox[{"Return", "[", "fullObjectList", "]"}]}]}], "\n", 
     "]"}]}]}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"ae25b815-5151-46d4-a716-2aa43b441df1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"get", " ", "correct", " ", 
    RowBox[{"1", "/", 
     RowBox[{"n", "!"}]}], " ", "prefactors"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"Clear", "[", "getPrefactor", "]"}], "\n", 
   RowBox[{
    RowBox[{"getPrefactor", "[", "classicalActionEntry_", "]"}], " ", ":=", 
    " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"modFieldList", ",", "prefacList", ",", "prefac"}], "}"}], ",",
       "\n", "\n", 
      RowBox[{
       RowBox[{"modFieldList", " ", "=", " ", 
        RowBox[{"Split", "[", "classicalActionEntry", "]"}]}], ";", "\n", 
       RowBox[{"prefacList", " ", "=", " ", 
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "#", "]"}], "&"}], "/@", 
             "modFieldList"}], ")"}], "!"}], ")"}]}]}], ";", "\n", 
       RowBox[{"prefac", " ", "=", " ", 
        RowBox[{"Times", "@@", "prefacList"}]}], ";", "\n", 
       RowBox[{"Return", "[", "prefac", "]"}]}]}], "\n", "]"}]}]}]}]], "Input",\

 InitializationCell->
  True,ExpressionUUID->"e6481881-d841-4f49-8053-bcec4792828c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"get", " ", "correct", " ", 
    RowBox[{"1", "/", 
     RowBox[{"n", "!"}]}], " ", "prefactors"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"Clear", "[", "getSign", "]"}], "\n", 
   RowBox[{
    RowBox[{"getSign", "[", "classicalActionEntry_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "sign", "}"}], ",", "\n", "\n", 
      RowBox[{
       RowBox[{"sign", " ", "=", " ", 
        RowBox[{
        "generatePrefacCombinations", "[", "classicalActionEntry", "]"}]}], 
       ";", "\n", "\n", 
       RowBox[{"Return", "[", "sign", "]"}]}]}], "\n", "]"}]}]}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"c3a8aa4a-ad65-4395-964a-0d4c62acaa3d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "generate", " ", "the", " ", "classical", " ", "action", " ", "in", " ", 
    "operator", " ", "and", " ", "list", " ", "form", " ", "form", " ", 
    "with", " ", "superfield", " ", "indices"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"Clear", "[", "generatePrefacCombinations", "]"}], "\n", 
   RowBox[{
    RowBox[{"generatePrefacCombinations", "[", "classicalActionEntry_", "]"}],
     " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\n", "\t", 
      RowBox[{"generatePrefacCombinations", "[", 
       RowBox[{"classicalActionEntry", ",", 
        RowBox[{"{", "}"}]}], "]"}]}], "\n", "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"generatePrefacCombinations", "[", 
     RowBox[{"classicalActionEntry_", ",", "prefac_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"newCombinations", ",", "newactionList", ",", "combinations"}],
        "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"newactionList", "=", " ", 
        RowBox[{"classicalActionEntry", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", 
           RowBox[{"-", "2"}]}], "]"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"newCombinations", " ", "=", " ", 
        RowBox[{"Tuples", "[", 
         RowBox[{"{", 
          RowBox[{"newactionList", ",", 
           RowBox[{"classicalActionEntry", "[", 
            RowBox[{"[", 
             RowBox[{"{", 
              RowBox[{"-", "1"}], "}"}], "]"}], "]"}]}], "}"}], "]"}]}], ";", 
       "\n", "\t", 
       RowBox[{"combinations", "  ", "=", " ", 
        RowBox[{"Join", "[", 
         RowBox[{"prefac", ",", "newCombinations"}], "]"}]}], ";", "\n", "\n",
        "\t", 
       RowBox[{"generatePrefacCombinations", "[", 
        RowBox[{"newactionList", ",", "combinations"}], "]"}]}]}], "\n", 
     "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"generatePrefacCombinations", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "actionList_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\n", "\t", 
      RowBox[{"Return", "[", "actionList", "]"}]}], "\n", 
     "]"}]}]}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"67b730f8-9986-4b99-b497-c5c63cd307e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Take First Field Derivative", "Subsection",ExpressionUUID->"322bda9f-50ab-43c5-a83a-2eab82cec10b"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "takeFieldDerivative", "]"}], "\n", 
 RowBox[{
  RowBox[{"takeFieldDerivative", "[", 
   RowBox[{"fullClassicalAction_", ",", "firstDerivative_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\n", 
    RowBox[{"takeFieldDerivative", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "fullClassicalAction", ",", 
      "firstDerivative"}], "]"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"takeFieldDerivative", "[", 
   RowBox[{
   "derAction_", ",", "restClassicalAction_", ",", "firstDerivative_"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"newDerAction", ",", "newrestClassicalAction"}], "}"}], ",", 
    "\n", "\n", 
    RowBox[{
     RowBox[{"newrestClassicalAction", " ", "=", " ", 
      RowBox[{"restClassicalAction", "[", 
       RowBox[{"[", 
        RowBox[{"2", ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", "\n", "\n", 
     RowBox[{"newDerAction", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{"derAction", ",", 
        RowBox[{"takeOneFieldDerivative", "[", 
         RowBox[{
          RowBox[{"restClassicalAction", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "firstDerivative"}], "]"}]}], 
       "]"}]}], ";", "\n", 
     RowBox[{"takeFieldDerivative", "[", 
      RowBox[{
      "newDerAction", ",", "newrestClassicalAction", ",", "firstDerivative"}],
       "]"}]}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"takeFieldDerivative", "[", 
   RowBox[{"derAction_", ",", 
    RowBox[{"{", "}"}], ",", "firstDerivative_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\n", 
    RowBox[{"Return", "[", "derAction", "]"}]}], "\n", "]"}]}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"31100a2c-a9c4-40d2-8c76-12bc7d70830d"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "takeOneFieldDerivative", "]"}], "\n", 
 RowBox[{
  RowBox[{"takeOneFieldDerivative", "[", 
   RowBox[{"oneActionTerm_", ",", "firstDerivative_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "derTerm", ",", " ", "fieldObject", ",", "derField", ",", "derAction", 
      ",", "deltaIndices", ",", "dummyaaa", ",", "startingPrefactor", ",", 
      "prefactors", ",", "newfullPrefactor"}], "}"}], ",", "\n", "\n", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Length", "@", "firstDerivative"}], ")"}], "==", "0"}], ",", 
       "\n", 
       RowBox[{
        RowBox[{"derField", " ", "=", " ", "firstDerivative"}], ";"}], "\n", 
       ",", "\n", 
       RowBox[{
        RowBox[{"derField", " ", "=", " ", 
         RowBox[{"Head", "@", "firstDerivative"}]}], ";"}]}], "\n", "]"}], 
     ";", "\n", "\n", 
     RowBox[{"startingPrefactor", " ", "=", " ", 
      RowBox[{"oneActionTerm", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "\n", 
     RowBox[{"derAction", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"fieldObject", " ", "=", 
           RowBox[{"oneActionTerm", "[", 
            RowBox[{"[", 
             RowBox[{"2", "+", "#"}], "]"}], "]"}]}], ";", "\n", "\n", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ToString", "[", 
              RowBox[{"(", 
               RowBox[{"Head", "@", 
                RowBox[{"fieldObject", "[", 
                 RowBox[{"[", 
                  RowBox[{"\"\<indices\>\"", ",", "1"}], "]"}], "]"}]}], 
               ")"}], "]"}], "==", 
             RowBox[{"ToString", "[", "derField", "]"}]}], ",", "\n", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"Length", "@", "firstDerivative"}], ")"}], ">", 
                "0"}], ",", "\n", 
               RowBox[{
                RowBox[{"deltaIndices", " ", "=", " ", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"List", "@@", 
                    RowBox[{"(", 
                    RowBox[{"fieldObject", "[", 
                    RowBox[{"[", 
                    RowBox[{"\"\<indices\>\"", ",", "1"}], "]"}], "]"}], 
                    ")"}]}], ")"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "->", " ", 
                   RowBox[{"(", 
                    RowBox[{"List", "@@", "firstDerivative"}], ")"}]}], 
                  "}"}]}], ";"}], "\n", ",", "\n", "\n", 
               RowBox[{
                RowBox[{"deltaIndices", " ", "=", " ", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"(", 
                    RowBox[{"fieldObject", "[", 
                    RowBox[{"[", 
                    RowBox[{"\"\<indices\>\"", ",", "1"}], "]"}], "]"}], 
                    ")"}], ")"}], "->", " ", 
                   RowBox[{"(", "firstDerivative", ")"}]}], "}"}]}], ";"}]}], 
              "\n", "]"}], ";", "\n", "\n", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"#", "==", "1"}], ",", "\n", 
               RowBox[{
                RowBox[{"prefactors", " ", "=", " ", 
                 RowBox[{"{", "}"}]}], ";"}], "\n", ",", "\n", 
               RowBox[{
                RowBox[{"prefactors", " ", "=", " ", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{
                   RowBox[{"Outer", "[", 
                    RowBox[{"Join", ",", 
                    RowBox[{"oneActionTerm", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"2", "+", "1"}], ";;", 
                    RowBox[{"2", "+", "#", "-", "1"}]}], ",", 
                    "\"\<indices\>\""}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"{", "firstDerivative", "}"}], "}"}], ",", "1"}], 
                    "]"}], ",", "1"}], "]"}]}], ";"}]}], "\n", "]"}], ";", 
             "\n", "\n", 
             RowBox[{"newfullPrefactor", " ", "=", " ", "startingPrefactor"}],
              ";", "\n", 
             RowBox[{
              RowBox[{"newfullPrefactor", "[", 
               RowBox[{"[", "2", "]"}], "]"}], " ", "=", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"startingPrefactor", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", "prefactors"}], "]"}]}],
              ";", "\n", "\n", 
             RowBox[{
              RowBox[{
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"{", "newfullPrefactor", "}"}], ",", 
                 RowBox[{"oneActionTerm", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ";;", 
                    RowBox[{"2", "+", "#", "-", "1"}]}], "]"}], "]"}], ",", 
                 RowBox[{"oneActionTerm", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"2", "+", "#", "+", "1"}], ";;", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}], "/.", 
               "deltaIndices"}], "/.", 
              RowBox[{
               RowBox[{"derField", "[", 
                RowBox[{"{", "dummyaaa___", "}"}], "]"}], "->", " ", 
               RowBox[{"derField", "[", "dummyaaa", "]"}]}]}]}], "\n", ",", 
            "\n", "Nothing"}], "\n", "]"}]}], "\n", ")"}], "&"}], "/@", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "@", 
         RowBox[{"oneActionTerm", "[", 
          RowBox[{"[", 
           RowBox[{"3", ";;", 
            RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}]}]}], ";", 
     RowBox[{"(*", 
      RowBox[{
      "bc", " ", "first", " ", "entry", " ", "is", " ", "pref", " ", "and", 
       " ", "second", " ", "is", " ", "S"}], "*)"}], "\n", "\n", 
     RowBox[{"Return", "[", "derAction", "]"}]}]}], "\n", "\n", 
   "]"}]}], "\n"}], "Input",
 InitializationCell->
  True,ExpressionUUID->"4c99eb30-559a-4323-913b-8b6aa72c936f"]
}, Closed]],

Cell[CellGroupData[{

Cell["Replace With Expectation Value", "Subsection",ExpressionUUID->"87793f6f-28b0-4190-ad21-4e5635b753fa"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "replaceExpectationValue", "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"replaceExpectationValue", "[", "derAction_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", 
     RowBox[{"replaceExpectationValue", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "derAction"}], "]"}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"replaceExpectationValue", "[", 
   RowBox[{"expDerAction_", ",", " ", "derAction_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "currentTerm", ",", "restDerAction", ",", "replacedTerms", ",", 
      "expDerActionNew"}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"currentTerm", " ", "=", " ", 
      RowBox[{"derAction", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", 
     RowBox[{"restDerAction", " ", "=", " ", 
      RowBox[{"Drop", "[", 
       RowBox[{"derAction", ",", "1"}], "]"}]}], ";", "\n", "\n", 
     RowBox[{"replacedTerms", " ", "=", " ", 
      RowBox[{"replaceOneExpectationValue", "[", "currentTerm", "]"}]}], ";", 
     "\n", "\n", 
     RowBox[{"expDerActionNew", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{"expDerAction", ",", "replacedTerms"}], "]"}]}], ";", "\n", 
     "\n", 
     RowBox[{"replaceExpectationValue", "[", 
      RowBox[{"expDerActionNew", ",", "restDerAction"}], "]"}]}]}], "\n", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"replaceExpectationValue", "[", 
   RowBox[{"expDerAction_", ",", " ", 
    RowBox[{"{", "}"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\n", 
    RowBox[{"Return", "[", "expDerAction", "]"}]}], "\n", "]"}]}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"bfd28cd3-e4a4-4aa9-b03e-471a6a012beb"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "replaceOneExpectationValue", "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"replaceOneExpectationValue", "[", "ActionTerm_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "newActionTerms", "}"}], ",", "\n", "\n", 
     RowBox[{
      RowBox[{"newActionTerms", " ", "=", " ", 
       RowBox[{
       "scanForFirstClassicalFieldAndReplace", "[", "ActionTerm", "]"}]}], 
      ";", "\n", "\n", 
      RowBox[{"replaceOneExpectationValue", "[", 
       RowBox[{
        RowBox[{"{", "}"}], ",", "newActionTerms"}], "]"}]}]}], "\n", "]"}]}],
   "\n"}], "\n", 
 RowBox[{
  RowBox[{"replaceOneExpectationValue", "[", 
   RowBox[{"replacedActionTerms_", ",", " ", "ActionTerm_"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "currentActionTerm", " ", ",", "restActionTerm", ",", "newActionTerms", 
      ",", "replacedActionTermsNew", ",", "restActionTermNew"}], "}"}], ",", 
    "\n", 
    RowBox[{
     RowBox[{"currentActionTerm", " ", "=", " ", 
      RowBox[{"ActionTerm", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", 
     RowBox[{"restActionTerm", " ", "=", " ", 
      RowBox[{"Drop", "[", 
       RowBox[{"ActionTerm", ",", "1"}], "]"}]}], ";", "\n", "\n", 
     RowBox[{"newActionTerms", " ", "=", " ", 
      RowBox[{
      "scanForFirstClassicalFieldAndReplace", "[", "currentActionTerm", 
       "]"}]}], ";", "\n", "\n", "\n", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"newActionTerms", " ", "==", " ", "currentActionTerm"}], ",", 
       "\n", "\n", 
       RowBox[{
        RowBox[{"replacedActionTermsNew", " ", "=", " ", 
         RowBox[{"Join", "[", 
          RowBox[{"replacedActionTerms", ",", 
           RowBox[{"{", "newActionTerms", "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"restActionTermNew", " ", "=", " ", "restActionTerm"}], ";"}],
        "\n", ",", "\n", "\n", 
       RowBox[{
        RowBox[{"restActionTermNew", " ", "=", " ", 
         RowBox[{"Join", "[", 
          RowBox[{"newActionTerms", ",", "restActionTerm"}], "]"}]}], ";", 
        "\n", 
        RowBox[{
        "replacedActionTermsNew", " ", "=", " ", "replacedActionTerms"}], 
        ";"}]}], "\n", "]"}], ";", "\n", "\n", "\n", 
     RowBox[{"replaceOneExpectationValue", "[", 
      RowBox[{"replacedActionTermsNew", ",", "restActionTermNew"}], "]"}]}]}],
    "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"replaceOneExpectationValue", "[", 
   RowBox[{"expDerAction_", ",", " ", 
    RowBox[{"{", "}"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\n", 
    RowBox[{"Return", "[", "expDerAction", "]"}]}], "\n", "]"}]}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"12af5cf8-4b49-4e2b-96be-0e2a4aa8f6cf"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "scanForFirstClassicalFieldAndReplace", "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"scanForFirstClassicalFieldAndReplace", "[", "ActionTerm_", "]"}], 
   ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "iter", ",", " ", "positionFirstClField", ",", "newActionTerms", ",", 
       "dummyIndex", ",", " ", "newExpFieldObject", ",", " ", "newPropObject",
        ",", " ", "newDerObject"}], "}"}], ",", "\n", "\n", 
     RowBox[{
      RowBox[{"positionFirstClField", " ", "=", " ", "0"}], ";", "\n", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"iter", " ", "=", " ", "2"}], ",", " ", 
        RowBox[{"iter", " ", "<=", " ", 
         RowBox[{"Length", "@", "ActionTerm"}]}], ",", " ", 
        RowBox[{"iter", "++"}], ",", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"StringMatchQ", "[", 
            RowBox[{
             RowBox[{"ActionTerm", "[", 
              RowBox[{"[", 
               RowBox[{"iter", ",", "\"\<type\>\""}], "]"}], "]"}], ",", 
             "\"\<classicalField\>\""}], "]"}], "==", "True"}], ",", "\n", 
          RowBox[{
           RowBox[{"positionFirstClField", " ", "=", " ", "iter"}], ";", "\n", 
           RowBox[{"iter", " ", "=", " ", 
            RowBox[{"Length", "@", "ActionTerm"}]}], ";"}]}], "\n", "]"}]}], 
       "\n", "]"}], ";", "\n", "\n", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"positionFirstClField", "==", "0"}], ",", "\n", "\n", 
        RowBox[{"Return", "[", "ActionTerm", "]"}], "\n", ",", "\n", 
        RowBox[{
         RowBox[{"newExpFieldObject", " ", "=", " ", 
          RowBox[{"ActionTerm", "[", 
           RowBox[{"[", "positionFirstClField", "]"}], "]"}]}], ";", "\n", 
         RowBox[{
          RowBox[{"newExpFieldObject", "[", 
           RowBox[{"[", "\"\<type\>\"", "]"}], "]"}], " ", "=", " ", 
          "\"\<Field\>\""}], ";", "\n", "\n", 
         RowBox[{"dummyIndex", " ", "=", " ", 
          RowBox[{"Unique", "[", "Global`a83", "]"}]}], ";", "\n", "\n", 
         RowBox[{"newPropObject", " ", "=", " ", 
          RowBox[{"ActionTerm", "[", 
           RowBox[{"[", "positionFirstClField", "]"}], "]"}]}], ";", "\n", 
         RowBox[{
          RowBox[{"newPropObject", "[", 
           RowBox[{"[", "\"\<type\>\"", "]"}], "]"}], " ", "=", " ", 
          "\"\<Propagator\>\""}], ";", "\n", 
         RowBox[{
          RowBox[{"newPropObject", "[", 
           RowBox[{"[", "\"\<indices\>\"", "]"}], "]"}], " ", "=", " ", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"ActionTerm", "[", 
             RowBox[{"[", 
              RowBox[{"positionFirstClField", ",", "\"\<indices\>\""}], "]"}],
              "]"}], ",", 
            RowBox[{"{", "dummyIndex", "}"}]}], "]"}]}], ";", "\n", 
         RowBox[{"newDerObject", " ", "=", 
          RowBox[{"ActionTerm", "[", 
           RowBox[{"[", "positionFirstClField", "]"}], "]"}]}], ";", "\n", 
         RowBox[{
          RowBox[{"newDerObject", "[", 
           RowBox[{"[", "\"\<type\>\"", "]"}], "]"}], " ", "=", " ", 
          "\"\<DerField\>\""}], ";", "\n", 
         RowBox[{
          RowBox[{"newDerObject", "[", 
           RowBox[{"[", "\"\<indices\>\"", "]"}], "]"}], " ", "=", " ", 
          RowBox[{"{", "dummyIndex", "}"}]}], ";", "\n", "\n", 
         RowBox[{"newActionTerms", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"ActionTerm", "[", 
               RowBox[{"[", 
                RowBox[{"1", ";;", 
                 RowBox[{"positionFirstClField", "-", "1"}]}], "]"}], "]"}], 
              ",", 
              RowBox[{"{", "newExpFieldObject", "}"}], ",", 
              RowBox[{"ActionTerm", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"positionFirstClField", "+", "1"}], ";;", 
                 RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"ActionTerm", "[", 
               RowBox[{"[", 
                RowBox[{"1", ";;", 
                 RowBox[{"positionFirstClField", "-", "1"}]}], "]"}], "]"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"newPropObject", ",", "newDerObject"}], "}"}], ",", 
              RowBox[{"ActionTerm", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"positionFirstClField", "+", "1"}], ";;", 
                 RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}]}], "}"}]}], ";", 
         "\n", 
         RowBox[{"Return", "[", "newActionTerms", "]"}]}]}], "\n", "]"}]}]}], 
    "\n", "]"}]}], "\n"}], "\n"}], "Input",
 InitializationCell->
  True,ExpressionUUID->"bb875bb7-8ff2-463f-9454-5bb6bd163c89"]
}, Closed]],

Cell[CellGroupData[{

Cell["Take Final Derivatives", "Subsection",ExpressionUUID->"487e1efe-049a-4710-9a9a-606fd7d8e20b"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "takeFinalFieldDerivatives", "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"takeFinalFieldDerivatives", "[", "ActionTerms_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", 
     RowBox[{"takeFinalFieldDerivatives", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "ActionTerms"}], "]"}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"takeFinalFieldDerivatives", "[", 
   RowBox[{"DerActionTerms_", ",", " ", "ActionTerms_"}], "]"}], " ", ":=", 
  " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "currentActionTerm", ",", "DerActionTermsNew", ",", "ActionTermsNew", 
      ",", "newDerTerm", ",", "ActionTermsNewAll"}], "}"}], ",", "\n", "\n", 
    RowBox[{
     RowBox[{"currentActionTerm", " ", "=", " ", 
      RowBox[{"ActionTerms", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", 
     RowBox[{"ActionTermsNew", " ", "=", " ", 
      RowBox[{"Drop", "[", 
       RowBox[{"ActionTerms", ",", "1"}], "]"}]}], ";", "\n", "\n", "\n", 
     "\n", 
     RowBox[{"newDerTerm", " ", "=", " ", 
      RowBox[{
      "takeOneFinalFieldDerivative", "[", "currentActionTerm", "]"}]}], ";", 
     "\n", "\n", "\n", 
     RowBox[{"Switch", "[", 
      RowBox[{"newDerTerm", " ", ",", "\n", " ", 
       RowBox[{"{", "}"}], ",", 
       RowBox[{
        RowBox[{"DerActionTermsNew", " ", "=", " ", 
         RowBox[{"Join", "[", 
          RowBox[{"DerActionTerms", ",", "newDerTerm"}], "]"}]}], ";", "\n", 
        "\t\t\t\t", 
        RowBox[{"ActionTermsNewAll", " ", "=", " ", "ActionTermsNew"}], ";"}],
        "\n", "\t\t\t\t", "\n", ",", "\n", " ", 
       RowBox[{"{", "currentActionTerm", "}"}], ",", 
       RowBox[{
        RowBox[{"DerActionTermsNew", " ", "=", " ", 
         RowBox[{"Join", "[", 
          RowBox[{"DerActionTerms", ",", "newDerTerm"}], "]"}]}], ";", "\n", 
        "\t\t\t\t\t", 
        RowBox[{"ActionTermsNewAll", " ", "=", " ", "ActionTermsNew"}], ";"}],
        "\n", "\t\t\t\t\t", "\n", ",", "\n", "_", ",", "   ", "\n", 
       RowBox[{
        RowBox[{"ActionTermsNewAll", " ", "=", " ", 
         RowBox[{"Join", "[", 
          RowBox[{"newDerTerm", ",", "ActionTermsNew"}], "]"}]}], ";", "\n", 
        "\t", 
        RowBox[{"DerActionTermsNew", " ", "=", " ", "DerActionTerms"}], 
        ";"}]}], "\n", "\t", "\n", "]"}], ";", "\n", "\n", "\n", "\n", 
     RowBox[{"takeFinalFieldDerivatives", "[", 
      RowBox[{"DerActionTermsNew", ",", "ActionTermsNewAll"}], "]"}]}]}], 
   "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"takeFinalFieldDerivatives", "[", 
   RowBox[{"DerActionTerms_", ",", " ", 
    RowBox[{"{", "}"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\n", 
    RowBox[{"Return", "[", "DerActionTerms", "]"}]}], "\n", "]"}]}]}], "Input",\

 InitializationCell->
  True,ExpressionUUID->"0fcdf26b-bbc1-4882-8ec5-d1067e92cea6"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "takeOneFinalFieldDerivative", "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"takeOneFinalFieldDerivative", "[", "ActionTerm_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "newActionTerms", "}"}], ",", "\n", "\n", 
     RowBox[{
      RowBox[{"newActionTerms", " ", "=", " ", 
       RowBox[{"scanForLastDerAndReplace", "[", "ActionTerm", "]"}]}], ";", 
      "\n", "\n", 
      RowBox[{"takeOneFinalFieldDerivative", "[", 
       RowBox[{
        RowBox[{"{", "}"}], ",", "newActionTerms"}], "]"}]}]}], "\n", "]"}]}],
   "\n"}], "\n", 
 RowBox[{
  RowBox[{"takeOneFinalFieldDerivative", "[", 
   RowBox[{"replacedActionTerms_", ",", " ", "ActionTerm_"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "currentActionTerm", " ", ",", "restActionTerm", ",", "newActionTerms", 
      ",", "replacedActionTermsNew"}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"currentActionTerm", " ", "=", " ", 
      RowBox[{"ActionTerm", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", 
     RowBox[{"restActionTerm", " ", "=", " ", 
      RowBox[{"Drop", "[", 
       RowBox[{"ActionTerm", ",", "1"}], "]"}]}], ";", "\n", "\n", 
     RowBox[{"newActionTerms", " ", "=", " ", 
      RowBox[{"scanForLastDerAndReplace", "[", "currentActionTerm", "]"}]}], 
     ";", "\n", "\n", "\n", "\n", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"newActionTerms", " ", "==", " ", 
        RowBox[{"{", "currentActionTerm", "}"}]}], ",", "\n", 
       RowBox[{
        RowBox[{"replacedActionTermsNew", " ", "=", " ", 
         RowBox[{"Join", "[", 
          RowBox[{"replacedActionTerms", ",", "newActionTerms"}], "]"}]}], 
        ";"}], "\n", "\n", ",", "\n", "\n", 
       RowBox[{
        RowBox[{"restActionTerm", " ", "=", " ", 
         RowBox[{"Join", "[", 
          RowBox[{"newActionTerms", ",", "restActionTerm"}], "]"}]}], ";", 
        "\n", 
        RowBox[{
        "replacedActionTermsNew", " ", "=", " ", "replacedActionTerms"}], 
        ";"}]}], "\n", "\n", "]"}], ";", "\n", "\n", 
     RowBox[{"takeOneFinalFieldDerivative", "[", 
      RowBox[{"replacedActionTermsNew", ",", "restActionTerm"}], "]"}]}]}], 
   "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"takeOneFinalFieldDerivative", "[", 
   RowBox[{"expDerAction_", ",", " ", 
    RowBox[{"{", "}"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\n", 
    RowBox[{"Return", "[", "expDerAction", "]"}]}], "\n", "]"}]}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"494f43e0-fbec-48ff-9f49-7d2b1013ccbe"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "scanForLastDerAndReplace", "]"}], "\n", 
 RowBox[{
  RowBox[{"scanForLastDerAndReplace", "[", "ActionTerm_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "iter", ",", " ", "positionLastDer", ",", "newActionTerms", ",", 
      "dummyIndex", ",", " ", "newExpFieldObject", ",", " ", "newPropObject", 
      ",", " ", "newDerObject"}], "}"}], ",", "\n", "\n", 
    RowBox[{
     RowBox[{"positionLastDer", " ", "=", " ", "0"}], ";", "\n", "\n", "\n", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"iter", " ", "=", " ", 
        RowBox[{"Length", "@", "ActionTerm"}]}], ",", " ", 
       RowBox[{"iter", " ", ">=", " ", "2"}], ",", " ", 
       RowBox[{"iter", "--"}], ",", "\n", "\n", "\n", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"StringMatchQ", "[", 
           RowBox[{
            RowBox[{"ActionTerm", "[", 
             RowBox[{"[", 
              RowBox[{"iter", ",", "\"\<type\>\""}], "]"}], "]"}], ",", 
            "\"\<DerField\>\""}], "]"}], "==", "True"}], ",", "\n", "\n", 
         RowBox[{
          RowBox[{"positionLastDer", " ", "=", " ", "iter"}], ";", "\n", 
          RowBox[{"iter", " ", "=", " ", "2"}], ";"}]}], "\n", "\n", "]"}]}], 
      "\n", "]"}], ";", "\n", "\n", "\n", "\n", 
     RowBox[{"Switch", "[", 
      RowBox[{"positionLastDer", ",", "\n", "0", ",", "\n", "\t", 
       RowBox[{"Return", "[", 
        RowBox[{"{", "ActionTerm", "}"}], "]"}], ",", "\n", "\n", 
       RowBox[{"Length", "@", "ActionTerm"}], ",", "\n", "\t", 
       RowBox[{"Return", "[", 
        RowBox[{"{", "Nothing", "}"}], "]"}], ",", "\n", "\n", "_", ",", "\n",
        "\t", 
       RowBox[{
        RowBox[{"newActionTerms", " ", "=", " ", 
         RowBox[{"takeRightDer", "[", 
          RowBox[{"ActionTerm", ",", "positionLastDer"}], "]"}]}], ";", "\n", 
        "\n", 
        RowBox[{"Return", "[", "newActionTerms", "]"}]}]}], "\n", "]"}]}]}], 
   "\n", "]"}]}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"ea263f90-1210-4d72-b189-bcadcbb1b5c6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "I", " ", "have", " ", "no", " ", "idea", " ", "if", " ", "these", " ", 
    "prefactors", " ", "are", " ", "correct", " ", "or", " ", "consistent", 
    " ", "with", " ", "the", " ", "rest"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"Clear", "[", "takeRightDer", "]"}], "\n", 
   RowBox[{
    RowBox[{"takeRightDer", "[", 
     RowBox[{"ActionTerm_", ",", "positionLastDer_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "positionFields", ",", "newOneActionTerm", ",", "newActionTerms", ",", 
        "iter", ",", "replacementrules", ",", "dummyIndexProp1", ",", 
        "dummyIndexProp2"}], "}"}], ",", "\n", "\n", 
      RowBox[{
       RowBox[{"positionFields", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Switch", "[", 
            RowBox[{
             RowBox[{"ActionTerm", "[", 
              RowBox[{"[", 
               RowBox[{"#", ",", "\"\<type\>\""}], "]"}], "]"}], ",", "\n", 
             "\"\<Field\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"#", ",", "\"\<Field\>\""}], "}"}], ",", "\n", 
             "\"\<Propagator\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"#", ",", "\"\<Propagator\>\""}], "}"}], ",", "\n", 
             "   ", "\"\<nPoint\>\"", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"ActionTerm", "[", 
                 RowBox[{"[", 
                  RowBox[{"#", ",", "\"\<spec\>\""}], "]"}], "]"}], "==", 
                "\"\<none\>\""}], ",", 
               RowBox[{"{", 
                RowBox[{"#", ",", "\"\<nPoint\>\""}], "}"}]}], "]"}]}], "\n", 
            "]"}], ")"}], "&"}], "/@", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"Length", "@", "ActionTerm"}], ",", 
           RowBox[{"positionLastDer", "+", "1"}], ",", 
           RowBox[{"-", "1"}]}], "]"}]}]}], ";", "\n", "\n", "\t", "\n", 
       RowBox[{"newActionTerms", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"(", "\n", 
           RowBox[{
            RowBox[{"iter", " ", "=", " ", 
             RowBox[{"positionFields", "[", 
              RowBox[{"[", 
               RowBox[{"#", ",", "1"}], "]"}], "]"}]}], ";", "\n", "\n", 
            RowBox[{"Switch", "[", 
             RowBox[{
              RowBox[{"positionFields", "[", 
               RowBox[{"[", 
                RowBox[{"#", ",", "2"}], "]"}], "]"}], ",", "\n", 
              "\"\<Field\>\"", ",", "\n", "\t", "\n", "\t", 
              RowBox[{
               RowBox[{"newOneActionTerm", " ", "=", " ", 
                RowBox[{"Join", "[", 
                 RowBox[{
                  RowBox[{"ActionTerm", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ";;", 
                    RowBox[{"positionLastDer", "-", "1"}]}], "]"}], "]"}], 
                  ",", 
                  RowBox[{"ActionTerm", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"positionLastDer", "+", "1"}], ";;", 
                    RowBox[{"iter", "-", "1"}]}], "]"}], "]"}], ",", 
                  RowBox[{"ActionTerm", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"iter", "+", "1"}], ";;", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}]}], ";", "\n", 
               "\t", 
               RowBox[{
                RowBox[{"newOneActionTerm", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", "=", " ", 
                RowBox[{"Join", "[", 
                 RowBox[{
                  RowBox[{"ActionTerm", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
                  RowBox[{"Tuples", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ActionTerm", "[", 
                    RowBox[{"[", 
                    RowBox[{"positionLastDer", ",", "\"\<indices\>\""}], 
                    "]"}], "]"}], ",", 
                    RowBox[{"ActionTerm", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"positionLastDer", "+", "1"}], ";;", 
                    RowBox[{"iter", "-", "1"}]}], ",", "\"\<indices\>\""}], 
                    "]"}], "]"}]}], "}"}], "]"}]}], "]"}]}], ";", "\n", "\t", 
               
               RowBox[{"replacementrules", " ", "=", " ", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"ActionTerm", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    "positionLastDer", ",", "\"\<indices\>\"", ",", "1"}], 
                    "]"}], "]"}], "->", " ", 
                  RowBox[{"ActionTerm", "[", 
                   RowBox[{"[", 
                    RowBox[{"iter", ",", "\"\<indices\>\"", ",", "1"}], "]"}],
                    "]"}]}], "}"}]}], ";", "\n", "\n", "\n", "\t", 
               RowBox[{"newOneActionTerm", " ", "=", 
                RowBox[{"newOneActionTerm", "/.", "replacementrules"}]}], 
               ";"}], "\n", "\n", ",", "\n", "\"\<Propagator\>\"", ",", "\n", 
              "\n", "\t", 
              RowBox[{
               RowBox[{"dummyIndexProp1", " ", "=", " ", 
                RowBox[{"Unique", "[", "Global`a83", "]"}]}], ";", "\n", "\t", 
               RowBox[{"dummyIndexProp2", " ", "=", " ", 
                RowBox[{"Unique", "[", "Global`a83", "]"}]}], ";", "\n", "\n",
                "\t", 
               RowBox[{"newOneActionTerm", " ", "=", " ", 
                RowBox[{"Join", "[", 
                 RowBox[{
                  RowBox[{"ActionTerm", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ";;", 
                    RowBox[{"positionLastDer", "-", "1"}]}], "]"}], "]"}], 
                  ",", 
                  RowBox[{"ActionTerm", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"positionLastDer", "+", "1"}], ";;", 
                    RowBox[{"iter", "-", "1"}]}], "]"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"<|", 
                    RowBox[{
                    RowBox[{"\"\<type\>\"", "->", "\"\<Propagator\>\""}], ",", 
                    RowBox[{"\"\<indices\>\"", "->", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ActionTerm", "[", 
                    RowBox[{"[", 
                    RowBox[{"iter", ",", "\"\<indices\>\"", ",", "1"}], "]"}],
                     "]"}], ",", "dummyIndexProp1"}], "}"}]}]}], "|>"}], ",", 
                    
                    RowBox[{"<|", 
                    RowBox[{
                    RowBox[{"\"\<type\>\"", "->", "\"\<nPoint\>\""}], ",", 
                    RowBox[{"\"\<indices\>\"", "->", 
                    RowBox[{"{", 
                    RowBox[{"dummyIndexProp1", ",", 
                    RowBox[{"ActionTerm", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    "positionLastDer", ",", "\"\<indices\>\"", ",", "1"}], 
                    "]"}], "]"}], ",", "dummyIndexProp2"}], "}"}]}], ",", 
                    RowBox[{"\"\<nPoint\>\"", "->", "3"}], ",", 
                    RowBox[{"\"\<spec\>\"", "->", "\"\<none\>\""}]}], "|>"}], 
                    ",", 
                    RowBox[{"<|", 
                    RowBox[{
                    RowBox[{"\"\<type\>\"", "->", "\"\<Propagator\>\""}], ",", 
                    RowBox[{"\"\<indices\>\"", "->", 
                    RowBox[{"{", 
                    RowBox[{"dummyIndexProp2", ",", 
                    RowBox[{"ActionTerm", "[", 
                    RowBox[{"[", 
                    RowBox[{"iter", ",", "\"\<indices\>\"", ",", "2"}], "]"}],
                     "]"}]}], "}"}]}]}], "|>"}]}], "}"}], ",", 
                  RowBox[{"ActionTerm", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"iter", "+", "1"}], ";;", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}]}], ";", "\n", 
               "\n", "\t", 
               RowBox[{
                RowBox[{"newOneActionTerm", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", "=", " ", 
                RowBox[{"Join", "[", 
                 RowBox[{
                  RowBox[{"ActionTerm", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"-", "1"}], "}"}], ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"dummyIndexProp2", ",", "dummyIndexProp2"}], 
                    "}"}], "}"}], ",", 
                  RowBox[{"Tuples", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ActionTerm", "[", 
                    RowBox[{"[", 
                    RowBox[{"positionLastDer", ",", "\"\<indices\>\""}], 
                    "]"}], "]"}], ",", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"ActionTerm", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"positionLastDer", "+", "1"}], ";;", 
                    RowBox[{"iter", "-", "1"}]}], ",", "\"\<indices\>\""}], 
                    "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"ActionTerm", "[", 
                    RowBox[{"[", 
                    RowBox[{"iter", ",", "\"\<indices\>\"", ",", "1"}], "]"}],
                     "]"}], "}"}]}], "]"}]}], "}"}], "]"}]}], "]"}]}], ";"}], 
              "\n", "\t", "\n", ",", "\n", "\"\<nPoint\>\"", ",", "\n", "\n", 
              "\t", 
              RowBox[{
               RowBox[{"newOneActionTerm", " ", "=", " ", "ActionTerm"}], ";",
                "\n", "\t", 
               RowBox[{
                RowBox[{"newOneActionTerm", "[", 
                 RowBox[{"[", 
                  RowBox[{"iter", ",", "\"\<nPoint\>\""}], "]"}], "]"}], " ", 
                "=", " ", 
                RowBox[{
                 RowBox[{"ActionTerm", "[", 
                  RowBox[{"[", 
                   RowBox[{"iter", ",", "\"\<nPoint\>\""}], "]"}], "]"}], "+",
                  "1"}]}], ";", "\n", "\t", 
               RowBox[{
                RowBox[{"newOneActionTerm", "[", 
                 RowBox[{"[", 
                  RowBox[{"iter", ",", "\"\<indices\>\""}], "]"}], "]"}], " ",
                 "=", " ", 
                RowBox[{"Join", "[", 
                 RowBox[{
                  RowBox[{"ActionTerm", "[", 
                   RowBox[{"[", 
                    RowBox[{"iter", ",", "\"\<indices\>\"", ",", "1"}], "]"}],
                    "]"}], ",", 
                  RowBox[{"ActionTerm", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    "positionLastDer", ",", "\"\<indices\>\"", ",", "1"}], 
                    "]"}], "]"}], ",", 
                  RowBox[{"ActionTerm", "[", 
                   RowBox[{"[", 
                    RowBox[{"iter", ",", "\"\<indices\>\"", ",", 
                    RowBox[{"2", ";;", 
                    RowBox[{"-", "1"}]}]}], "]"}], "]"}]}], "]"}]}], ";", 
               "\n", "\n", "\n", "\t", 
               RowBox[{
                RowBox[{"newOneActionTerm", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", "=", " ", 
                RowBox[{"Join", "[", 
                 RowBox[{
                  RowBox[{"ActionTerm", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ActionTerm", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    "positionLastDer", ",", "\"\<indices\>\"", ",", "1"}], 
                    "]"}], "]"}], ",", 
                    RowBox[{"ActionTerm", "[", 
                    RowBox[{"[", 
                    RowBox[{"iter", ",", "\"\<indices\>\"", ",", "1"}], "]"}],
                     "]"}]}], "}"}], "}"}]}], "]"}]}], ";", "\n", "\t", "\n", 
               "\t", 
               RowBox[{"newOneActionTerm", " ", "=", " ", 
                RowBox[{"Drop", "[", 
                 RowBox[{"newOneActionTerm", ",", "positionLastDer"}], 
                 "]"}]}], ";"}]}], "\n", "\t", "\n", "\t", "\n", "\n", "]"}], 
            ";", "\n", "newOneActionTerm"}], "\n", ")"}], "&"}], "/@", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "@", "positionFields"}], "]"}]}]}], ";", "\n", 
       "\n", "\n", 
       RowBox[{"Return", "[", "newActionTerms", "]"}]}]}], "\n", 
     "]"}]}]}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"7192cecc-dee2-4a26-9cc9-251be0e53c51"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Functional Derivatives", "Section",ExpressionUUID->"930ee394-3ff3-484f-9b21-54794df1722b"],

Cell[CellGroupData[{

Cell["Multiple Functional Derivatives", "Subsection",ExpressionUUID->"a2d10372-3b62-4786-8dca-c490b890d1fd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "DerRules", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"works", " ", "for", " ", "regs"}], ",", " ", "regdots", ",", " ",
     "props", ",", " ", "nPoints", ",", " ", "fields"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"DerRules", "[", 
   RowBox[{"operator_", ",", "dummyFieldIndex_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "operatorType", ",", "firstDummyProp", ",", " ", "secondDummyProp", ",", 
      "dummynPoint", ",", "operatorDer", ",", "firstDummyIndices", ",", 
      "secondDummyIndices", ",", " ", "operatorPref", ",", 
      RowBox[{"indexReplacement", " ", "=", " ", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", "\n", "\n", 
    RowBox[{
     RowBox[{"myEcho", "[", 
      RowBox[{"\"\<DerRules\>\"", ",", "1"}], "]"}], ";", "\n", 
     RowBox[{"myEcho", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<operator: \>\"", ",", "operator"}], "}"}], ",", "2"}], 
      "]"}], ";", "\n", "\n", 
     RowBox[{"operatorType", " ", "=", " ", 
      RowBox[{"operator", "[", 
       RowBox[{"[", "\"\<type\>\"", "]"}], "]"}]}], ";", "\n", 
     RowBox[{"myEcho", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<operator type: \>\"", ",", " ", "operatorType"}], "}"}], 
       ",", "3"}], "]"}], ";", "\n", "\n", 
     RowBox[{"firstDummyIndices", " ", "=", " ", 
      RowBox[{"Unique", "[", "Global`a83", "]"}]}], ";", "\n", 
     RowBox[{"secondDummyIndices", " ", "=", " ", 
      RowBox[{"Unique", "[", "Global`a83", "]"}]}], ";", "\n", "\n", 
     RowBox[{"Switch", "[", 
      RowBox[{
      "operatorType", ",", "\n", "\n", "\"\<Regulator\>\"", ",", " ", "\n", 
       RowBox[{
        RowBox[{"operatorDer", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{"{", "\"\<dummyEntry\>\"", "}"}], "}"}]}], ";", " ", "\n", 
        RowBox[{"operatorPref", " ", "=", " ", 
         RowBox[{"{", "0", "}"}]}], ";", " ", "\n", 
        RowBox[{"myEcho", "[", 
         RowBox[{"\"\<Regulator Der\>\"", ",", "2"}], "]"}], ";", " ", "\n", 
        RowBox[{"myEcho", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"operatorPref", ",", "operatorDer"}], "}"}], ",", "3"}], 
         "]"}], ";"}], ",", "\n", "\n", "\"\<Regulatordot\>\"", ",", " ", 
       "\n", 
       RowBox[{
        RowBox[{"operatorDer", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{"{", "\"\<dummyEntry\>\"", "}"}], "}"}]}], ";", " ", "\n", 
        RowBox[{"operatorPref", " ", "=", " ", 
         RowBox[{"{", "0", "}"}]}], ";", "\n", 
        RowBox[{"myEcho", "[", 
         RowBox[{"\"\<Regulatordot Der\>\"", ",", "2"}], "]"}], ";", " ", 
        "\n", 
        RowBox[{"myEcho", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"operatorPref", ",", "operatorDer"}], "}"}], ",", "3"}], 
         "]"}], ";"}], ",", "\n", "\n", "\n", "\"\<Propagator\>\"", ",", " ", 
       "\n", 
       RowBox[{
        RowBox[{"firstDummyProp", " ", "=", " ", "operator"}], ";", "\n", 
        RowBox[{
         RowBox[{"firstDummyProp", "[", 
          RowBox[{"[", 
           RowBox[{"\"\<indices\>\"", ",", "2"}], "]"}], "]"}], "=", 
         "firstDummyIndices"}], ";", "\n", 
        RowBox[{"secondDummyProp", " ", "=", " ", "operator"}], ";", "\n", 
        RowBox[{
         RowBox[{"secondDummyProp", "[", 
          RowBox[{"[", 
           RowBox[{"\"\<indices\>\"", ",", "1"}], "]"}], "]"}], "=", 
         "secondDummyIndices"}], ";", "\n", 
        RowBox[{"dummynPoint", " ", "=", " ", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<type\>\"", "->", " ", "\"\<nPoint\>\""}], ",", " ", 
           RowBox[{"\"\<indices\>\"", "->", " ", 
            RowBox[{"Table", "[", 
             RowBox[{"Null", ",", "3"}], "]"}]}], ",", " ", 
           RowBox[{"\"\<nPoint\>\"", "->", " ", "3"}], ",", " ", 
           RowBox[{"\"\<spec\>\"", "->", " ", "\"\<none\>\""}]}], "|>"}]}], 
        ";", "\n", 
        RowBox[{
         RowBox[{
          RowBox[{"dummynPoint", "[", 
           RowBox[{"[", "\"\<indices\>\"", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "=", "firstDummyIndices"}], ";", 
        "\n", 
        RowBox[{
         RowBox[{
          RowBox[{"dummynPoint", "[", 
           RowBox[{"[", "\"\<indices\>\"", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "=", "dummyFieldIndex"}], ";", "\n", 
        RowBox[{
         RowBox[{
          RowBox[{"dummynPoint", "[", 
           RowBox[{"[", "\"\<indices\>\"", "]"}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], "=", "secondDummyIndices"}], ";", 
        "\n", "\n", 
        RowBox[{"operatorDer", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{
          "firstDummyProp", ",", "dummynPoint", ",", "secondDummyProp"}], 
          "}"}]}], ";", "\n", 
        RowBox[{"operatorPref", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"operator", "[", 
              RowBox[{"[", 
               RowBox[{"\"\<indices\>\"", ",", "1"}], "]"}], "]"}], ",", 
             "dummyFieldIndex"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"secondDummyIndices", ",", "secondDummyIndices"}], 
            "}"}]}], "}"}]}], ";", "\n", 
        RowBox[{"myEcho", "[", 
         RowBox[{"\"\<Propagator Der\>\"", ",", "2"}], "]"}], ";", "\n", 
        RowBox[{"myEcho", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"operatorPref", ",", "operatorDer"}], "}"}], ",", "3"}], 
         "]"}], ";"}], " ", ",", "\n", "\n", "\"\<nPoint\>\"", ",", " ", "\n",
        "\n", "\n", 
       RowBox[{
        RowBox[{"Switch", "[", 
         RowBox[{
          RowBox[{"operator", "[", 
           RowBox[{"[", "\"\<spec\>\"", "]"}], "]"}], ",", "\n", "\t", 
          "\"\<none\>\"", ",", "\n", "\t", "\n", "\t\t", 
          RowBox[{
           RowBox[{"dummynPoint", " ", "=", " ", "operator"}], ";", "\n", 
           "\t\t", 
           RowBox[{
            RowBox[{"dummynPoint", "[", 
             RowBox[{"[", "\"\<nPoint\>\"", "]"}], "]"}], " ", "=", " ", 
            RowBox[{
             RowBox[{"operator", "[", 
              RowBox[{"[", "\"\<nPoint\>\"", "]"}], "]"}], "+", "1"}]}], ";", 
           "\n", "\t\t", 
           RowBox[{
            RowBox[{"dummynPoint", "[", 
             RowBox[{"[", "\"\<indices\>\"", "]"}], "]"}], " ", "=", " ", 
            RowBox[{"Table", "[", 
             RowBox[{"Null", ",", 
              RowBox[{
               RowBox[{"operator", "[", 
                RowBox[{"[", "\"\<nPoint\>\"", "]"}], "]"}], "+", "1"}]}], 
             "]"}]}], ";", "\n", "\t\t", 
           RowBox[{
            RowBox[{"dummynPoint", "[", 
             RowBox[{"[", 
              RowBox[{"\"\<indices\>\"", ",", "1"}], "]"}], "]"}], " ", "=", 
            " ", 
            RowBox[{"operator", "[", 
             RowBox[{"[", 
              RowBox[{"\"\<indices\>\"", ",", "1"}], "]"}], "]"}]}], ";", 
           "\n", "\t\t", 
           RowBox[{
            RowBox[{"dummynPoint", "[", 
             RowBox[{"[", 
              RowBox[{"\"\<indices\>\"", ",", "2"}], "]"}], "]"}], " ", "=", 
            " ", "dummyFieldIndex"}], ";", "\n", "\n", "\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"dummynPoint", "[", 
                RowBox[{"[", 
                 RowBox[{"\"\<indices\>\"", ",", "#"}], "]"}], "]"}], " ", 
               "=", "  ", 
               RowBox[{"operator", "[", 
                RowBox[{"[", 
                 RowBox[{"\"\<indices\>\"", ",", 
                  RowBox[{"#", "-", "1"}]}], "]"}], "]"}]}], ")"}], "&"}], "/@", 
            RowBox[{"Table", "[", 
             RowBox[{"i", ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "3", ",", 
                RowBox[{"dummynPoint", "[", 
                 RowBox[{"[", "\"\<nPoint\>\"", "]"}], "]"}]}], "}"}]}], 
             "]"}]}], ";", "\n", "\n", "\t\t", 
           RowBox[{"operatorDer", " ", "=", " ", 
            RowBox[{"{", "dummynPoint", "}"}]}], ";", "\n", "\t\t", 
           RowBox[{"operatorPref", " ", "=", " ", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"dummynPoint", "[", 
                RowBox[{"[", 
                 RowBox[{"\"\<indices\>\"", ",", "1"}], "]"}], "]"}], ",", 
               "dummyFieldIndex"}], "}"}], "}"}]}], ";", "\n", "\t\t", 
           RowBox[{"myEcho", "[", 
            RowBox[{"\"\<nPoint Der\>\"", ",", "2"}], "]"}], ";", "\n", 
           "\t\t", 
           RowBox[{"myEcho", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"operatorPref", ",", "operatorDer"}], "}"}], ",", "3"}],
             "]"}], ";"}], ",", "\n", "\n", "\t", "\"\<BRST\>\"", ",", "\n", 
          "\t\t", 
          RowBox[{
           RowBox[{"dummynPoint", " ", "=", " ", "operator"}], ";", "\n", 
           "\t\t", 
           RowBox[{
            RowBox[{"dummynPoint", "[", 
             RowBox[{"[", "\"\<nPoint\>\"", "]"}], "]"}], " ", "=", " ", 
            RowBox[{
             RowBox[{"operator", "[", 
              RowBox[{"[", "\"\<nPoint\>\"", "]"}], "]"}], "+", "1"}]}], ";", 
           "\n", "\t\t", 
           RowBox[{
            RowBox[{"dummynPoint", "[", 
             RowBox[{"[", "\"\<indices\>\"", "]"}], "]"}], " ", "=", " ", 
            RowBox[{"Table", "[", 
             RowBox[{"Null", ",", 
              RowBox[{
               RowBox[{"operator", "[", 
                RowBox[{"[", "\"\<nPoint\>\"", "]"}], "]"}], "+", "1"}]}], 
             "]"}]}], ";", "\n", "\t\t", 
           RowBox[{
            RowBox[{"dummynPoint", "[", 
             RowBox[{"[", 
              RowBox[{"\"\<indices\>\"", ",", "1"}], "]"}], "]"}], " ", "=", 
            " ", 
            RowBox[{"operator", "[", 
             RowBox[{"[", 
              RowBox[{"\"\<indices\>\"", ",", "1"}], "]"}], "]"}]}], ";", 
           "\n", "\t\t", 
           RowBox[{
            RowBox[{"dummynPoint", "[", 
             RowBox[{"[", 
              RowBox[{"\"\<indices\>\"", ",", "2"}], "]"}], "]"}], " ", "=", 
            " ", "dummyFieldIndex"}], ";", "\n", "\n", "\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"dummynPoint", "[", 
                RowBox[{"[", 
                 RowBox[{"\"\<indices\>\"", ",", "#"}], "]"}], "]"}], " ", 
               "=", "  ", 
               RowBox[{"operator", "[", 
                RowBox[{"[", 
                 RowBox[{"\"\<indices\>\"", ",", 
                  RowBox[{"#", "-", "1"}]}], "]"}], "]"}]}], ")"}], "&"}], "/@", 
            RowBox[{"Table", "[", 
             RowBox[{"i", ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "3", ",", 
                RowBox[{"dummynPoint", "[", 
                 RowBox[{"[", "\"\<nPoint\>\"", "]"}], "]"}]}], "}"}]}], 
             "]"}]}], ";", "\n", "\n", "\t\t", 
           RowBox[{"operatorDer", " ", "=", " ", 
            RowBox[{"{", "dummynPoint", "}"}]}], ";", "\n", "\t\t", 
           RowBox[{"operatorPref", " ", "=", " ", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"dummynPoint", "[", 
                RowBox[{"[", 
                 RowBox[{"\"\<indices\>\"", ",", "1"}], "]"}], "]"}], ",", 
               "dummyFieldIndex"}], "}"}], "}"}]}], ";", "\n", "\t\t", 
           RowBox[{"myEcho", "[", 
            RowBox[{"\"\<nPoint Der\>\"", ",", "2"}], "]"}], ";", "\n", 
           "\t\t", 
           RowBox[{"myEcho", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"operatorPref", ",", "operatorDer"}], "}"}], ",", "3"}],
             "]"}], ";"}], ",", "\n", "\n", "\t", "\"\<classical\>\"", ",", 
          "\n", "\t", "\n", "\t", 
          RowBox[{
           RowBox[{"operatorDer", " ", "=", " ", 
            RowBox[{"{", 
             RowBox[{"{", "\"\<dummyEntry\>\"", "}"}], "}"}]}], ";", " ", 
           "\n", "\t\t", 
           RowBox[{"operatorPref", " ", "=", " ", 
            RowBox[{"{", "0", "}"}]}], ";"}]}], " ", "\n", "\n", "\t\t", 
         "]"}], ";"}], "\n", ",", "\n", "\n", "\"\<Field\>\"", ",", "\n", 
       "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "@", "dummyFieldIndex"}], ">", "0"}], ",", "\n", 
          "\n", "\n", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ToString", "[", 
               RowBox[{"Head", "[", 
                RowBox[{"operator", "[", 
                 RowBox[{"[", 
                  RowBox[{"\"\<indices\>\"", ",", "1"}], "]"}], "]"}], "]"}], 
               "]"}], "==", 
              RowBox[{"ToString", "[", 
               RowBox[{"Head", "[", "dummyFieldIndex", "]"}], "]"}]}], ",", 
             "\n", 
             RowBox[{
              RowBox[{"operatorDer", " ", "=", " ", 
               RowBox[{"{", "}"}]}], ";", "\n", 
              RowBox[{"operatorPref", " ", "=", " ", 
               RowBox[{"{", "1", "}"}]}], ";", " ", "\n", 
              RowBox[{"indexReplacement", " ", "=", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"operator", "[", 
                  RowBox[{"[", 
                   RowBox[{"\"\<indices\>\"", ",", "1"}], "]"}], "]"}], "->", 
                 " ", "dummyFieldIndex"}], "}"}]}], ";"}], "\n", "\n", ",", 
             "\n", 
             RowBox[{
              RowBox[{"operatorDer", " ", "=", " ", 
               RowBox[{"{", 
                RowBox[{"{", "\"\<dummyEntry\>\"", "}"}], "}"}]}], ";", " ", 
              "\n", "\t     ", 
              RowBox[{"operatorPref", " ", "=", " ", 
               RowBox[{"{", "0", "}"}]}], ";"}]}], " ", "\n", "\n", "]"}], 
           ";"}], "\n", ",", "\n", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ToString", "[", 
               RowBox[{"Head", "[", 
                RowBox[{"operator", "[", 
                 RowBox[{"[", 
                  RowBox[{"\"\<indices\>\"", ",", "1"}], "]"}], "]"}], "]"}], 
               "]"}], "==", 
              RowBox[{"ToString", "[", "dummyFieldIndex", "]"}]}], ",", "\n", 
             
             RowBox[{
              RowBox[{"operatorDer", " ", "=", " ", 
               RowBox[{"{", "}"}]}], ";", "\n", 
              RowBox[{"operatorPref", " ", "=", " ", 
               RowBox[{"{", "1", "}"}]}], ";", " ", "\n", 
              RowBox[{"indexReplacement", " ", "=", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"operator", "[", 
                  RowBox[{"[", 
                   RowBox[{"\"\<indices\>\"", ",", "1"}], "]"}], "]"}], "->", 
                 " ", "dummyFieldIndex"}], "}"}]}], ";"}], "\n", "\n", ",", 
             "\n", 
             RowBox[{
              RowBox[{"operatorDer", " ", "=", " ", 
               RowBox[{"{", 
                RowBox[{"{", "\"\<dummyEntry\>\"", "}"}], "}"}]}], ";", " ", 
              "\n", "\t     ", 
              RowBox[{"operatorPref", " ", "=", " ", 
               RowBox[{"{", "0", "}"}]}], ";"}]}], " ", "\n", "\n", "]"}], 
           ";"}]}], "\n", "]"}], ";"}], "\n", ",", "\n", "_", ",", " ", "\n", 
       
       RowBox[{
        RowBox[{"operatorDer", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{"{", "\"\<dummyEntry\>\"", "}"}], "}"}]}], ";", " ", "\n", 
        RowBox[{"operatorPref", " ", "=", " ", 
         RowBox[{"{", "0", "}"}]}], ";", " ", "\n", 
        RowBox[{"myEcho", "[", 
         RowBox[{"\"\<no Der defined for this object\>\"", ",", "2"}], "]"}], 
        ";"}]}], "\n", "]"}], ";", "\n", "\n", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"operatorPref", ",", "operatorDer", ",", "indexReplacement"}], 
       "}"}], "]"}]}]}], "\n", "]"}]}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"62b0f92b-2065-4002-8b62-9944aca7099e"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "MatchDerIndices", "]"}], "\n", 
 RowBox[{
  RowBox[{"MatchDerIndices", "[", 
   RowBox[{"field_", ",", "dummyindex_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "replacementList", "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"myEcho", "[", 
      RowBox[{"\"\<MatchDerIndices\>\"", ",", "2"}], "]"}], ";", "\n", 
     RowBox[{"replacementList", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"dummyindex", "->", "field"}], "}"}]}], ";", "\n", 
     RowBox[{"Return", "[", "replacementList", "]"}]}]}], "\n", 
   "]"}]}], "\n"}], "Input",
 InitializationCell->
  True,ExpressionUUID->"84c53d76-ebdb-4c88-a408-b7a7c72fba33"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "MultiplyFactorsFuncDer", "]"}], "\n", 
 RowBox[{
  RowBox[{"MultiplyFactorsFuncDer", "[", "prefList_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"product", " ", "=", " ", "1"}], ",", " ", 
      RowBox[{"metricfactors", " ", "=", " ", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"myEcho", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<prefactor: \>\"", ",", "prefList"}], "}"}], ",", "3"}], 
      "]"}], ";", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Switch", "[", 
         RowBox[{
          RowBox[{"Head", "[", 
           RowBox[{"prefList", "[", 
            RowBox[{"[", "#", "]"}], "]"}], "]"}], ",", "\n", "\n", "Integer",
           ",", " ", 
          RowBox[{
           RowBox[{"product", " ", "=", " ", 
            RowBox[{"product", "*", " ", 
             RowBox[{"prefList", "[", 
              RowBox[{"[", "#", "]"}], "]"}]}]}], ";"}], ",", "\n", 
          "Rational", ",", " ", 
          RowBox[{
           RowBox[{"product", " ", "=", " ", 
            RowBox[{"product", "*", " ", 
             RowBox[{"prefList", "[", 
              RowBox[{"[", "#", "]"}], "]"}]}]}], ";"}], ",", "\n", "List", 
          ",", " ", 
          RowBox[{
           RowBox[{"metricfactors", " ", "=", " ", 
            RowBox[{"Join", "[", 
             RowBox[{"metricfactors", ",", 
              RowBox[{"{", 
               RowBox[{"prefList", "[", 
                RowBox[{"[", "#", "]"}], "]"}], "}"}]}], "]"}]}], ";"}]}], 
         "\n", "]"}], ")"}], "&"}], "/@", 
      RowBox[{"Table", "[", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "@", "prefList"}]}], "}"}]}], "]"}]}], ";", "\n", 
     
     RowBox[{"myEcho", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<multiplied prefactor: \>\"", ",", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", "product", "}"}], ",", "metricfactors"}], "]"}]}], 
        "}"}], ",", "3"}], "]"}], ";", "\n", 
     RowBox[{"Return", "[", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", "product", "}"}], ",", "metricfactors"}], "]"}], 
      "]"}]}]}], "\n", "]"}]}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"990d6f20-9dc0-4370-98a0-cb8a072efc2c"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "FuncDer", "]"}], "\n", 
 RowBox[{
  RowBox[{"FuncDer", "[", 
   RowBox[{"RHS_", ",", "field_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "dummyFieldIndex", ",", "AllDerivatives", ",", " ", "FirstIndices", ",", 
      " ", "SecondIndices", ",", " ", "ThirdIndices", ",", " ", "dummyEntry", 
      ",", " ", "elements", ",", " ", "elementsPref", ",", " ", 
      "PreviousPref", ",", " ", "ThreePoint", ",", " ", "SecondProp", ",", 
      " ", "nPoint", ",", " ", "nP", ",", " ", "ProductRuleNumber", ",", " ", 
      
      RowBox[{"RHSdummy", " ", "=", " ", "RHS"}], ",", "operatorPref", ",", 
      "operatorDer", ",", "replacementList", ",", "indexReplacement2"}], 
     "}"}], ",", "\n", "\n", "\n", 
    RowBox[{
     RowBox[{"myEcho", "[", 
      RowBox[{"\"\<FuncDer\>\"", ",", "1"}], "]"}], ";", "\n", "\n", 
     RowBox[{"myEcho", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Equation: \>\"", ",", " ", "RHS"}], "}"}], ",", "2"}], 
      "]"}], ";", "\n", "\n", "\n", 
     RowBox[{"dummyFieldIndex", " ", "=", " ", 
      RowBox[{"(*", 
       RowBox[{"Unique", "[", "Global`iext", "]"}], "*)"}], "field"}], ";", 
     "\n", "\n", 
     RowBox[{"AllDerivatives", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{"Null", ",", 
        RowBox[{
         RowBox[{"Length", "@", "RHSdummy"}], "-", "1"}]}], "]"}]}], ";", 
     "     ", 
     RowBox[{"(*", 
      RowBox[{
      "All", " ", "Derivatives", " ", "has", " ", "the", " ", "length", " ", 
       "of", " ", "all", " ", 
       RowBox[{"Props", "/", "nPoints"}], " ", "in", " ", "the", " ", "RHS", 
       " ", "expression"}], "*)"}], "\n", "\n", "\n", 
     RowBox[{"(*", 
      RowBox[{"PreviousPref", ":", " ", 
       RowBox[{"This", " ", "gives", " ", "the", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "^", 
         RowBox[{"(", 
          RowBox[{"field", ",", "field"}], ")"}]}], " ", "factors", " ", "in",
         " ", "the", " ", "prefactor", " ", "from", " ", "the", " ", 
        "permutation", " ", "of", " ", "fields", " ", "in", " ", "the", " ", 
        "derivative", " ", "product", " ", "rule"}]}], "*)"}], "\n", "\n", 
     RowBox[{"PreviousPref", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", "1", "}"}], "}"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{"Null", ",", 
          RowBox[{
           RowBox[{"Length", "@", "RHSdummy"}], "-", "2"}]}], "]"}]}], 
       "]"}]}], ";", "\n", "\n", 
     RowBox[{"(*", 
      RowBox[{
      "change", " ", "this", " ", "according", " ", "to", " ", "the", " ", 
       "starting", " ", "point", " ", "which", " ", "was", " ", "figured", 
       " ", "out", " ", "below"}], "*)"}], "\n", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"RHSdummy", "[", 
              RowBox[{"[", 
               RowBox[{"#", "-", "1"}], "]"}], "]"}], "[", 
             RowBox[{"[", "\"\<type\>\"", "]"}], "]"}], " ", "==", 
            "\"\<Regulator\>\""}], "||", 
           RowBox[{
            RowBox[{
             RowBox[{"RHSdummy", "[", 
              RowBox[{"[", 
               RowBox[{"#", "-", "1"}], "]"}], "]"}], "[", 
             RowBox[{"[", "\"\<type\>\"", "]"}], "]"}], " ", "==", 
            "\"\<Regulatordot\>\""}], "||", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"RHSdummy", "[", 
                RowBox[{"[", 
                 RowBox[{"#", "-", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "\"\<type\>\"", "]"}], "]"}], " ", "==", 
              "\"\<nPoint\>\""}], "&&", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"RHSdummy", "[", 
                RowBox[{"[", 
                 RowBox[{"#", "-", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "\"\<spec\>\"", "]"}], "]"}], " ", "==", 
              "\"\<classical\>\""}]}], ")"}]}], ",", "\n", "\n", 
          RowBox[{
           RowBox[{
            RowBox[{"PreviousPref", "[", 
             RowBox[{"[", "#", "]"}], "]"}], " ", "=", " ", 
            RowBox[{"PreviousPref", "[", 
             RowBox[{"[", 
              RowBox[{"#", "-", "1"}], "]"}], "]"}]}], ";"}], "\n", "\n", ",",
           "\n", "\n", 
          RowBox[{
           RowBox[{
            RowBox[{"PreviousPref", "[", 
             RowBox[{"[", "#", "]"}], "]"}], " ", "=", " ", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"PreviousPref", "[", 
               RowBox[{"[", 
                RowBox[{"#", "-", "1"}], "]"}], "]"}], ",", " ", 
              RowBox[{"Tuples", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"RHSdummy", "[", 
                   RowBox[{"[", 
                    RowBox[{"#", "-", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "\"\<indices\>\"", "]"}], "]"}], ",", 
                 RowBox[{"{", "dummyFieldIndex", "}"}]}], "}"}], "]"}]}], 
             "]"}]}], ";"}]}], "\n", "\n", "]"}], ")"}], "&"}], "/@", 
      RowBox[{"Table", "[", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "3", ",", 
          RowBox[{"Length", "@", "RHS"}]}], "}"}]}], "]"}]}], ";", 
     "             ", "\n", "\n", "\n", "\n", 
     RowBox[{"(*", 
      RowBox[{
      "Check", " ", "for", " ", "each", " ", "master", " ", "equation", " ", 
       "entry", " ", "if", " ", "prop", " ", "or", " ", "nPoint", " ", "and", 
       " ", "find", " ", "derivative", " ", "of", " ", "the", " ", "object"}],
       "*)"}], "\n", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ProductRuleNumber", " ", "=", " ", "#"}], ";", "\n", 
         RowBox[{"myEcho", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<Product Rule No.: \>\"", ",", " ", "#"}], "}"}], ",",
            "3"}], "]"}], ";", "\n", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "operatorPref", ",", "operatorDer", ",", "indexReplacement2"}], 
           "}"}], " ", "=", " ", 
          RowBox[{"DerRules", "[", 
           RowBox[{
            RowBox[{"RHSdummy", "[", 
             RowBox[{"[", "#", "]"}], "]"}], ",", "dummyFieldIndex"}], 
           "]"}]}], ";", "\n", "\n", 
         RowBox[{
          RowBox[{"RHSdummy", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", "=", " ", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"RHS", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", "operatorPref"}], 
           "]"}]}], ";", "\n", "\n", 
         RowBox[{
          RowBox[{"RHSdummy", "[", 
           RowBox[{"[", "#", "]"}], "]"}], " ", "=", " ", "operatorDer"}], 
         ";", "\n", "\n", 
         RowBox[{"RHSdummy", " ", "=", " ", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"RHSdummy", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", 
            RowBox[{"Flatten", "@", 
             RowBox[{"RHSdummy", "[", 
              RowBox[{"[", 
               RowBox[{"2", ";;", 
                RowBox[{"Length", "@", "RHSdummy"}]}], "]"}], "]"}]}]}], 
           "]"}]}], ";", "\n", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "indexReplacement2"}], ">", "0"}], ",", 
           "\n", 
           RowBox[{
            RowBox[{"RHSdummy", " ", "=", " ", 
             RowBox[{"RHSdummy", "/.", "indexReplacement2"}]}], ";"}]}], "\n",
           "]"}], ";", "\n", "\n", "\n", "\n", "\n", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{"{", "RHSdummy", "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", "\"\<dummyEntry\>\"", "}"}], "}"}]}], "]"}], ",", 
           "\n", "Nothing", ",", "\n", "\n", 
           RowBox[{
            RowBox[{
             RowBox[{"RHSdummy", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", "=", " ", 
             RowBox[{"Sort", "[", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"RHSdummy", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
                RowBox[{"PreviousPref", "[", 
                 RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "]"}]}], ";"}]}], 
          "\n", "]"}], ";", "\n", "\n", "\n", 
         RowBox[{
          RowBox[{"AllDerivatives", "[", 
           RowBox[{"[", 
            RowBox[{"ProductRuleNumber", "-", "1"}], "]"}], "]"}], " ", "=", 
          " ", "RHSdummy"}], ";", "\n", "\n", 
         RowBox[{"RHSdummy", " ", "=", " ", "RHS"}], ";"}], "\n", ")"}], 
       "&"}], "/@", 
      RowBox[{"Table", "[", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "2", ",", 
          RowBox[{"Length", "@", "RHSdummy"}]}], "}"}]}], "]"}]}], ";", "\n", 
     "\n", "\n", 
     RowBox[{"myEcho", " ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<All Derivatives: \>\"", ",", "AllDerivatives"}], "}"}], 
       ",", "4"}], "]"}], ";", "\n", "\n", "\n", 
     RowBox[{"replacementList", " ", "=", " ", 
      RowBox[{"MatchDerIndices", "[", 
       RowBox[{"field", ",", "dummyFieldIndex"}], "]"}]}], ";", "\n", "\n", 
     RowBox[{"AllDerivatives", " ", "=", " ", 
      RowBox[{"AllDerivatives", "/.", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "stuff___", ",", "\"\<dummyEntry\>\"", ",", "furtherstuff___"}], 
         "}"}], "->", "Nothing"}]}]}], ";", "\n", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"AllDerivatives", "[", 
          RowBox[{"[", 
           RowBox[{"#", ",", "1", ",", "2"}], "]"}], "]"}], " ", "=", " ", 
         RowBox[{"MultiplyFactorsFuncDer", "[", 
          RowBox[{"AllDerivatives", "[", 
           RowBox[{"[", 
            RowBox[{"#", ",", "1", ",", "2"}], "]"}], "]"}], "]"}]}], ")"}], 
       "&"}], "/@", 
      RowBox[{"Table", "[", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "@", "AllDerivatives"}]}], "}"}]}], "]"}]}], ";", 
     "\n", "\n", "\n", "\n", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"AllDerivatives", ",", " ", "replacementList"}], "}"}], 
      "]"}]}]}], "\n", "]"}]}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"65d6eb88-0d90-4060-a428-1526df649553"]
}, Closed]],

Cell[CellGroupData[{

Cell["Main", "Subsection",ExpressionUUID->"1ba6e94d-5dc4-4734-a238-80cb4c1ea387"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "MultipleFuncDer", "]"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"MultipleFuncDer", "[", 
     RowBox[{"RHSlist_", ",", "fieldlist_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"truefieldlist", ",", " ", "indexOptions"}], "}"}], ",", "\n", 
      
      RowBox[{
       RowBox[{"indexOptions", " ", "=", " ", 
        RowBox[{"fieldlist", "[", 
         RowBox[{"[", "\"\<IndexStructure\>\"", "]"}], "]"}]}], ";", "\n", 
       RowBox[{"truefieldlist", " ", "=", 
        RowBox[{"fieldlist", "[", 
         RowBox[{"[", "\"\<FieldDerivatives\>\"", "]"}], "]"}]}], ";", "\n", 
       "\n", 
       RowBox[{"MultipleFuncDer", "[", 
        RowBox[{"RHSlist", ",", "truefieldlist", ",", " ", 
         RowBox[{"{", "}"}], ",", "indexOptions"}], "]"}]}]}], "\n", "]"}]}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"MultipleFuncDer", "[", 
   RowBox[{"RHSlist_", ",", "fieldlist_"}], "]"}], " ", ":=", " ", 
  RowBox[{"MultipleFuncDer", "[", 
   RowBox[{"RHSlist", ",", "fieldlist", ",", 
    RowBox[{"{", "}"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"MultipleFuncDer", "[", 
   RowBox[{"RHSlist_", ",", "fieldlist_", ",", "replacementList_"}], "]"}], 
  " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "dummysuperindexlist", ",", "firstfield", ",", " ", "newfieldlist", ",", 
      " ", "newRHSlist", ",", "newreplacementList", ",", "intResult"}], "}"}],
     ",", "\n", "\n", 
    RowBox[{
     RowBox[{"myEcho", "[", 
      RowBox[{"\"\<MultipleFuncDer\>\"", ",", "1"}], "]"}], ";", "\n", "\n", 
     RowBox[{"firstfield", " ", "=", " ", 
      RowBox[{"Last", "@", "fieldlist"}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "replaced", " ", "first", " ", "with", " ", "last", " ", "and", " ", 
        "1", " ", "with"}], " ", "-", 
       RowBox[{
       "1", "  ", "to", " ", "get", " ", "correct", " ", "order", " ", "of", 
        " ", "derivatives"}]}], "*)"}], "\n", 
     RowBox[{"newfieldlist", " ", "=", " ", 
      RowBox[{"Drop", "[", 
       RowBox[{"fieldlist", ",", 
        RowBox[{"-", "1"}]}], "]"}]}], ";", "\n", "\n", 
     RowBox[{"(*", 
      RowBox[{
      "check", " ", "if", " ", "its", " ", "still", " ", "the", " ", "master",
        " ", "eq", " ", "or", " ", "already", " ", "a", " ", "list", " ", 
       "of", " ", "list", " ", "of", " ", "func", " ", "ders"}], "*)"}], "\n", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"RHSlist", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", " ", 
         RowBox[{"\"\<Prefactor\>\"", "->", " ", 
          RowBox[{"{", "__", "}"}]}]}], "]"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"myEcho", "[", 
         RowBox[{"\"\<First FuncDer\>\"", ",", "2"}], "]"}], ";", "\n", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"newRHSlist", ",", "newreplacementList"}], "}"}], " ", "=", 
         " ", 
         RowBox[{"FuncDer", "[", 
          RowBox[{"RHSlist", ",", "firstfield"}], "]"}]}], ";"}], "\n", "\n", 
       ",", "\n", "\n", 
       RowBox[{
        RowBox[{"myEcho", "[", 
         RowBox[{"\"\<Further FuncDer\>\"", ",", "2"}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"newRHSlist", " ", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"Null", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "@", "RHSlist"}]}], "}"}]}], "]"}]}], ";", 
        "\n", 
        RowBox[{"newreplacementList", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{"Null", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "@", "RHSlist"}]}], "}"}]}], "]"}]}], ";", 
        "\n", "\n", 
        RowBox[{"intResult", "=", 
         RowBox[{"ParallelMap", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"FuncDer", "[", 
              RowBox[{
               RowBox[{"RHSlist", "[", 
                RowBox[{"[", "#", "]"}], "]"}], ",", "firstfield"}], "]"}], 
             ")"}], "&"}], ",", 
           RowBox[{"Table", "[", 
            RowBox[{"i", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "@", "RHSlist"}]}], "}"}]}], "]"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"newRHSlist", "[", 
               RowBox[{"[", "#", "]"}], "]"}], ",", 
              RowBox[{"newreplacementList", "[", 
               RowBox[{"[", "#", "]"}], "]"}]}], "}"}], " ", "=", " ", 
            RowBox[{"intResult", "[", 
             RowBox[{"[", "#", "]"}], "]"}]}], ")"}], "&"}], "/@", 
         RowBox[{"Table", "[", 
          RowBox[{"i", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "@", "RHSlist"}]}], "}"}]}], "]"}]}], ";", 
        "\n", "\n", 
        RowBox[{"newRHSlist", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{"newRHSlist", ",", "1"}], "]"}]}], ";"}]}], "\n", "]"}], 
     ";", "\n", "\n", 
     RowBox[{"newreplacementList", " ", "=", " ", 
      RowBox[{"Flatten", "@", 
       RowBox[{"Join", "[", 
        RowBox[{"replacementList", ",", " ", "newreplacementList"}], 
        "]"}]}]}], ";", "\n", "\n", 
     RowBox[{"MultipleFuncDer", "[", 
      RowBox[{"newRHSlist", ",", "newfieldlist", ",", "newreplacementList"}], 
      "]"}]}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"MultipleFuncDer", "[", 
   RowBox[{"RHSlist_", ",", 
    RowBox[{"{", "}"}], ",", "newreplacementList_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "finalRHSlist", "}"}], ",", "\n", "\n", 
    RowBox[{
     RowBox[{"finalRHSlist", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"StringContainsQ", "[", 
            RowBox[{
             RowBox[{"ToString", "[", 
              RowBox[{"RHSlist", "[", 
               RowBox[{"[", "#", "]"}], "]"}], "]"}], ",", "\"\<Field\>\""}], 
            "]"}], ",", "\n", "Nothing", ",", "\n", 
           RowBox[{"RHSlist", "[", 
            RowBox[{"[", "#", "]"}], "]"}]}], "\n", "]"}], ")"}], "&"}], "/@", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "@", "RHSlist"}], "]"}]}]}], ";", "\n", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"finalRHSlist", ",", "newreplacementList"}], "}"}], "]"}]}]}], 
   "\n", "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.932229279358633*^9, 3.932229286406495*^9}, {
  3.9322314919748287`*^9, 
  3.9322314995253572`*^9}},ExpressionUUID->"5a2c8237-6ed6-4808-97f4-\
8df24e5e89db"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Superindex Diagrams", "Section",ExpressionUUID->"68d5b923-9dcb-4458-a1a3-9e57cf8c65f1"],

Cell[CellGroupData[{

Cell["Get Fields and Misc", "Subsection",ExpressionUUID->"d3ee7cd2-791c-4dfe-a558-6ea82268fc7e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IndexProjection", "[", 
   RowBox[{"iii_", ",", "jjj_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{"Return", "[", 
     RowBox[{"iii", "->", "jjj"}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"c599140f-ca0a-4b7c-83bd-2e6e3f23fcaf"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "GetFieldsList", "]"}], "\n", 
 RowBox[{
  RowBox[{"GetFieldsList", "[", "fields_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "keys", ",", "bosons", ",", " ", "fermions", ",", " ", "BRSTs", ",", " ",
       "BRSTbosons", ",", " ", "BRSTfermions", ",", "fullList"}], "}"}], ",", 
    "\n", 
    RowBox[{
     RowBox[{"myEcho", "[", 
      RowBox[{"\"\<GetFieldsList\>\"", ",", "1"}], "]"}], ";", "\n", 
     RowBox[{"keys", " ", "=", " ", 
      RowBox[{"Keys", "[", "fields", "]"}]}], ";", "\n", "\n", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{"keys", ",", "\"\<bosonic\>\""}], "]"}], " ", "==", " ", 
        "True"}], ",", "\n", 
       RowBox[{
        RowBox[{"bosons", " ", "=", " ", 
         RowBox[{"Map", "[", 
          RowBox[{"Head", ",", 
           RowBox[{"fields", "[", 
            RowBox[{"[", "\"\<bosonic\>\"", "]"}], "]"}]}], "]"}]}], ";"}], 
       "\n", ",", "\n", 
       RowBox[{
        RowBox[{"bosons", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ";"}]}], "\n", "]"}], ";", "\n", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{"keys", ",", "\"\<fermionic\>\""}], "]"}], " ", "==", " ", 
        "True"}], ",", "\n", 
       RowBox[{
        RowBox[{"fermions", " ", "=", " ", 
         RowBox[{"Map", "[", 
          RowBox[{"Head", ",", 
           RowBox[{"fields", "[", 
            RowBox[{"[", "\"\<fermionic\>\"", "]"}], "]"}], ",", 
           RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\n", ",", "\n", 
       RowBox[{
        RowBox[{"fermions", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ";"}]}], "\n", "]"}], ";", "\n", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{"keys", ",", "\"\<BRSTsources\>\""}], "]"}], "==", " ", 
        "True"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Switch", "[", 
            RowBox[{
             RowBox[{"fields", "[", 
              RowBox[{"[", 
               RowBox[{"\"\<BRSTsources\>\"", ",", "#", ",", "2"}], "]"}], 
              "]"}], ",", "\n", "\"\<bosonic\>\"", ",", " ", "\n", "\t", 
             RowBox[{
              RowBox[{"bosons", " ", "=", " ", 
               RowBox[{"Join", "[", 
                RowBox[{"bosons", ",", 
                 RowBox[{"{", 
                  RowBox[{"fields", "[", 
                   RowBox[{"[", 
                    RowBox[{"\"\<BRSTsources\>\"", ",", "#", ",", "1"}], 
                    "]"}], "]"}], "}"}]}], "]"}]}], ";"}], ",", "\n", 
             "\"\<fermionic\>\"", ",", "\n", "\t", 
             RowBox[{
              RowBox[{"fermions", " ", "=", " ", 
               RowBox[{"Join", "[", 
                RowBox[{"fermions", ",", 
                 RowBox[{"{", 
                  RowBox[{"fields", "[", 
                   RowBox[{"[", 
                    RowBox[{"\"\<BRSTsources\>\"", ",", "#", ",", "1"}], 
                    "]"}], "]"}], "}"}]}], "]"}]}], ";"}]}], "\n", "]"}], 
           "\n", ")"}], "&"}], "/@", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "@", 
           RowBox[{"fields", "[", 
            RowBox[{"[", "\"\<BRSTsources\>\"", "]"}], "]"}]}], "]"}]}], 
        ";"}], "\n", ",", "\n", "Nothing"}], "\n", "]"}], ";", "\n", 
     RowBox[{"fullList", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"bosons", ",", "fermions"}], "}"}]}], ";", "\n", 
     RowBox[{"Return", "[", "fullList", "]"}]}]}], "\n", "]"}]}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"ccd5c48d-1d51-4450-a748-386a2170ed61"]
}, Closed]],

Cell[CellGroupData[{

Cell["Possible Configs", "Subsection",ExpressionUUID->"9c8c0288-4a28-4fa1-adbf-290ca9687bba"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "define", " ", "the", " ", "possible", " ", "propagators", " ", "for", " ",
     "fields"}], "*)"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Adjust", " ", "such", " ", "that", " ", "one", " ", "can", " ", "insert",
      " ", "a", " ", "truncation", " ", 
     RowBox[{"(", "done", ")"}], " ", "and", " ", "vertex", " ", "ordering"}],
     "..."}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"Clear", "[", "getPossibleProps", "]"}], "\n", 
   RowBox[{
    RowBox[{"getPossibleProps", "[", 
     RowBox[{"fields_", ",", "truncation___"}], "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "keys", ",", "bosonicfields", ",", "testbosonicfield", ",", " ", 
        "fermionicfields", ",", 
        RowBox[{"PossibleProps", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"TruncatedPossibleProps", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ",", " ", "PossibleBosonProps", ",", " ", 
        "PossibleFermionProps"}], "}"}], ",", "\n", "\n", 
      RowBox[{
       RowBox[{"myEcho", "[", 
        RowBox[{"\"\<GetPossibleProps\>\"", ",", "1"}], "]"}], ";", "\n", 
       "\n", 
       RowBox[{"keys", " ", "=", " ", 
        RowBox[{"Keys", "[", "fields", "]"}]}], ";", "\n", "\n", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"keys", ",", "\"\<bosonic\>\""}], "]"}], " ", "==", " ", 
          "True"}], ",", "\n", 
         RowBox[{
          RowBox[{"bosonicfields", " ", "=", " ", 
           RowBox[{"Map", "[", 
            RowBox[{"Head", ",", 
             RowBox[{"fields", "[", 
              RowBox[{"[", "\"\<bosonic\>\"", "]"}], "]"}]}], "]"}]}], ";"}], 
         "\n", ",", "\n", 
         RowBox[{
          RowBox[{"bosonicfields", " ", "=", " ", 
           RowBox[{"{", "}"}]}], ";"}]}], "\n", "]"}], ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"keys", ",", "\"\<fermionic\>\""}], "]"}], " ", "==", " ", 
          "True"}], ",", "\n", 
         RowBox[{
          RowBox[{"fermionicfields", " ", "=", " ", 
           RowBox[{"Map", "[", 
            RowBox[{"Head", ",", 
             RowBox[{"fields", "[", 
              RowBox[{"[", "\"\<fermionic\>\"", "]"}], "]"}], ",", 
             RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\n", ",", "\n", 
         RowBox[{
          RowBox[{"fermionicfields", " ", "=", " ", 
           RowBox[{"{", "}"}]}], ";"}]}], "\n", "]"}], ";", "\n", "\n", 
       RowBox[{"PossibleBosonProps", " ", "=", " ", 
        RowBox[{"Permutations", "[", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{"bosonicfields", ",", "bosonicfields"}], "]"}], ",", 
          RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\n", 
       RowBox[{"myEcho", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<Possible Boson Props\>\"", ",", "PossibleBosonProps"}],
           "}"}], ",", "3"}], "]"}], ";", "\n", 
       RowBox[{"PossibleFermionProps", " ", "=", " ", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Tuples", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"fermionicfields", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"fermionicfields", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
          RowBox[{"Map", "[", 
           RowBox[{"Reverse", ",", 
            RowBox[{"Tuples", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"fermionicfields", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"fermionicfields", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}], "]"}], ",",
             "1"}], "]"}]}], "]"}]}], ";", "\n", 
       RowBox[{"myEcho", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<Possible Fermion Props\>\"", ",", "PossibleFermionProps"}], 
          "}"}], ",", "3"}], "]"}], ";", "\n", "\n", "\n", 
       RowBox[{"PossibleProps", " ", "=", " ", 
        RowBox[{"Join", "[", 
         RowBox[{"PossibleBosonProps", ",", "PossibleFermionProps"}], "]"}]}],
        ";", "\n", "        ", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "if", " ", "a", " ", "Truncation", " ", "is", " ", "specified"}], 
         ",", " ", 
         RowBox[{
         "the", " ", "other", " ", "props", " ", "are", " ", "removed"}]}], 
        " ", "*)"}], "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"!", 
         RowBox[{"!", 
          RowBox[{"!", 
           RowBox[{"!", 
            RowBox[{"!", 
             RowBox[{"!", 
              RowBox[{"!", 
               RowBox[{"!", 
                RowBox[{"!", 
                 RowBox[{"!", 
                  RowBox[{"!", 
                   RowBox[{"!", 
                    RowBox[{"!", 
                    RowBox[{"!", 
                    RowBox[{"!", 
                    RowBox[{"!", 
                    RowBox[{"!", 
                    RowBox[{"!", 
                    RowBox[{"!", 
                    RowBox[{"!", 
                    RowBox[{"!", " ", 
                    RowBox[{"does", " ", "this", " ", "still", " ", "work", 
                    RowBox[{"??", 
                    RowBox[{"??", 
                    RowBox[{"?", 
                    RowBox[{"!", 
                    RowBox[{"!", 
                    RowBox[{"!", 
                    RowBox[{"!", 
                    RowBox[{"!", 
                    RowBox[{
                    "!", "!"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}], "*)"}], "\n", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "@", "truncation"}], ">", "0"}], ",", "\n", 
         RowBox[{
          RowBox[{"myEcho", "[", 
           RowBox[{"\"\<Truncate possible props\>\"", ",", "3"}], "]"}], ";", 
          "\n", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{"truncation", ",", 
                 RowBox[{"{", 
                  RowBox[{"OrderlessPatternSequence", "[", 
                   RowBox[{
                    RowBox[{"PossibleProps", "[", 
                    RowBox[{"[", 
                    RowBox[{"#", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"PossibleProps", "[", 
                    RowBox[{"[", 
                    RowBox[{"#", ",", "2"}], "]"}], "]"}]}], "]"}], "}"}]}], 
                "]"}], ",", "\n", 
               RowBox[{
                RowBox[{"TruncatedPossibleProps", " ", "=", " ", 
                 RowBox[{"Join", "[", 
                  RowBox[{"TruncatedPossibleProps", ",", 
                   RowBox[{"{", 
                    RowBox[{"PossibleProps", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "}"}]}], "]"}]}], ";"}], 
               "\n", ",", "\n", "Nothing"}], "\n", "]"}], ")"}], "&"}], "/@", 
           
           RowBox[{"Range", "[", 
            RowBox[{"Length", "@", "PossibleProps"}], "]"}]}], ";", "\n", 
          RowBox[{"PossibleProps", " ", "=", " ", "TruncatedPossibleProps"}], 
          ";", "\n", 
          RowBox[{"myEcho", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<poss props\>\"", ",", "PossibleProps"}], "}"}], ",",
             "3"}], "]"}], ";"}], "\n", ",", "\n", "Nothing"}], "\n", "]"}], 
       ";", "\n", 
       RowBox[{"Return", "[", "PossibleProps", "]"}], ";"}]}], "\n", "]"}], 
    "                                                                         \
              "}]}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"701dbd92-f47c-4823-b517-9baadb5a445b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "get", " ", "an", " ", "assoc", " ", "with", " ", "the", " ", "positions", 
    " ", "of", " ", "objects"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"Clear", "[", "getAllObjectPositionsSuperindex", "]"}], "\n", 
   RowBox[{
    RowBox[{"getAllObjectPositionsSuperindex", "[", "RHSDiagram_", "]"}], ":=",
     " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "props", " ", ",", "regs", ",", " ", "vertices", ",", " ", "classical",
         ",", " ", "brst", ",", "positionAssoc"}], "}"}], ",", "\n", 
      RowBox[{
       RowBox[{"props", " ", "=", " ", 
        RowBox[{"regs", " ", "=", " ", 
         RowBox[{"vertices", " ", "=", " ", 
          RowBox[{"classical", "=", " ", 
           RowBox[{"brst", " ", "=", " ", 
            RowBox[{"{", "}"}]}]}]}]}]}], ";", "\n", "\n", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Switch", "[", 
           RowBox[{
            RowBox[{"RHSDiagram", "[", 
             RowBox[{"[", 
              RowBox[{"#", ",", "\"\<type\>\""}], "]"}], "]"}], ",", "\n", 
            "\"\<Propagator\>\"", ",", 
            RowBox[{
             RowBox[{"props", " ", "=", 
              RowBox[{"Join", "[", 
               RowBox[{"props", ",", 
                RowBox[{"{", "#", "}"}]}], "]"}]}], ";"}], ",", "\n", 
            "\"\<Regulator\>\"", ",", 
            RowBox[{
             RowBox[{"regs", "=", 
              RowBox[{"Join", "[", 
               RowBox[{"regs", ",", 
                RowBox[{"{", "#", "}"}]}], "]"}]}], ";"}], ",", "\n", 
            "\"\<Regulatordot\>\"", ",", 
            RowBox[{
             RowBox[{"regs", "=", 
              RowBox[{"Join", "[", 
               RowBox[{"regs", ",", 
                RowBox[{"{", "#", "}"}]}], "]"}]}], ";"}], ",", "\n", "\n", 
            "\"\<nPoint\>\"", ",", "\n", 
            RowBox[{
             RowBox[{"Switch", "[", 
              RowBox[{
               RowBox[{"RHSDiagram", "[", 
                RowBox[{"[", 
                 RowBox[{"#", ",", "\"\<spec\>\""}], "]"}], "]"}], ",", "\n", 
               "\"\<none\>\"", ",", 
               RowBox[{
                RowBox[{"vertices", "=", " ", 
                 RowBox[{"Join", "[", 
                  RowBox[{"vertices", ",", 
                   RowBox[{"{", "#", "}"}]}], "]"}]}], ";"}], ",", "\n", 
               "\"\<classical\>\"", ",", 
               RowBox[{
                RowBox[{"classical", "=", 
                 RowBox[{"Join", "[", 
                  RowBox[{"classical", ",", 
                   RowBox[{"{", "#", "}"}]}], "]"}]}], ";"}], ",", "\n", 
               "\"\<BRST\>\"", ",", " ", 
               RowBox[{
                RowBox[{"brst", "=", 
                 RowBox[{"Join", "[", 
                  RowBox[{"brst", ",", 
                   RowBox[{"{", "#", "}"}]}], "]"}]}], ";"}]}], "\n", "]"}], 
             ";"}]}], "\n", "]"}], ")"}], "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"2", ",", 
          RowBox[{"Length", "@", "RHSDiagram"}], ",", "1"}], "]"}]}], ";", 
       "\n", "\n", 
       RowBox[{"positionAssoc", " ", "=", " ", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<Propagators\>\"", " ", "->", " ", "props"}], ",", " ", 
          
          RowBox[{"\"\<Regulators\>\"", " ", "->", " ", "regs"}], ",", " ", 
          RowBox[{"\"\<classicalVertices\>\"", "->", " ", "classical"}], ",", 
          
          RowBox[{"\"\<BRSTVertices\>\"", "->", " ", "brst"}], ",", " ", 
          RowBox[{"\"\<Vertices\>\"", "->", " ", "vertices"}]}], "|>"}]}], 
       ";", "\n", "\n", 
       RowBox[{"Return", "[", "positionAssoc", "]"}]}]}], "\n", "]"}], 
    "                                                                         \
              "}]}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"6fdfc5ab-e809-4f1c-9040-df9ab1ac86b0"],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"(*", 
   RowBox[{
   "get", " ", "possible", " ", "index", " ", "configs", " ", "for", " ", 
    "props", " ", "and", " ", "regs"}], "*)"}], " ", "\n", 
  RowBox[{
   RowBox[{"Clear", "[", "getObjectIndexMapping", "]"}], "\n", 
   RowBox[{
    RowBox[{"getObjectIndexMapping", "[", 
     RowBox[{
     "diagram_", ",", "objectPositionAssoc_", ",", "Truncation_", ",", 
      "indexConfigs_", ",", "objectType_", ",", "allfields_"}], "]"}], ":=", 
    " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "objectSuperindices", ",", "possibleSets", ",", "allConfigs", ",", 
        "appliedObjectSuperindices", ",", "fieldHeads", ",", "allConfigsnew", 
        ",", "allIndexConfigs"}], "}"}], ",", "\n", "\n", 
      RowBox[{
       RowBox[{"myEcho", "[", 
        RowBox[{"\"\<getObjectIndexMapping\>\"", ",", "1"}], "]"}], ";", "\n",
        "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"get", " ", "all", " ", "object", " ", "superindices"}], " ", 
        "*)"}], "\n", 
       RowBox[{"objectSuperindices", " ", "=", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"diagram", "[", 
             RowBox[{"[", 
              RowBox[{"#", ",", "\"\<indices\>\""}], "]"}], "]"}], ")"}], 
           "&"}], "/@", 
          RowBox[{"objectPositionAssoc", "[", 
           RowBox[{"[", "objectType", "]"}], "]"}]}], ")"}]}], ";", "\n", 
       "\n", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{
        "map", " ", "superindices", " ", "onto", " ", "possible", " ", 
         "configs"}], " ", "*)"}], "\n", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "@", 
           RowBox[{"objectPositionAssoc", "[", 
            RowBox[{"[", "\"\<Propagators\>\"", "]"}], "]"}]}], ">", "0"}], 
         ",", "\n", "\n", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "@", "objectSuperindices"}], ">", "0"}], ",", 
            "\n", "\n", 
            RowBox[{"(*", " ", 
             RowBox[{
             "hard", " ", "sum", " ", "over", " ", "all", " ", "prop", " ", 
              "and", " ", "reg", " ", "configs", " ", "and", " ", "remove", 
              " ", "impossible", " ", "ones"}], " ", "*)"}], "\n", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"objectType", " ", "==", " ", "\"\<Regulators\>\""}],
                  " ", "||", 
                 RowBox[{
                 "objectType", " ", "==", " ", "\"\<Propagators\>\""}]}], 
                ")"}], ",", "\n", "\n", 
               RowBox[{
                RowBox[{"allConfigs", " ", "=", " ", 
                 RowBox[{"getAllPossibleSets", "[", 
                  RowBox[{"objectSuperindices", ",", "Truncation"}], "]"}]}], 
                ";", "\n", "\n", 
                RowBox[{"(*", " ", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "apply", " ", "previous", " ", "index", " ", "configs", 
                    " ", "and", " ", "remove", " ", "impossible", " ", 
                    "configs"}], " ", "&"}], " ", "check", " ", "if", " ", 
                  "one", " ", "object", " ", "index", " ", "is", " ", 
                  "already", " ", "field", " ", "and", " ", "modify", " ", 
                  "all", " ", "Configs", " ", "accordingly"}], "*)"}], "\n", 
                "\n", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"allConfigs", "==", 
                   RowBox[{"{", "}"}]}], ",", "\n", "\n", 
                  RowBox[{
                   RowBox[{"allIndexConfigs", "=", " ", 
                    RowBox[{"{", "\"\<Null\>\"", "}"}]}], ";"}], "\n", ",", 
                  "\n", "\n", 
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "@", "indexConfigs"}], ">", "0"}], ",", 
                    "\n", "\n", 
                    RowBox[{
                    RowBox[{"appliedObjectSuperindices", " ", "=", " ", 
                    RowBox[{"objectSuperindices", "/.", "indexConfigs"}]}], 
                    ";", "\n", "\n", 
                    RowBox[{"allIndexConfigs", " ", "=", " ", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"checkHeads", "[", 
                    RowBox[{
                    RowBox[{"appliedObjectSuperindices", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], ",", "objectSuperindices",
                     ",", "allConfigs", ",", 
                    RowBox[{"indexConfigs", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], ",", "allfields"}], "]"}],
                     ")"}], "&"}], "/@", 
                    RowBox[{"Range", "[", 
                    RowBox[{"Length", "@", "indexConfigs"}], "]"}]}], ",", 
                    "1"}], "]"}]}], ";"}], "\n", "\n", ",", "\n", "\n", 
                    RowBox[{
                    RowBox[{"allIndexConfigs", " ", "=", " ", 
                    RowBox[{"checkHeads", "[", 
                    RowBox[{
                    "objectSuperindices", ",", "objectSuperindices", ",", 
                    "allConfigs", ",", "indexConfigs", ",", "allfields"}], 
                    "]"}]}], ";"}]}], "\n", "\n", "]"}], ";", "\n", "\n", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"allIndexConfigs", " ", "==", " ", 
                    RowBox[{"{", "}"}]}], ",", "\n", 
                    RowBox[{
                    RowBox[{"allIndexConfigs", "=", " ", 
                    RowBox[{"{", "\"\<Null\>\"", "}"}]}], ";"}]}], "\n", 
                    "]"}], ";"}]}], "\n", "\n", 
                 RowBox[{"(*", 
                  RowBox[{",", "\n", "\n", 
                   RowBox[{
                    RowBox[{
                    "allIndexConfigs", " ", "=", " ", "indexConfigs"}], 
                    ";"}]}], "*)"}], "\n", "\n", "]"}], ";"}], "\n", "\n", 
               "\n", ",", "\n", "\n", 
               RowBox[{"(*", " ", 
                RowBox[{
                 RowBox[{
                 "after", " ", "fixing", " ", "the", " ", "prop", " ", "and", 
                  " ", "reg", " ", "indices"}], ",", " ", 
                 RowBox[{
                 "the", " ", "vertex", " ", "indices", " ", "are", " ", 
                  "automatically", " ", "set", " ", "and", " ", "only", " ", 
                  "need", " ", "to", " ", "be", " ", "compared", " ", "to", 
                  " ", "the", " ", "truncation"}]}], " ", "*)"}], "\n", "\n", 
               
               RowBox[{
                RowBox[{"allConfigs", " ", "=", " ", 
                 RowBox[{"getPossibleVertexList", "[", "Truncation", "]"}]}], 
                ";", "\n", "\n", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"allConfigs", "==", 
                   RowBox[{"{", "}"}]}], ",", "\n", "\n", 
                  RowBox[{
                   RowBox[{"allIndexConfigs", "=", " ", 
                    RowBox[{"{", "\"\<Null\>\"", "}"}]}], ";"}], "\n", "\n", 
                  ",", "\n", "\n", 
                  RowBox[{
                   RowBox[{"appliedObjectSuperindices", " ", "=", " ", 
                    RowBox[{"objectSuperindices", "/.", "indexConfigs"}]}], 
                   ";", "\n", "\n", "\n", "\n", 
                   RowBox[{"(*", " ", 
                    RowBox[{
                    "go", " ", "through", " ", "different", " ", "vertex", 
                    " ", "configs", " ", "and", " ", "then", " ", "through", 
                    " ", "each", " ", "vertex"}], " ", "*)"}], "\n", "\n", 
                   "\n", "\n", 
                   RowBox[{"allIndexConfigs", " ", "=", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"compareAllVertexHeads", "[", 
                    RowBox[{
                    RowBox[{"appliedObjectSuperindices", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], ",", "allConfigs", ",", 
                    RowBox[{"indexConfigs", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], ",", "allfields"}], "]"}],
                     ")"}], "&"}], "/@", 
                    RowBox[{"Range", "[", 
                    RowBox[{"Length", "@", "indexConfigs"}], "]"}]}], ")"}], "/.", 
                    RowBox[{
                    RowBox[{"{", "\"\<Null\>\"", "}"}], "->", "Nothing"}]}]}],
                    ";", "\n", "\n", "\n", 
                   RowBox[{"If", "[", 
                    RowBox[{"(*", "allConfigs", "*)"}], 
                    RowBox[{
                    RowBox[{"allIndexConfigs", "==", 
                    RowBox[{"{", "}"}]}], ",", "\n", "\n", 
                    RowBox[{
                    RowBox[{"allIndexConfigs", "=", " ", 
                    RowBox[{"{", "\"\<Null\>\"", "}"}]}], ";"}]}], "\n", "\n",
                     "]"}], ";"}]}], "\n", "\n", "]"}], ";"}]}], "\n", "]"}], 
             ";"}]}], "\n", "]"}], ";"}], "\n", "\n", ",", "\n", "\n", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"If", " ", "no", " ", "props"}], ",", " ", 
           RowBox[{"ie", " ", "DSE", " ", "or", " ", "LHSmSTI"}], ",", " ", 
           RowBox[{
           "then", " ", "hard", " ", "sum", " ", "over", " ", "vertices"}]}], 
          " ", "*)"}], "\n", 
         RowBox[{
          RowBox[{"allConfigs", " ", "=", " ", 
           RowBox[{"getAllPossibleSets", "[", 
            RowBox[{"objectSuperindices", ",", "Truncation"}], "]"}]}], ";", 
          "\n", "\n", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"allConfigs", "==", 
             RowBox[{"{", "}"}]}], ",", "\n", "\n", 
            RowBox[{
             RowBox[{"allIndexConfigs", "=", " ", 
              RowBox[{"{", "\"\<Null\>\"", "}"}]}], ";"}], "\n", ",", "\n", 
            "\n", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "@", "indexConfigs"}], ">", "0"}], ",", 
               "\n", "\n", 
               RowBox[{
                RowBox[{"appliedObjectSuperindices", " ", "=", " ", 
                 RowBox[{"objectSuperindices", "/.", "indexConfigs"}]}], ";", 
                "\n", "\n", 
                RowBox[{"allIndexConfigs", " ", "=", " ", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"checkHeads", "[", 
                    RowBox[{
                    RowBox[{"appliedObjectSuperindices", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], ",", "objectSuperindices",
                     ",", "allConfigs", ",", 
                    RowBox[{"indexConfigs", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], ",", "allfields"}], "]"}],
                     ")"}], "&"}], "/@", 
                    RowBox[{"Range", "[", 
                    RowBox[{"Length", "@", "indexConfigs"}], "]"}]}], ",", 
                   "1"}], "]"}]}], ";"}], "\n", "\n", ",", "\n", "\n", 
               RowBox[{
                RowBox[{"allIndexConfigs", " ", "=", " ", 
                 RowBox[{"checkHeads", "[", 
                  RowBox[{
                  "objectSuperindices", ",", "objectSuperindices", ",", 
                   "allConfigs", ",", "indexConfigs", ",", "allfields"}], 
                  "]"}]}], ";"}]}], "\n", "\n", "]"}], ";", "\n", "\n", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"allIndexConfigs", " ", "==", " ", 
                RowBox[{"{", "}"}]}], ",", "\n", 
               RowBox[{
                RowBox[{"allIndexConfigs", "=", " ", 
                 RowBox[{"{", "\"\<Null\>\"", "}"}]}], ";"}]}], "\n", "]"}], 
             ";"}]}], "\n", "\n", 
           RowBox[{"(*", 
            RowBox[{",", "\n", "\n", 
             RowBox[{
              RowBox[{"allIndexConfigs", " ", "=", " ", "indexConfigs"}], 
              ";"}]}], "*)"}], "\n", "\n", "]"}], ";"}]}], "\n", "\n", "]"}], 
       ";", "\n", 
       RowBox[{"Return", "[", "allIndexConfigs", "]"}], ";"}]}], "\n", 
     "]"}]}]}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"5b0c3aae-4fe4-45a1-a2ae-6570141ff965"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "get", " ", "all", " ", "possible", " ", "sets", " ", "matching", " ", 
    "the", " ", "length", " ", "of", " ", "the", " ", "objects"}], " ", 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{"Clear", "[", "getAllPossibleSets", "]"}], "\n", 
   RowBox[{
    RowBox[{"getAllPossibleSets", "[", 
     RowBox[{"objectSuperindices_", ",", "Truncation_"}], "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"iter", ",", 
        RowBox[{"possibleSets", " ", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{"Null", ",", 
           RowBox[{"Length", "@", "objectSuperindices"}]}], "]"}]}], ",", 
        "allConfigs"}], "}"}], ",", "\n", "\n", "  ", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"iter", " ", "=", " ", "1"}], ",", " ", 
         RowBox[{"iter", "<=", 
          RowBox[{"Length", "@", "objectSuperindices"}]}], ",", " ", 
         RowBox[{"iter", "++"}], ",", "\n", 
         RowBox[{
          RowBox[{
           RowBox[{"possibleSets", "[", 
            RowBox[{"[", "iter", "]"}], "]"}], " ", "=", "  ", 
           RowBox[{"Select", "[", 
            RowBox[{"Truncation", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Length", "[", "#", "]"}], "==", " ", 
                RowBox[{"Length", "@", 
                 RowBox[{"objectSuperindices", "[", 
                  RowBox[{"[", "iter", "]"}], "]"}]}]}], ")"}], "&"}]}], 
            "]"}]}], ";", "\n", 
          RowBox[{
           RowBox[{"possibleSets", "[", 
            RowBox[{"[", "iter", "]"}], "]"}], " ", "=", " ", 
           RowBox[{"Union", "@", 
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Permutations", "[", 
                 RowBox[{"possibleSets", "[", 
                  RowBox[{"[", 
                   RowBox[{"iter", ",", "#"}], "]"}], "]"}], "]"}], "&"}], "/@", 
               RowBox[{"Range", "[", 
                RowBox[{"Length", "@", 
                 RowBox[{"possibleSets", "[", 
                  RowBox[{"[", "iter", "]"}], "]"}]}], "]"}]}], ",", "1"}], 
             "]"}]}]}], ";"}]}], "\n", "]"}], ";", "\n", "\n", 
       RowBox[{"allConfigs", " ", "=", " ", 
        RowBox[{"Tuples", "[", "possibleSets", "]"}]}], ";", "\n", "\n", 
       RowBox[{"allConfigs", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"allConfigs", "[", 
             RowBox[{"[", "#", "]"}], "]"}], ",", "1"}], "]"}], "&"}], "/@", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "@", "allConfigs"}], "]"}]}]}], ";", "\n", "\n", 
       RowBox[{"Return", "[", "allConfigs", "]"}], ";"}]}], "\n", "]"}], 
    "                                                      "}]}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"a112f8e5-2518-45ab-a2cd-6ce3babe9394"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "get", " ", "all", " ", "possible", " ", "sets", " ", "matching", " ", 
    "the", " ", "length", " ", "of", " ", "the", " ", "objects"}], " ", 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{"Clear", "[", "getPossibleVertexList", "]"}], "\n", 
   RowBox[{
    RowBox[{"getPossibleVertexList", "[", "Truncation_", "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "AllStringVertices", "}"}], ",", "\n", "\n", 
      RowBox[{
       RowBox[{"AllStringVertices", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Map", "[", 
            RowBox[{"ToString", ",", 
             RowBox[{"Truncation", "[", 
              RowBox[{"[", "#", "]"}], "]"}]}], "]"}], ")"}], "&"}], "/@", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "@", "Truncation"}], "]"}]}]}], ";", "\n", "\n", 
       RowBox[{"Return", "[", "AllStringVertices", "]"}], ";"}]}], "\n", 
     "]"}], "                                                      "}]}]}]], \
"Input",
 InitializationCell->
  True,ExpressionUUID->"20f5815d-493d-45c8-8ed4-ce2ce01d58b8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "check", " ", "if", " ", "one", " ", "object", " ", "index", " ", "is", 
    " ", "already", " ", "fixed", " ", "to", " ", "a", " ", "field", " ", 
    "and", " ", "modify", " ", "all", " ", "Configs", " ", "accordingly"}], 
   " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"Clear", "[", "checkHeads", "]"}], "\n", 
   RowBox[{
    RowBox[{"checkHeads", "[", 
     RowBox[{
     "appliedObjectSuperindices_", ",", " ", "objectSuperindices_", ",", 
      "allConfigs_", ",", "indexConfigs_", ",", "allfields_"}], "]"}], ":=", 
    " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"fieldHeads", ",", "allConfigsnew", ",", "allIndexConfigs"}], 
       "}"}], ",", "\n", "\n", "\n", 
      RowBox[{
       RowBox[{"fieldHeads", " ", "=", " ", "\n", 
        RowBox[{
         RowBox[{
          RowBox[{"Switch", "[", 
           RowBox[{
            RowBox[{"Head", "[", 
             RowBox[{
              RowBox[{"Flatten", "[", "appliedObjectSuperindices", "]"}], "[", 
              RowBox[{"[", "#", "]"}], "]"}], "]"}], ",", "\n", "\n", 
            "Symbol", ",", " ", 
            RowBox[{"(", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{"allfields", ",", 
                 RowBox[{
                  RowBox[{"Flatten", "[", "appliedObjectSuperindices", "]"}], 
                  "[", 
                  RowBox[{"[", "#", "]"}], "]"}]}], "]"}], ",", "\n", 
               RowBox[{"{", 
                RowBox[{"#", ",", 
                 RowBox[{
                  RowBox[{"Flatten", "[", "appliedObjectSuperindices", "]"}], 
                  "[", 
                  RowBox[{"[", "#", "]"}], "]"}]}], "}"}], ",", "\n", 
               "Nothing"}], "]"}], ")"}], ",", "\n", "_", ",", " ", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"ToString", "[", 
                RowBox[{"Head", "[", 
                 RowBox[{
                  RowBox[{"Flatten", "[", "appliedObjectSuperindices", "]"}], 
                  "[", 
                  RowBox[{"[", "#", "]"}], "]"}], "]"}], "]"}], " ", "==", 
               " ", "\"\<Q\>\""}], ",", "\n", "\n", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"MemberQ", "[", 
                 RowBox[{"allfields", ",", 
                  RowBox[{
                   RowBox[{"Flatten", "[", "appliedObjectSuperindices", "]"}],
                    "[", 
                   RowBox[{"[", 
                    RowBox[{"#", ",", "1"}], "]"}], "]"}]}], "]"}], ",", "\n",
                 "\n", 
                RowBox[{"{", 
                 RowBox[{"#", ",", 
                  RowBox[{
                   RowBox[{"Flatten", "[", "appliedObjectSuperindices", "]"}],
                    "[", 
                   RowBox[{"[", "#", "]"}], "]"}]}], "}"}], "\n", ",", 
                "Nothing"}], "\n", "]"}], "\n", ",", "\n", 
              RowBox[{"{", 
               RowBox[{"#", ",", 
                RowBox[{"Head", "[", 
                 RowBox[{
                  RowBox[{"Flatten", "[", "appliedObjectSuperindices", "]"}], 
                  "[", 
                  RowBox[{"[", "#", "]"}], "]"}], "]"}]}], " ", "}"}]}], "\n",
              "]"}]}], "\n", "]"}], "&"}], "/@", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "@", 
           RowBox[{"Flatten", "[", "appliedObjectSuperindices", "]"}]}], 
          "]"}]}]}], ";", "\n", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"remove", " ", "impossible", " ", "configs"}], " ", "*)"}], 
       "\n", "\n", "\n", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "@", "fieldHeads"}], ">", "0"}], ",", "\n", "\t", 
         "\n", "\t  ", 
         RowBox[{
          RowBox[{"allConfigsnew", " ", "=", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"ToString", "[", 
                  RowBox[{"allConfigs", "[", 
                   RowBox[{"[", 
                    RowBox[{"#", ",", 
                    RowBox[{"fieldHeads", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}], 
                  "]"}], " ", "==", " ", 
                 RowBox[{"ToString", "[", 
                  RowBox[{"fieldHeads", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ",", 
                "\n", "\n", 
                RowBox[{"allConfigs", "[", 
                 RowBox[{"[", "#", "]"}], "]"}], "\n", "\n", ",", "\n", "\n", 
                "Nothing"}], "\n", "]"}], "\n", ")"}], "&"}], "/@", 
            RowBox[{"Range", "[", 
             RowBox[{"Length", "@", "allConfigs"}], "]"}]}]}], ";", "\n", 
          "\n", "\n", "\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "@", "allConfigsnew"}], ">", "0"}], ",", "\n", 
            
            RowBox[{
             RowBox[{"allIndexConfigs", " ", "=", " ", 
              RowBox[{"MapThread", "[", 
               RowBox[{"IndexProjection", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"objectSuperindices", ",", "2"}], "]"}], ",", 
                    RowBox[{"Length", "@", "allConfigsnew"}]}], "]"}], ",", 
                  "allConfigsnew"}], "}"}], ",", "2"}], "]"}]}], ";", "\n", 
             "\n", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "@", "indexConfigs"}], ">", "0"}], ",", 
               "\n", 
               RowBox[{
                RowBox[{"allIndexConfigs", " ", "=", " ", 
                 RowBox[{"Tuples", "[", 
                  RowBox[{"{", 
                   RowBox[{"allIndexConfigs", ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{"indexConfigs", ",", 
                    RowBox[{"Length", "@", "allIndexConfigs"}]}], "]"}]}], 
                   "}"}], "]"}]}], ";", "\n", 
                RowBox[{"allIndexConfigs", " ", "=", " ", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"Union", "[", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"allIndexConfigs", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], ",", "1"}], "]"}], "]"}], 
                    ")"}], "&"}], "/@", 
                  RowBox[{"Range", "[", 
                   RowBox[{"Length", "@", "allIndexConfigs"}], "]"}]}]}], 
                ";"}]}], "\n", "\n", "]"}], ";"}], "\n", "\t", ",", "\n", 
            "\n", 
            RowBox[{
             RowBox[{"allIndexConfigs", " ", "=", " ", 
              RowBox[{"{", "}"}]}], ";"}]}], "\n", "]"}], ";"}], "\n", ",", 
         "\n", 
         RowBox[{
          RowBox[{"allIndexConfigs", " ", "=", " ", 
           RowBox[{"MapThread", "[", 
            RowBox[{"IndexProjection", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"Flatten", "[", 
                  RowBox[{"objectSuperindices", ",", "2"}], "]"}], ",", 
                 RowBox[{"Length", "@", "allConfigs"}]}], "]"}], ",", 
               "allConfigs"}], "}"}], ",", "2"}], "]"}]}], ";", "\n", "\n", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "@", "indexConfigs"}], ">", "0"}], ",", "\n", 
            RowBox[{
             RowBox[{"allIndexConfigs", " ", "=", " ", 
              RowBox[{"Tuples", "[", 
               RowBox[{"{", 
                RowBox[{"allIndexConfigs", ",", 
                 RowBox[{"Table", "[", 
                  RowBox[{"indexConfigs", ",", 
                   RowBox[{"Length", "@", "allIndexConfigs"}]}], "]"}]}], 
                "}"}], "]"}]}], ";", "\n", 
             RowBox[{"allIndexConfigs", " ", "=", " ", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"Union", "[", 
                  RowBox[{"Flatten", "[", 
                   RowBox[{
                    RowBox[{"allIndexConfigs", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], ",", "1"}], "]"}], "]"}], 
                 ")"}], "&"}], "/@", 
               RowBox[{"Range", "[", 
                RowBox[{"Length", "@", "allIndexConfigs"}], "]"}]}]}], 
             ";"}]}], "\n", "\n", "]"}], ";"}]}], "\n", "]"}], ";", "\n", 
       "\n", 
       RowBox[{"Return", "[", "allIndexConfigs", "]"}], ";"}]}], "\n", 
     "]"}]}]}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"bf51e236-e996-4179-b2d2-8ed47978dc55"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "compare", " ", "each", " ", "vertex", " ", "in", " ", "an", " ", 
    "indexConfigs", " ", "with", " ", "the", " ", "truncation"}], " ", "*)"}],
   "\n", 
  RowBox[{
   RowBox[{"Clear", "[", "compareAllVertexHeads", "]"}], "\n", 
   RowBox[{
    RowBox[{"compareAllVertexHeads", "[", 
     RowBox[{
     "appliedObjectSuperindices_", ",", " ", "allConfigs_", ",", 
      "indexConfigs_", ",", "allfields_"}], "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"fieldHeads", ",", 
        RowBox[{"indexConfignew", "=", " ", "indexConfigs"}], ",", "iter"}], 
       "}"}], ",", "\n", "\n", "\n", "\n", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", "\n", "\n", 
          RowBox[{"indexConfignew", " ", "=", " ", 
           RowBox[{"compareVertexHeads", "[", 
            RowBox[{
             RowBox[{"appliedObjectSuperindices", "[", 
              RowBox[{"[", "#", "]"}], "]"}], ",", " ", "allConfigs", ",", 
             "indexConfignew", ",", "allfields"}], "]"}]}], "\n", "\n", ")"}],
          "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"Length", "@", "appliedObjectSuperindices"}], "]"}]}], ";", 
       "\n", "\n", "\n", 
       RowBox[{"Return", "[", "indexConfignew", "]"}], ";"}]}], "\n", 
     "]"}]}]}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"c558ff81-9d90-462d-8bf9-a9c17cfbfe9c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"compare", " ", "the", " ", "heads", " ", "of", " ", "vertices"}],
     ",", " ", 
    RowBox[{
    "as", " ", "the", " ", "fields", " ", "are", " ", "already", " ", "set", 
     " ", "after", " ", "setting", " ", "the", " ", "props", " ", "and", " ", 
     "regs"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"Clear", "[", "compareVertexHeads", "]"}], "\n", 
   RowBox[{
    RowBox[{"compareVertexHeads", "[", 
     RowBox[{
     "appliedObjectSuperindices_", ",", " ", "allConfigs_", ",", 
      "indexConfigs_", ",", "allfields_"}], "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"fieldHeads", ",", "indexConfignew", ",", "iter"}], "}"}], ",",
       "\n", "\n", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"indexConfigs", " ", "==", " ", 
          RowBox[{"{", "\"\<Null\>\"", "}"}]}], ",", "\n", "\n", 
         RowBox[{
          RowBox[{"Return", "[", "indexConfigs", "]"}], ";"}], "\n", ",", 
         "\n", "\n", "\n", 
         RowBox[{
          RowBox[{"fieldHeads", " ", "=", " ", "\n", 
           RowBox[{
            RowBox[{
             RowBox[{"Switch", "[", 
              RowBox[{
               RowBox[{"Head", "[", 
                RowBox[{
                 RowBox[{"Flatten", "[", "appliedObjectSuperindices", "]"}], 
                 "[", 
                 RowBox[{"[", "#", "]"}], "]"}], "]"}], ",", "\n", "\n", 
               "Symbol", ",", " ", 
               RowBox[{"(", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"MemberQ", "[", 
                   RowBox[{"allfields", ",", 
                    RowBox[{
                    RowBox[{
                    "Flatten", "[", "appliedObjectSuperindices", "]"}], "[", 
                    RowBox[{"[", "#", "]"}], "]"}]}], "]"}], ",", "\n", 
                  RowBox[{"{", 
                   RowBox[{"#", ",", 
                    RowBox[{
                    RowBox[{
                    "Flatten", "[", "appliedObjectSuperindices", "]"}], "[", 
                    RowBox[{"[", "#", "]"}], "]"}]}], "}"}], ",", "\n", 
                  "Nothing"}], "]"}], ")"}], ",", "\n", "_", ",", " ", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ToString", "[", 
                   RowBox[{"Head", "[", 
                    RowBox[{
                    RowBox[{
                    "Flatten", "[", "appliedObjectSuperindices", "]"}], "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "]"}], "]"}], " ", "==", 
                  " ", "\"\<Q\>\""}], ",", "\n", "\n", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"MemberQ", "[", 
                    RowBox[{"allfields", ",", 
                    RowBox[{
                    RowBox[{
                    "Flatten", "[", "appliedObjectSuperindices", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"#", ",", "1"}], "]"}], "]"}]}], "]"}], ",", "\n",
                    "\n", 
                   RowBox[{"{", 
                    RowBox[{"#", ",", 
                    RowBox[{
                    RowBox[{
                    "Flatten", "[", "appliedObjectSuperindices", "]"}], "[", 
                    RowBox[{"[", "#", "]"}], "]"}]}], "}"}], "\n", ",", 
                   "Nothing"}], "\n", "]"}], "\n", ",", "\n", 
                 RowBox[{"{", 
                  RowBox[{"#", ",", 
                   RowBox[{"Head", "[", 
                    RowBox[{
                    RowBox[{
                    "Flatten", "[", "appliedObjectSuperindices", "]"}], "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "]"}]}], " ", "}"}]}], 
                "\n", "]"}]}], "\n", "]"}], "&"}], "/@", 
            RowBox[{"Range", "[", 
             RowBox[{"Length", "@", 
              RowBox[{"Flatten", "[", "appliedObjectSuperindices", "]"}]}], 
             "]"}]}]}], ";", "\n", 
          RowBox[{"fieldHeads", " ", "=", " ", 
           RowBox[{"fieldHeads", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";", "\n", "\n", 
          RowBox[{"(*", " ", 
           RowBox[{
           "compare", " ", "every", " ", "single", " ", "vertex", " ", "to", 
            " ", "truncation", " ", "and", " ", "remove", " ", "impossible", 
            " ", "configs"}], " ", "*)"}], "\n", "\n", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "@", "fieldHeads"}], ">", "0"}], ",", "\n", 
            "\t", "\n", "\t  ", 
            RowBox[{
             RowBox[{"If", "[", " ", 
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{"allConfigs", ",", 
                 RowBox[{"{", 
                  RowBox[{"Apply", "[", 
                   RowBox[{"OrderlessPatternSequence", ",", 
                    RowBox[{"(", 
                    RowBox[{"Map", "[", 
                    RowBox[{"ToString", ",", "fieldHeads"}], "]"}], ")"}]}], 
                   "]"}], "}"}]}], "]"}], ",", "\n", "\n", 
               RowBox[{
                RowBox[{"indexConfignew", " ", "=", " ", "indexConfigs"}], 
                ";"}], "\n", ",", "\n", "\n", 
               RowBox[{
                RowBox[{"indexConfignew", " ", "=", " ", 
                 RowBox[{"{", "\"\<Null\>\"", "}"}]}], ";"}]}], "\n", "]"}], 
             ";"}]}], "\n", "]"}], ";", "\n", "\n", 
          RowBox[{"Return", "[", "indexConfignew", "]"}], ";"}]}], "\n", 
        "]"}], ";"}]}], "\n", "]"}]}]}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"9b181022-3642-4e93-aa6e-a76809288c69"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "getBRSTTruncation", "]"}], "\n", 
 RowBox[{
  RowBox[{"getBRSTTruncation", "[", "truncation_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"iter", ",", 
      RowBox[{"brstTruncation", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", "\n", "\n", "  ", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"iter", " ", "=", " ", "1"}], ",", " ", 
       RowBox[{"iter", "<=", 
        RowBox[{"Length", "@", "truncation"}]}], ",", " ", 
       RowBox[{"iter", "++"}], ",", "\n", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{
           RowBox[{"StringMatchQ", "[", 
            RowBox[{
             RowBox[{"Map", "[", 
              RowBox[{"ToString", ",", 
               RowBox[{"truncation", "[", 
                RowBox[{"[", "iter", "]"}], "]"}]}], "]"}], ",", 
             "\"\<Q*\>\""}], "]"}], ",", "True"}], "]"}], ",", "\n", 
         RowBox[{"brstTruncation", " ", "=", "  ", 
          RowBox[{"Append", "[", 
           RowBox[{"brstTruncation", ",", 
            RowBox[{"truncation", "[", 
             RowBox[{"[", "iter", "]"}], "]"}]}], "]"}]}]}], "\n", "]"}]}], 
      "\n", "]"}], ";", "\n", "\n", 
     RowBox[{"Return", "[", "brstTruncation", "]"}]}]}], "\n", 
   "]"}]}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"7b9e6c6b-d540-4d17-99ab-dfb98ca61885"]
}, Closed]],

Cell[CellGroupData[{

Cell["Sort Objects", "Subsection",ExpressionUUID->"e8c5087a-1035-41bd-b3b2-eaeb22827139"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "split", " ", "field", " ", "object", " ", "list", " ", "into", " ", 
    "lists", " ", "such", " ", "that", " ", "each", " ", "field", " ", "only",
     " ", "appears", " ", "one", " ", "per", " ", "list"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "SplitIndexList", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"SplitIndexList", "[", "listRight_", "]"}], ":=", 
    RowBox[{"SplitIndexList", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "listRight"}], "]"}]}], "\n", 
   RowBox[{
    RowBox[{"SplitIndexList", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "listRight_"}], "]"}], ":=", 
    RowBox[{"SplitIndexList", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"First", "[", "listRight", "]"}], "}"}], "}"}], ",", 
      RowBox[{"Drop", "[", 
       RowBox[{"listRight", ",", "1"}], "]"}]}], "]"}]}], "\n", 
   RowBox[{
    RowBox[{"SplitIndexList", "[", 
     RowBox[{"listsLeft_", ",", "listRight_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "newLeftPart", "}"}], ",", "\n", 
      RowBox[{
       RowBox[{"newLeftPart", "=", 
        RowBox[{"If", "[", "\n", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Last", "[", "listsLeft", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"First", "[", "listRight", "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "\n", 
          RowBox[{"listsLeft", "~", "Join", "~", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"First", "[", "listRight", "]"}], "}"}], "}"}]}], ",", 
          RowBox[{
           RowBox[{"Drop", "[", 
            RowBox[{"listsLeft", ",", 
             RowBox[{"-", "1"}]}], "]"}], "~", "Join", "~", 
           RowBox[{"{", 
            RowBox[{"Append", "[", 
             RowBox[{
              RowBox[{"Last", "[", "listsLeft", "]"}], ",", 
              RowBox[{"First", "[", "listRight", "]"}]}], "]"}], "}"}]}]}], 
         "\n", "]"}]}], ";", "\n", 
       RowBox[{"SplitIndexList", "[", 
        RowBox[{"newLeftPart", ",", 
         RowBox[{"Drop", "[", 
          RowBox[{"listRight", ",", "1"}], "]"}]}], "]"}]}]}], "\n", "]"}]}], 
   "\n", 
   RowBox[{
    RowBox[{"SplitIndexList", "[", 
     RowBox[{"listsLeft_", ",", 
      RowBox[{"{", "}"}]}], "]"}], ":=", "listsLeft"}]}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"87be69eb-19ab-4383-891d-e68e20106c83"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "OrderByFieldTypes", "]"}], "\n", 
 RowBox[{
  RowBox[{"OrderByFieldTypes", "[", 
   RowBox[{"testList_", ",", "sign_", ",", "fields_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"testfield", ",", "positionTestfield", ",", 
      RowBox[{"dummysign", " ", "=", " ", "sign"}], ",", 
      RowBox[{"jointfermionicList", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ",", " ", 
      RowBox[{"jointantifermionicList", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ",", "signold", ",", " ", "signnew", ",", 
      "newTestList"}], "}"}], ",", "\n", "\n", 
    RowBox[{
     RowBox[{"myEcho", "[", 
      RowBox[{"\"\<OrderByFieldTypes\>\"", ",", "1"}], "]"}], ";", "\n", "\n",
      "\n", 
     RowBox[{"(*", " ", 
      RowBox[{
      "sorts", " ", "for", " ", "antifermions", " ", "then", " ", "fermions", 
       " ", "with", " ", "correct", " ", "sign"}], " ", "*)"}], "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"testfield", " ", "=", " ", 
          RowBox[{"testList", "[", 
           RowBox[{"[", "#", "]"}], "]"}]}], ";", "\n", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{"Map", "[", 
              RowBox[{"Head", ",", 
               RowBox[{"fields", "[", 
                RowBox[{"[", 
                 RowBox[{"\"\<fermionic\>\"", ",", "All", ",", "1"}], "]"}], 
                "]"}]}], "]"}], ",", 
             RowBox[{"testfield", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "\n", "\n", "\t", 
           
           RowBox[{
            RowBox[{"jointantifermionicList", " ", "=", " ", 
             RowBox[{"Join", "[", 
              RowBox[{"jointantifermionicList", ",", 
               RowBox[{"{", "testfield", "}"}]}], "]"}]}], ";", "\n", "\t", 
            RowBox[{"signnew", " ", "=", " ", 
             RowBox[{"dummysign", "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"-", "1"}], ")"}], "^", 
               RowBox[{"(", 
                RowBox[{"Length", "@", "jointfermionicList"}], ")"}]}]}]}], 
            ";"}], "\n", ",", "\n", "\n", "\t", 
           RowBox[{
            RowBox[{"jointfermionicList", " ", "=", " ", 
             RowBox[{"Join", "[", 
              RowBox[{"jointfermionicList", ",", 
               RowBox[{"{", "testfield", "}"}]}], "]"}]}], ";", "\n", "\t", 
            RowBox[{"signnew", " ", "=", " ", "dummysign"}], ";"}]}], "\n", 
          "]"}], ";", "\n", 
         RowBox[{"dummysign", " ", "=", " ", "signnew"}], ";"}], "\n", ")"}], 
       "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"Length", "@", "testList"}], "]"}]}], ";", "\n", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{" ", 
             RowBox[{
              RowBox[{
              "needs", " ", "to", " ", "be", " ", "tested", " ", "but", " ", 
               "should", " ", "in", " ", "principle", " ", "work"}], " ", 
              "="}], ")"}], " ", "!!"}], "!!"}], "!!"}], "!!"}], "!!"}], 
       "!!"}], " ", "*)"}], "\n", "\n", 
     RowBox[{"signold", " ", "=", " ", 
      RowBox[{
       RowBox[{"Signature", "[", "jointfermionicList", "]"}], "*", 
       RowBox[{"Signature", "[", "jointantifermionicList", "]"}]}]}], ";", 
     "\n", 
     RowBox[{"signnew", " ", "=", " ", 
      RowBox[{"dummysign", "*", "signold", "*", 
       RowBox[{"Signature", "[", 
        RowBox[{"Sort", "[", "jointfermionicList", "]"}], "]"}], "*", 
       RowBox[{"Signature", "[", 
        RowBox[{"Sort", "[", "jointantifermionicList", "]"}], "]"}]}]}], ";", 
     "\n", 
     RowBox[{"myEcho", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<sign and new ordering: \>\"", ",", " ", "signnew", ",", " ", 
         "testList", ",", " ", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", "jointantifermionicList", "}"}], ",", 
           RowBox[{"{", "jointfermionicList", "}"}]}], "]"}]}], "}"}], ",", 
       "3"}], "]"}], ";", "\n", "\n", 
     RowBox[{"(*", 
      RowBox[{"!", 
       RowBox[{"!", 
        RowBox[{"!", 
         RowBox[{"!", 
          RowBox[{"!", 
           RowBox[{"!", 
            RowBox[{"!", 
             RowBox[{"!", 
              RowBox[{"!", 
               RowBox[{"!", 
                RowBox[{"!", 
                 RowBox[{"!", 
                  RowBox[{"!", 
                   RowBox[{"!", 
                    RowBox[{"!", 
                    RowBox[{"!", 
                    RowBox[{"!", "!"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], 
      "*)"}], "\n", "\n", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"signnew", ",", " ", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", "jointantifermionicList", "}"}], ",", 
          RowBox[{"{", "jointfermionicList", "}"}]}], "]"}]}], "}"}], 
      "]"}]}]}], "\n", "]"}]}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"8ccce0fa-4421-44cb-8df8-de9697ffadf1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "JoinSplitLists", "]"}], ";"}], "  ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "canonical", " ", "ordering", " ", "of", " ", "list", " ", "is", " ", 
     "af"}], ",", " ", "f", ",", " ", "BRSTf"}], "*)"}], " "}], "\n", 
 RowBox[{
  RowBox[{"JoinSplitLists", "[", 
   RowBox[{"jointList_", ",", "list_", ",", "sign_", ",", "fields_"}], "]"}], 
  ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "positionJointList", ",", " ", "newJointList", ",", " ", "signnew", ",", 
      "correctpos", ",", "reducedList", ",", " ", "member"}], "}"}], ",", 
    "\n", "\n", 
    RowBox[{
     RowBox[{"myEcho", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<list: \>\"", ",", " ", "list"}], "}"}], ",", "3"}], 
      "]"}], ";", "\n", "\n", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Flatten", "[", 
             RowBox[{"jointList", ",", "1"}], "]"}], ")"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"First", "[", "list", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "==", "True"}], ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "if", " ", "the", " ", "same", " ", "field", " ", "is", " ", 
          "already", " ", "in", " ", "the", " ", "first", " ", "joint", " ", 
          "list"}], ",", " ", 
         RowBox[{
         "just", " ", "append", " ", "at", " ", "the", " ", "corresponding", 
          " ", "position"}]}], " ", "*)"}], "\n", 
       RowBox[{
        RowBox[{"myEcho", "[", 
         RowBox[{"\"\<field already in joint list\>\"", ",", "3"}], "]"}], 
        ";", "\n", "\n", "\n", 
        RowBox[{"positionJointList", " ", "=", " ", 
         RowBox[{"Last", "[", 
          RowBox[{"Position", "[", 
           RowBox[{"jointList", ",", " ", 
            RowBox[{
             RowBox[{"First", "[", "list", "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}]}], ";", "  ", 
        "\n", 
        RowBox[{"newJointList", " ", "=", " ", 
         RowBox[{"Insert", "[", 
          RowBox[{"jointList", ",", " ", 
           RowBox[{"First", "[", "list", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"positionJointList", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"positionJointList", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "+", "1"}]}], "}"}]}], "]"}]}],
         ";", "\n", "\n", 
        RowBox[{"signnew", " ", "=", " ", 
         RowBox[{"sign", "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Length", "@", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Flatten", "[", 
                 RowBox[{"newJointList", ",", "1"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], ")"}]}], "-", 
             RowBox[{
              RowBox[{"Last", "[", 
               RowBox[{"Position", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Flatten", "[", 
                   RowBox[{"newJointList", ",", "1"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"First", "[", "list", "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}]}]}], ";"}], "\n", 
       "\n", ",", "\n", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"if", " ", "not"}], ",", " ", 
         RowBox[{
         "then", " ", "insert", " ", "it", " ", "into", " ", "an", " ", 
          "empty", " ", "list", " ", "at", " ", "the", " ", "corresponding", 
          " ", "position"}]}], " ", "*)"}], "\n", 
       RowBox[{
        RowBox[{"myEcho", "[", 
         RowBox[{"\"\<field not yet in joint list\>\"", ",", "3"}], "]"}], 
        ";", "\n", "\n", "\n", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"signnew", ",", "newJointList"}], "}"}], " ", "=", " ", 
         RowBox[{"OrderByFieldTypes", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"First", "[", "list", "]"}], "}"}], ",", "sign", ",", 
           "fields"}], "]"}]}], ";", "\n", "\n", 
        RowBox[{"myEcho", "[", 
         RowBox[{"\"\<check how the lists need to be joined\>\"", ",", "3"}], 
         "]"}], ";", "\n", 
        RowBox[{"myEcho", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<joint List: \>\"", ",", "jointList"}], "}"}], ",", 
          "3"}], "]"}], ";", "\n", 
        RowBox[{"myEcho", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<new joint List: \>\"", ",", " ", "newJointList"}], 
           "}"}], ",", "3"}], "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "@", "jointList"}], "==", "1"}], ",", "\n", "\n", 
          RowBox[{"(*", 
           RowBox[{
           "check", " ", "if", " ", "the", " ", "single", " ", "list", " ", 
            "is", " ", "a", " ", "fermion", " ", "or", " ", "antifermion"}], 
           "*)"}], "\n", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{
               RowBox[{"Map", "[", 
                RowBox[{"Head", ",", 
                 RowBox[{"fields", "[", 
                  RowBox[{"[", 
                   RowBox[{"\"\<fermionic\>\"", ",", "All", ",", "1"}], "]"}],
                   "]"}]}], "]"}], ",", 
               RowBox[{"Map", "[", 
                RowBox[{"Head", ",", 
                 RowBox[{"jointList", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}]}], "]"}]}],
               "]"}], ",", "\n", 
             RowBox[{
              RowBox[{"myEcho", "[", 
               RowBox[{"\"\<single antifermion in list\>\"", ",", "3"}], 
               "]"}], ";", "\n", 
              RowBox[{"newJointList", " ", "=", " ", 
               RowBox[{"MapThread", "[", 
                RowBox[{"Join", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Join", "[", 
                    RowBox[{"jointList", ",", 
                    RowBox[{"{", 
                    RowBox[{"{", "}"}], "}"}]}], "]"}], ",", "newJointList"}],
                   "}"}]}], "]"}]}], ";"}]}], "\n", "]"}], ";", "\n", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{
                RowBox[{"Map", "[", 
                 RowBox[{"Head", ",", 
                  RowBox[{"fields", "[", 
                   RowBox[{"[", 
                    RowBox[{"\"\<fermionic\>\"", ",", "All", ",", "2"}], 
                    "]"}], "]"}]}], "]"}], ",", 
                RowBox[{"Map", "[", 
                 RowBox[{"Head", ",", 
                  RowBox[{"jointList", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}]}], 
                 "]"}]}], "]"}], "||", 
              RowBox[{"MemberQ", "[", 
               RowBox[{
                RowBox[{"fields", "[", 
                 RowBox[{"[", 
                  RowBox[{"\"\<BRSTsource\>\"", ",", "All", ",", "1"}], "]"}],
                  "]"}], ",", 
                RowBox[{"Map", "[", 
                 RowBox[{"Head", ",", 
                  RowBox[{"jointList", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}]}], 
                 "]"}]}], "]"}]}], ",", "\n", 
             RowBox[{
              RowBox[{"myEcho", "[", 
               RowBox[{"\"\<single fermion in list\>\"", ",", "3"}], "]"}], 
              ";", "\n", 
              RowBox[{"newJointList", " ", "=", " ", 
               RowBox[{"MapThread", "[", 
                RowBox[{"Join", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", "}"}], "}"}], ",", "jointList"}], "]"}], ",",
                    "newJointList"}], "}"}]}], "]"}]}], ";"}]}], "\n", 
            "]"}]}], "\n", ",", "\n", 
          RowBox[{
           RowBox[{"newJointList", " ", "=", " ", 
            RowBox[{"MapThread", "[", 
             RowBox[{"Join", ",", 
              RowBox[{"{", 
               RowBox[{"jointList", ",", "newJointList"}], "}"}]}], "]"}]}], 
           ";"}]}], "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "insert", " ", "the", " ", "field", " ", "in", " ", "correct", " ", 
          "alphabetical", " ", "order"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"correctpos", " ", "=", " ", 
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sort", "[", 
               RowBox[{"newJointList", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "All", ",", "1"}], "]"}], "]"}], "]"}], 
              ",", 
              RowBox[{"Sort", "[", 
               RowBox[{"newJointList", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "All", ",", "1"}], "]"}], "]"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{
             RowBox[{"First", "[", "list", "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "\n", 
        RowBox[{"signnew", " ", "=", " ", 
         RowBox[{"signnew", "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Length", "@", 
              RowBox[{
               RowBox[{"Flatten", "[", 
                RowBox[{"newJointList", ",", "1"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"First", "[", 
               RowBox[{"Position", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Flatten", "[", 
                   RowBox[{
                    RowBox[{"Map", "[", 
                    RowBox[{"Sort", ",", "newJointList"}], "]"}], ",", "1"}], 
                   "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"First", "[", "list", "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}]}]}], ";", "\n", "\n", 
        "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "@", "jointList"}], "==", "1"}], ",", "\n", "\n", 
          RowBox[{
           RowBox[{"myEcho", "[", 
            RowBox[{"\"\<list of length 1\>\"", ",", "3"}], "]"}], ";", "\n", 
           
           RowBox[{"(*", 
            RowBox[{
            "check", " ", "if", " ", "the", " ", "single", " ", "list", " ", 
             "is", " ", "a", " ", "fermion", " ", "or", " ", "antifermion"}], 
            "*)"}], "\n", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{
               RowBox[{"Map", "[", 
                RowBox[{"Head", ",", 
                 RowBox[{"fields", "[", 
                  RowBox[{"[", 
                   RowBox[{"\"\<fermionic\>\"", ",", "All", ",", "1"}], "]"}],
                   "]"}]}], "]"}], ",", 
               RowBox[{"Map", "[", 
                RowBox[{"Head", ",", 
                 RowBox[{"jointList", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}]}], "]"}]}],
               "]"}], ",", "\n", 
             RowBox[{
              RowBox[{"myEcho", "[", 
               RowBox[{"\"\<single antifermion in list\>\"", ",", "3"}], 
               "]"}], ";", "\n", 
              RowBox[{"newJointList", " ", "=", " ", 
               RowBox[{"Insert", "[", 
                RowBox[{
                 RowBox[{"Join", "[", 
                  RowBox[{"jointList", ",", 
                   RowBox[{"{", 
                    RowBox[{"{", "}"}], "}"}]}], "]"}], ",", 
                 RowBox[{"First", "[", "list", "]"}], ",", "correctpos"}], 
                "]"}]}], ";"}]}], "\n", "]"}], ";", "\n", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{
                RowBox[{"Map", "[", 
                 RowBox[{"Head", ",", 
                  RowBox[{"fields", "[", 
                   RowBox[{"[", 
                    RowBox[{"\"\<fermionic\>\"", ",", "All", ",", "2"}], 
                    "]"}], "]"}]}], "]"}], ",", 
                RowBox[{"Map", "[", 
                 RowBox[{"Head", ",", 
                  RowBox[{"jointList", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}]}], 
                 "]"}]}], "]"}], "||", 
              RowBox[{"MemberQ", "[", 
               RowBox[{
                RowBox[{"fields", "[", 
                 RowBox[{"[", 
                  RowBox[{"\"\<BRSTsource\>\"", ",", "All", ",", "1"}], "]"}],
                  "]"}], ",", 
                RowBox[{"Map", "[", 
                 RowBox[{"Head", ",", 
                  RowBox[{"jointList", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}]}], 
                 "]"}]}], "]"}]}], ",", "\n", 
             RowBox[{
              RowBox[{"myEcho", "[", 
               RowBox[{"\"\<single fermion in list\>\"", ",", "3"}], "]"}], 
              ";", "\n", 
              RowBox[{"newJointList", " ", "=", " ", 
               RowBox[{"Insert", "[", 
                RowBox[{
                 RowBox[{"Join", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"{", "}"}], "}"}], ",", "jointList"}], "]"}], ",", 
                 RowBox[{"First", "[", "list", "]"}], ",", "correctpos"}], 
                "]"}]}], ";"}]}], "\n", "]"}]}], "\n", ",", "\n", 
          RowBox[{
           RowBox[{"myEcho", "[", 
            RowBox[{"\"\<list of more than one field\>\"", ",", "3"}], "]"}], 
           ";", "\n", 
           RowBox[{"newJointList", " ", "=", " ", 
            RowBox[{"Insert", "[", 
             RowBox[{"jointList", ",", 
              RowBox[{"First", "[", "list", "]"}], ",", "correctpos"}], 
             "]"}]}], ";"}]}], "\n", "]"}], ";"}]}], "\n", "\n", "]"}], ";", 
     "\n", 
     RowBox[{"reducedList", " ", "=", " ", 
      RowBox[{"Drop", "[", 
       RowBox[{"list", ",", "1"}], "]"}]}], ";", "\n", 
     RowBox[{"JoinSplitLists", "[", 
      RowBox[{
      "newJointList", ",", " ", "reducedList", ",", " ", "signnew", ",", 
       "fields"}], "]"}]}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"JoinSplitLists", "[", 
   RowBox[{"list_", ",", 
    RowBox[{"{", "}"}], ",", " ", "sign_", ",", "fields_"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"{", 
   RowBox[{"sign", ",", "list"}], "}"}]}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"2be9c2d3-acb2-475c-b543-c748e92f8307"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "merge", " ", "a", " ", "list", " ", "of", " ", "fermionic", " ", "lists", 
    " ", "where", " ", "each", " ", "field", " ", "only", " ", "appears", " ",
     "once", " ", "into", " ", "one", " ", "list", " ", "with", " ", "sorted",
     " ", "fields"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "MergeIndexLists", "]"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"superlist", " ", "=", " ", 
     RowBox[{"list", " ", "of", " ", "lists"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"MergeIndexLists", "[", 
      RowBox[{"superList_", ",", "sign_", ",", "fields_"}], "]"}], ":=", " ", 
     
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"signnew", ",", " ", "newList"}], "}"}], ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{
        "sort", " ", "first", " ", "sublist", " ", "in", " ", "field", " ", 
         "type", " ", "ordering", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"+", "alphabetical"}], " ", "order"}], ")"}]}], " ", 
        "*)"}], "\n", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"signnew", ",", " ", "newList"}], "}"}], " ", "=", " ", 
         RowBox[{"OrderByFieldTypes", "[", 
          RowBox[{
           RowBox[{"First", "[", "superList", "]"}], ",", "sign", ",", 
           "fields"}], "]"}]}], ";", "\n", 
        RowBox[{"MergeIndexLists", "[", 
         RowBox[{"newList", ",", 
          RowBox[{"Drop", "[", 
           RowBox[{"superList", ",", "1"}], "]"}], ",", "signnew", ",", 
          "fields"}], "]"}]}]}], "\n", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"MergeIndexLists", "[", 
     RowBox[{"list_", ",", "superList_", ",", "sign_", ",", "fields_"}], 
     "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"newFirstList", ",", " ", "newRestSuperList", ",", "signnew"}],
        "}"}], ",", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{"join", " ", "the", " ", "sublists"}], " ", "*)"}], "\n", "\n", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"signnew", ",", "newFirstList"}], "}"}], " ", "=", " ", 
        RowBox[{"JoinSplitLists", "[", 
         RowBox[{"list", ",", 
          RowBox[{"First", "[", "superList", "]"}], ",", "sign", ",", 
          "fields"}], "]"}]}], ";", "\n", "\n", 
       RowBox[{"newRestSuperList", " ", "=", " ", 
        RowBox[{"Drop", "[", 
         RowBox[{"superList", ",", "1"}], "]"}]}], ";", "\n", 
       RowBox[{"MergeIndexLists", "[", 
        RowBox[{
        "newFirstList", ",", "newRestSuperList", ",", "signnew", ",", 
         "fields"}], "]"}]}]}], "\n", "]"}]}], "\n", 
   RowBox[{
    RowBox[{"MergeIndexLists", "[", 
     RowBox[{"list_", ",", 
      RowBox[{"{", "}"}], ",", "sign_", ",", "fields_"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{"sign", ",", 
      RowBox[{"Flatten", "[", 
       RowBox[{"list", ",", "1"}], "]"}]}], "}"}]}]}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"08caf701-b12e-45e1-81ab-afe96be83c0e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "orders", " ", "all", " ", "vertices", " ", "in", " ", "the", " ", 
    "nPoints", " ", "in", " ", "the", " ", "default", " ", "order", " ", 
    "and", " ", "adjusts", " ", "the", " ", "signs", " ", "of", " ", "the", 
    " ", "diagrams"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "DefaultVertexOrdering", "]"}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{"DefaultVertexOrdering", "[", 
     RowBox[{
     "objectIndices_", ",", "onecombinedIndexConfigs_", ",", "fields_", ",", 
      "truncation_", ",", "classicalAction___"}], "]"}], " ", ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"allfields", ",", "fieldHeads", ",", "superindices", ",", 
        RowBox[{"bosonicList", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ",", " ", 
        RowBox[{"fermionicList", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ",", " ", 
        RowBox[{"antifermionicList", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"allfermionList", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ",", " ", "positionTestfield", ",", " ", 
        "testfield", ",", " ", "signFermionsStart", ",", 
        "signFermionsIntermediate", ",", "signofSort", ",", 
        "splitAllFermionList", ",", "mergedFermionsList", ",", " ", 
        "signFermionsEnd", ",", " ", "newObjectIndices"}], "}"}], ",", "\n", 
      "\n", 
      RowBox[{
       RowBox[{"allfields", " ", "=", 
        RowBox[{"Union", "[", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Join", "[", 
           RowBox[{"truncation", ",", "classicalAction"}], "]"}], "]"}], 
         "]"}]}], ";", "\n", "\n", "\n", 
       RowBox[{"myEcho", "[", 
        RowBox[{"\"\<DefaultVertexOrdering\>\"", ",", "1"}], "]"}], ";", "\n",
        "\n", "\n", 
       RowBox[{"fieldHeads", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"(", "\n", 
           RowBox[{"Switch", "[", 
            RowBox[{
             RowBox[{"Head", "[", 
              RowBox[{
               RowBox[{"Flatten", "[", "objectIndices", "]"}], "[", 
               RowBox[{"[", "#", "]"}], "]"}], "]"}], ",", "\n", "Symbol", 
             ",", " ", 
             RowBox[{"(", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"MemberQ", "[", 
                 RowBox[{"allfields", ",", 
                  RowBox[{
                   RowBox[{"Flatten", "[", "objectIndices", "]"}], "[", 
                   RowBox[{"[", "#", "]"}], "]"}]}], "]"}], ",", "\n", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Flatten", "[", 
                    RowBox[{
                    "objectIndices", "/.", "onecombinedIndexConfigs"}], "]"}],
                    "[", 
                   RowBox[{"[", "#", "]"}], "]"}], ",", 
                  RowBox[{"List", "@@", 
                   RowBox[{"objectIndices", "[", 
                    RowBox[{"[", 
                    RowBox[{"#", ",", "All"}], "]"}], "]"}]}]}], "}"}], ",", 
                "\n", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Flatten", "[", 
                    RowBox[{
                    "objectIndices", "/.", "onecombinedIndexConfigs"}], "]"}],
                    "[", 
                   RowBox[{"[", "#", "]"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"objectIndices", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "}"}]}], "}"}]}], "]"}], 
              ")"}], ",", "\n", "\n", "_", ",", " ", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"ToString", "[", 
                 RowBox[{"Head", "[", 
                  RowBox[{
                   RowBox[{"Flatten", "[", "objectIndices", "]"}], "[", 
                   RowBox[{"[", "#", "]"}], "]"}], "]"}], "]"}], " ", "==", 
                " ", "\"\<Q\>\""}], ",", "\n", "\n", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Flatten", "[", 
                   RowBox[{"objectIndices", "/.", "onecombinedIndexConfigs"}],
                    "]"}], "[", 
                  RowBox[{"[", "#", "]"}], "]"}], ",", 
                 RowBox[{"List", "@@", 
                  RowBox[{"objectIndices", "[", 
                   RowBox[{"[", "#", "]"}], "]"}]}]}], "}"}], "\n", ",", "\n", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Head", "[", 
                  RowBox[{
                   RowBox[{"Flatten", "[", "objectIndices", "]"}], "[", 
                   RowBox[{"[", "#", "]"}], "]"}], "]"}], ",", 
                 RowBox[{"List", "@@", 
                  RowBox[{"objectIndices", "[", 
                   RowBox[{"[", "#", "]"}], "]"}]}]}], "}"}]}], "\n", "]"}]}],
             "]"}], ")"}], "&"}], "/@", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "@", 
           RowBox[{"Flatten", "[", 
            RowBox[{"objectIndices", "/.", "onecombinedIndexConfigs"}], 
            "]"}]}], "]"}]}]}], ";", "\n", "\n", "\n", "\n", 
       RowBox[{"superindices", " ", "=", " ", "fieldHeads"}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{
        "sort", " ", "for", " ", "bosons", " ", "and", " ", "xfermions"}], 
        "*)"}], "\n", "\n", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"testfield", " ", "=", " ", 
            RowBox[{"superindices", "[", 
             RowBox[{"[", "#", "]"}], "]"}]}], ";", "\n", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{
               RowBox[{"Map", "[", 
                RowBox[{"Head", ",", 
                 RowBox[{"fields", "[", 
                  RowBox[{"[", "\"\<bosonic\>\"", "]"}], "]"}]}], "]"}], ",", 
               
               RowBox[{"testfield", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "\n", 
             RowBox[{
              RowBox[{"bosonicList", " ", "=", " ", 
               RowBox[{"Sort", "@", 
                RowBox[{"Join", "[", 
                 RowBox[{"bosonicList", ",", 
                  RowBox[{"{", "testfield", "}"}]}], "]"}]}]}], ";"}]}], "\n",
             "]"}], ";", "\n", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{
               RowBox[{"Map", "[", 
                RowBox[{"Head", ",", 
                 RowBox[{"fields", "[", 
                  RowBox[{"[", 
                   RowBox[{"\"\<fermionic\>\"", ",", "All", ",", "1"}], "]"}],
                   "]"}]}], "]"}], ",", 
               RowBox[{"testfield", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "\n", 
             RowBox[{
              RowBox[{"antifermionicList", " ", "=", " ", 
               RowBox[{"Sort", "@", 
                RowBox[{"Join", "[", 
                 RowBox[{"antifermionicList", ",", 
                  RowBox[{"{", "testfield", "}"}]}], "]"}]}]}], ";", "\n", 
              RowBox[{"allfermionList", " ", "=", " ", 
               RowBox[{"Join", "[", 
                RowBox[{"allfermionList", ",", 
                 RowBox[{"{", "testfield", "}"}]}], "]"}]}], ";"}]}], "\n", 
            "]"}], ";", "\n", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{
               RowBox[{"Map", "[", 
                RowBox[{"Head", ",", 
                 RowBox[{"fields", "[", 
                  RowBox[{"[", 
                   RowBox[{"\"\<fermionic\>\"", ",", "All", ",", "2"}], "]"}],
                   "]"}]}], "]"}], ",", 
               RowBox[{"testfield", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "\n", 
             RowBox[{
              RowBox[{"fermionicList", " ", "=", " ", 
               RowBox[{"Sort", "@", 
                RowBox[{"Join", "[", 
                 RowBox[{"fermionicList", ",", 
                  RowBox[{"{", "testfield", "}"}]}], "]"}]}]}], ";", "\n", 
              RowBox[{"allfermionList", " ", "=", " ", 
               RowBox[{"Join", "[", 
                RowBox[{"allfermionList", ",", 
                 RowBox[{"{", "testfield", "}"}]}], "]"}]}], ";"}]}], "\n", 
            "]"}], ";", "\n", "\n", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{
               RowBox[{"fields", "[", 
                RowBox[{"[", 
                 RowBox[{"\"\<BRSTsources\>\"", ",", "All", ",", "1"}], "]"}],
                 "]"}], ",", 
               RowBox[{"testfield", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "\n", 
             RowBox[{
              RowBox[{"positionTestfield", " ", "=", " ", 
               RowBox[{"First", "@", 
                RowBox[{"Flatten", "@", 
                 RowBox[{"Position", "[", 
                  RowBox[{
                   RowBox[{"fields", "[", 
                    RowBox[{"[", 
                    RowBox[{"\"\<BRSTsources\>\"", ",", "All", ",", "1"}], 
                    "]"}], "]"}], ",", 
                   RowBox[{"testfield", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}]}], ";", "\n", 
              
              RowBox[{"Switch", "[", 
               RowBox[{
                RowBox[{"fields", "[", 
                 RowBox[{"[", 
                  RowBox[{
                  "\"\<BRSTsources\>\"", ",", "positionTestfield", ",", "2"}],
                   "]"}], "]"}], ",", "\n", "\"\<bosonic\>\"", ",", "\n", 
                "\t", 
                RowBox[{
                 RowBox[{"bosonicList", " ", "=", " ", 
                  RowBox[{"Sort", "@", 
                   RowBox[{"Join", "[", 
                    RowBox[{"bosonicList", ",", 
                    RowBox[{"{", "testfield", "}"}]}], "]"}]}]}], ";"}], ",", 
                "\n", "\"\<fermionic\>\"", ",", " ", "\n", "\t", 
                RowBox[{
                 RowBox[{"fermionicList", " ", "=", " ", 
                  RowBox[{"Sort", "@", 
                   RowBox[{"Join", "[", 
                    RowBox[{"fermionicList", ",", 
                    RowBox[{"{", "testfield", "}"}]}], "]"}]}]}], ";", "\n", 
                 "\t", 
                 RowBox[{"allfermionList", " ", "=", " ", 
                  RowBox[{"Join", "[", 
                   RowBox[{"allfermionList", ",", 
                    RowBox[{"{", "testfield", "}"}]}], "]"}]}], ";"}], ",", 
                "\n", "\"\<antifermionic\>\"", ",", "\n", "\t", 
                RowBox[{
                 RowBox[{"antifermionicList", " ", "=", " ", 
                  RowBox[{"Sort", "@", 
                   RowBox[{"Join", "[", 
                    RowBox[{"antifermionicList", ",", 
                    RowBox[{"{", "testfield", "}"}]}], "]"}]}]}], ";", "\n", 
                 "\t", 
                 RowBox[{"allfermionList", " ", "=", " ", 
                  RowBox[{"Join", "[", 
                   RowBox[{"allfermionList", ",", 
                    RowBox[{"{", "testfield", "}"}]}], "]"}]}], ";"}]}], "\n",
                "]"}], ";"}]}], "\n", "]"}], ";"}], "\n", "\n", ")"}], "&"}], 
        "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"Length", "@", "superindices"}], "]"}]}], ";", "\n", "\n", 
       "\n", "\n", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "@", "allfermionList"}], " ", "==", " ", "0"}], 
         ",", "\n", 
         RowBox[{
          RowBox[{"myEcho", "[", 
           RowBox[{"\"\<no fermions\>\"", ",", "3"}], "]"}], ";", "\n", 
          RowBox[{"signofSort", " ", "=", " ", "1"}], ";", "\n", "\n", 
          RowBox[{"newObjectIndices", " ", "=", " ", "bosonicList"}], ";"}], 
         "\n", ",", "\n", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Signature", "[", 
              RowBox[{"allfermionList", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "!=", " ", 
             "0"}], ",", "\n", 
            RowBox[{"(*", " ", 
             RowBox[{
              RowBox[{
              "if", " ", "each", " ", "fermionic", " ", "field", " ", "only", 
               " ", "appears", " ", "once"}], ",", " ", 
              RowBox[{
              "the", " ", "ordering", " ", "and", " ", "sign", " ", "are", 
               " ", "straight", " ", "forward"}]}], " ", "*)"}], "\n", "\n", 
            "\n", 
            RowBox[{"(*", " ", 
             RowBox[{"!", 
              RowBox[{"!", 
               RowBox[{"!", 
                RowBox[{"!", 
                 RowBox[{"!", 
                  RowBox[{"!", 
                   RowBox[{"!", 
                    RowBox[{"!", 
                    RowBox[{"!", 
                    RowBox[{"!", 
                    RowBox[{"!", 
                    RowBox[{"!", 
                    RowBox[{"!", 
                    RowBox[{"!", 
                    RowBox[{"!", 
                    RowBox[{"!", 
                    RowBox[{"!", 
                    RowBox[{"!", 
                    RowBox[{"!", 
                    RowBox[{"!", 
                    RowBox[{"!", 
                    RowBox[{"!", 
                    RowBox[{"!", 
                    RowBox[{"!", 
                    RowBox[{"!", 
                    RowBox[{"!", 
                    RowBox[{
                    "the", " ", "sign", " ", "might", " ", "still", " ", "be",
                     " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"wrong", "!!"}], "!!"}], "!!"}], "!!"}], "!!"}], 
                    "!!"}], "!!"}], "!!"}], "!!"}], "!!"}], "!!"}], 
                    "!!"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}], " ", "*)"}], "\n", "\n", 
            RowBox[{
             RowBox[{"myEcho", "[", 
              RowBox[{"\"\<each fermion max once\>\"", ",", "3"}], "]"}], ";",
              "\n", 
             RowBox[{"signFermionsStart", " ", "=", " ", 
              RowBox[{"Signature", "[", 
               RowBox[{"allfermionList", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], ";", "\n", 
             "\n", "\n", 
             RowBox[{"newObjectIndices", " ", "=", " ", 
              RowBox[{"Flatten", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                 "bosonicList", ",", "antifermionicList", ",", 
                  "fermionicList"}], "}"}], ",", "1"}], "]"}]}], ";", "\n", 
             "\n", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "@", "antifermionicList"}], " ", ">", "0"}],
                ",", "\n", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "@", "fermionicList"}], ">", "0"}], ",", 
                  "\n", "\n", 
                  RowBox[{
                   RowBox[{"signofSort", " ", "=", " ", 
                    RowBox[{"signFermionsStart", " ", "*", " ", 
                    RowBox[{"Signature", "[", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"antifermionicList", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"fermionicList", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}], 
                    "]"}]}]}], ";"}], "\n", "\n", ",", "\n", 
                  RowBox[{
                   RowBox[{"signofSort", " ", "=", " ", 
                    RowBox[{"signFermionsStart", " ", "*", " ", 
                    RowBox[{"Signature", "[", 
                    RowBox[{"antifermionicList", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}]}], 
                   ";"}]}], "\n", "]"}], ";"}], "\n", ",", "\n", 
               RowBox[{
                RowBox[{"signofSort", " ", "=", " ", 
                 RowBox[{"signFermionsStart", " ", "*", " ", 
                  RowBox[{"Signature", "[", 
                   RowBox[{"fermionicList", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}]}], 
                ";"}]}], "\n", "]"}], ";"}], "\n", ",", "\n", 
            RowBox[{"(*", " ", 
             RowBox[{
             "for", " ", "multiple", " ", "fermionic", " ", "fields", " ", 
              "of", " ", "the", " ", "same", " ", "type", " ", "in", " ", 
              "one", " ", "list", " ", "we", " ", "need", " ", "to", " ", 
              "split", " ", "it", " ", "up", " ", "to", " ", "get", " ", 
              "the", " ", "correct", " ", "sign", " ", "and", " ", "then", 
              " ", "merge", " ", "it", " ", "again"}], " ", "*)"}], "\n", 
            "\n", "\n", 
            RowBox[{
             RowBox[{"myEcho", "[", 
              RowBox[{"\"\<multiple similar fermions\>\"", ",", "3"}], "]"}], 
             ";", "\n", "\n", 
             RowBox[{"splitAllFermionList", " ", "=", " ", 
              RowBox[{"SplitIndexList", "[", "allfermionList", "]"}]}], ";", 
             "\n", "\n", 
             RowBox[{"myEcho", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "\"\<split fermion list: \>\"", ",", "splitAllFermionList"}], 
                "}"}], ",", "3"}], "]"}], ";", "\n", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"signFermionsStart", " ", "=", " ", 
                RowBox[{"Apply", "[", 
                 RowBox[{"Times", ",", 
                  RowBox[{"Map", "[", 
                   RowBox[{"Signature", ",", 
                    RowBox[{"splitAllFermionList", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "All", ",", "1"}], "]"}], "]"}]}], 
                   "]"}]}], "]"}]}], ";", "\n", 
               RowBox[{"myEcho", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<sign ferm start: \>\"", ",", "signFermionsStart"}], 
                  "}"}], ",", "3"}], "]"}], ";"}], "*)"}], "\n", "\n", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"signFermionsEnd", ",", "mergedFermionsList"}], "}"}], 
              " ", "=", " ", 
              RowBox[{"MergeIndexLists", "[", 
               RowBox[{"splitAllFermionList", ",", 
                RowBox[{"(*", "signFermionsStart", "*)"}], "1", ",", 
                "fields"}], "]"}]}], ";", "\n", "\n", 
             RowBox[{"signofSort", " ", "=", " ", "signFermionsEnd"}], ";", 
             "\n", 
             RowBox[{"myEcho", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\"\<sign fermions end: \>\"", ",", "signofSort"}], 
                "}"}], ",", "3"}], "]"}], ";", "\n", 
             RowBox[{"newObjectIndices", " ", "=", " ", 
              RowBox[{"Join", "[", 
               RowBox[{"bosonicList", ",", " ", "mergedFermionsList"}], 
               "]"}]}], ";"}]}], "\n", "]"}], ";"}]}], "\n", "]"}], ";", "\n", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"signofSort", ",", "newObjectIndices"}], "}"}], "]"}]}]}], 
     "\n", "]"}], " "}]}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"e3a48274-ec6a-4e25-a585-1d384d2b8bce"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "DefaultPropOrdering", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"DefaultPropOrdering", "[", 
   RowBox[{
   "propIndices_", ",", "onecombinedIndexConfigs_", ",", "fields_", ",", 
    "truncation_", ",", "classicalAction___"}], "]"}], " ", ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "allfields", ",", "fieldHeads", ",", "superindices", ",", "testfield", 
      ",", "positionTestfield", ",", 
      RowBox[{"bosonicList", "=", " ", 
       RowBox[{"{", "}"}]}], ",", " ", 
      RowBox[{"fermionicList", "=", " ", 
       RowBox[{"{", "}"}]}], ",", " ", 
      RowBox[{"antifermionicList", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ",", " ", "newsign", ",", " ", "newPropIndices", 
      ",", "signFermionsStart"}], "}"}], ",", "\n", "\n", 
    RowBox[{
     RowBox[{"myEcho", "[", 
      RowBox[{"\"\<DefaultPropOrdering\>\"", ",", "3"}], "]"}], ";", "\n", 
     RowBox[{"allfields", " ", "=", 
      RowBox[{"Union", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"truncation", ",", "classicalAction"}], "]"}], "]"}], 
       "]"}]}], ";", "\n", "\n", 
     RowBox[{"fieldHeads", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", "\n", 
         RowBox[{"Switch", "[", 
          RowBox[{
           RowBox[{"Head", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", "propIndices", "]"}], "[", 
             RowBox[{"[", "#", "]"}], "]"}], "]"}], ",", "\n", "Symbol", ",", 
           " ", 
           RowBox[{"(", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{"allfields", ",", 
                RowBox[{
                 RowBox[{"Flatten", "[", "propIndices", "]"}], "[", 
                 RowBox[{"[", "#", "]"}], "]"}]}], "]"}], ",", "\n", "\n", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"Flatten", "[", 
                  RowBox[{"propIndices", "/.", "onecombinedIndexConfigs"}], 
                  "]"}], "[", 
                 RowBox[{"[", "#", "]"}], "]"}], ",", 
                RowBox[{"List", "@@", 
                 RowBox[{"propIndices", "[", 
                  RowBox[{"[", 
                   RowBox[{"#", ",", "All"}], "]"}], "]"}]}]}], "}"}], ",", 
              "\n", "\n", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"Flatten", "[", 
                  RowBox[{"propIndices", "/.", "onecombinedIndexConfigs"}], 
                  "]"}], "[", 
                 RowBox[{"[", "#", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"propIndices", "[", 
                  RowBox[{"[", "#", "]"}], "]"}], "}"}]}], "}"}]}], "]"}], 
            ")"}], ",", "\n", "\n", "_", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"propIndices", "/.", "onecombinedIndexConfigs"}], 
               "]"}], "[", 
              RowBox[{"[", "#", "]"}], "]"}], ",", 
             RowBox[{"List", "@@", 
              RowBox[{"propIndices", "[", 
               RowBox[{"[", 
                RowBox[{"#", ",", "All"}], "]"}], "]"}]}]}], "}"}]}], "\n", 
          "]"}], ")"}], "&"}], "/@", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "@", 
         RowBox[{"Flatten", "[", 
          RowBox[{"propIndices", "/.", "onecombinedIndexConfigs"}], "]"}]}], 
        "]"}]}]}], ";", "\n", "\n", "\n", "\n", 
     RowBox[{"superindices", " ", "=", " ", "fieldHeads"}], ";", "\n", "\n", 
     RowBox[{"(*", 
      RowBox[{
      "sort", " ", "for", " ", "bosons", " ", "and", " ", "xfermions"}], 
      "*)"}], "\n", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"testfield", " ", "=", " ", 
          RowBox[{"superindices", "[", 
           RowBox[{"[", "#", "]"}], "]"}]}], ";", "\n", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{"Map", "[", 
              RowBox[{"Head", ",", 
               RowBox[{"fields", "[", 
                RowBox[{"[", "\"\<bosonic\>\"", "]"}], "]"}]}], "]"}], ",", 
             RowBox[{"testfield", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "\n", 
           RowBox[{
            RowBox[{"myEcho", "[", 
             RowBox[{"\"\<boson\>\"", ",", "3"}], "]"}], ";", "\n", 
            RowBox[{"bosonicList", " ", "=", " ", 
             RowBox[{"Sort", "@", 
              RowBox[{"Join", "[", 
               RowBox[{"bosonicList", ",", 
                RowBox[{"{", "testfield", "}"}]}], "]"}]}]}], ";"}]}], "\n", 
          "]"}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{"Map", "[", 
              RowBox[{"Head", ",", 
               RowBox[{"fields", "[", 
                RowBox[{"[", 
                 RowBox[{"\"\<fermionic\>\"", ",", "All", ",", "1"}], "]"}], 
                "]"}]}], "]"}], ",", 
             RowBox[{"testfield", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "\n", 
           RowBox[{
            RowBox[{"myEcho", "[", 
             RowBox[{"\"\<antifermion\>\"", ",", "3"}], "]"}], ";", "\n", " ", 
            RowBox[{"antifermionicList", " ", "=", " ", 
             RowBox[{"Join", "[", 
              RowBox[{"antifermionicList", ",", 
               RowBox[{"{", "testfield", "}"}]}], "]"}]}], ";"}]}], "\n", 
          "]"}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{"Map", "[", 
              RowBox[{"Head", ",", 
               RowBox[{"fields", "[", 
                RowBox[{"[", 
                 RowBox[{"\"\<fermionic\>\"", ",", "All", ",", "2"}], "]"}], 
                "]"}]}], "]"}], ",", 
             RowBox[{"testfield", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "\n", 
           RowBox[{
            RowBox[{"myEcho", "[", 
             RowBox[{"\"\<fermion\>\"", ",", "3"}], "]"}], ";", "\n", 
            RowBox[{"fermionicList", " ", "=", " ", 
             RowBox[{"Join", "[", 
              RowBox[{"fermionicList", ",", 
               RowBox[{"{", "testfield", "}"}]}], "]"}]}], ";"}]}], "\n", 
          "]"}], ";"}], "\n", ")"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], ";", "\n", "\n", "\n", "\n", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "@", "fermionicList"}], " ", "==", " ", "0"}], ",", 
       "   ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "get", " ", "sign", " ", "for", " ", "bosonic", " ", "or", " ", 
         "fermionic", " ", "prop"}], " ", "*)"}], "\n", 
       RowBox[{
        RowBox[{"myEcho", "[", 
         RowBox[{"\"\<bosonic prop\>\"", ",", "5"}], "]"}], ";", "\n", 
        RowBox[{"newsign", " ", "=", " ", "1"}], ";", "\n", 
        RowBox[{"newPropIndices", " ", "=", " ", "bosonicList"}], ";"}], "\n",
        ",", "\n", 
       RowBox[{
        RowBox[{"myEcho", "[", 
         RowBox[{"\"\<fermionic prop\>\"", ",", "5"}], "]"}], ";", "\n", "\n", 
        RowBox[{"signFermionsStart", " ", "=", " ", 
         RowBox[{"Signature", "[", "superindices", "]"}]}], ";", "\n", "\n", 
        RowBox[{"newPropIndices", " ", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{"fermionicList", ",", "antifermionicList"}], "}"}], 
            "]"}], ",", "1"}], "]"}]}], ";", "\n", "\n", 
        RowBox[{"newsign", " ", "=", " ", 
         RowBox[{"signFermionsStart", " ", "*", " ", 
          RowBox[{"Signature", "[", "newPropIndices", "]"}]}]}], ";"}]}], 
      "\n", "\n", "]"}], ";", "\n", "\n", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"newsign", ",", "newPropIndices"}], "}"}], "]"}]}]}], "\n", 
   "]"}], " "}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"821ff777-2daf-49ff-8ba2-7a79c867aedb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "SortObject", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"sorts", " ", "one", " ", "general", " ", "object"}], " ", "*)"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"SortObject", "[", 
   RowBox[{
   "objecttype_", ",", "objectIndices_", ",", "onecombinedIndexConfigs_", ",",
     " ", "fields_", ",", "truncation_", ",", "classicalAction___"}], "]"}], 
  " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"sign", ",", 
      RowBox[{"sortedIndices", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{"Null", ",", 
         RowBox[{"Length", "@", "objectIndices"}]}], "]"}]}], ",", " ", 
      RowBox[{"newObjectIndices", " ", "=", " ", "objectIndices"}]}], "}"}], 
    ",", "\n", "\n", 
    RowBox[{
     RowBox[{"myEcho", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<old ordering: \>\"", ",", " ", "objectIndices"}], "}"}], 
       ",", "4"}], "]"}], ";", "\n", "\n", 
     RowBox[{"Switch", "[", 
      RowBox[{"objecttype", ",", "\n", "\"\<Propagators\>\"", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"sign", ",", "sortedIndices"}], "}"}], " ", "=", " ", 
         RowBox[{"DefaultPropOrdering", "[", 
          RowBox[{
          "objectIndices", ",", "onecombinedIndexConfigs", ",", " ", "fields",
            ",", "truncation", ",", "classicalAction"}], "]"}]}], ";"}], ",", 
       "\n", "\"\<Regulators\>\"", ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"sign", ",", "sortedIndices"}], "}"}], " ", "=", " ", 
         RowBox[{"DefaultVertexOrdering", "[", 
          RowBox[{
          "objectIndices", ",", "onecombinedIndexConfigs", ",", " ", "fields",
            ",", "truncation", ",", "classicalAction"}], "]"}]}], ";"}], ",", 
       "\n", "\"\<Vertices\>\"", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"sign", ",", "sortedIndices"}], "}"}], " ", "=", " ", 
         RowBox[{"DefaultVertexOrdering", "[", 
          RowBox[{
          "objectIndices", ",", "onecombinedIndexConfigs", ",", " ", "fields",
            ",", "truncation", ",", "classicalAction"}], "]"}]}], ";"}], ",", 
       "\n", "\"\<classicalVertices\>\"", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"sign", ",", "sortedIndices"}], "}"}], " ", "=", " ", 
         RowBox[{"DefaultVertexOrdering", "[", 
          RowBox[{
          "objectIndices", ",", "onecombinedIndexConfigs", ",", " ", "fields",
            ",", "truncation", ",", "classicalAction"}], "]"}]}], ";"}], ",", 
       "\n", "\"\<BRSTVertices\>\"", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"sign", ",", "sortedIndices"}], "}"}], " ", "=", " ", 
         RowBox[{"DefaultVertexOrdering", "[", 
          RowBox[{
          "objectIndices", ",", "onecombinedIndexConfigs", ",", " ", "fields",
            ",", "truncation", ",", "classicalAction"}], "]"}]}], ";"}]}], 
      "\n", "]"}], ";", "\n", "\n", "\n", 
     RowBox[{"myEcho", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<vertex/prop ordering yields: \>\"", ",", " ", "sign", ",", " ", 
         "objectIndices", ",", "sortedIndices"}], "}"}], ",", "3"}], "]"}], 
     ";", "\n", "\n", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"sign", ",", " ", "sortedIndices"}], "}"}], "]"}], ";"}]}], 
   "\n", "]"}], " "}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"0383848f-25d4-499d-9087-dda0734057c0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "SortOneDiag", "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "Sorts", " ", "indices", " ", "such", " ", "that", " ", "they", " ", 
      "match", " ", "the", " ", "sorted", " ", 
      RowBox[{"vertices", "/", "props"}]}], "..."}], "."}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"SortOneDiag", "[", 
   RowBox[{
   "RHSDiagram_", ",", "oneIndexConfig_", ",", "fields_", ",", 
    "objectPositionAssoc_", ",", "truncation_", ",", "classicalAction___"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"iter", ",", 
      RowBox[{"newsign", " ", "=", " ", "1"}], ",", " ", "objectIndices", ",",
       "newObjectIndices", " ", ",", "dummysign", ",", " ", "totalsign", ",", 
      
      RowBox[{"sortedDiagram", " ", "=", " ", "RHSDiagram"}]}], "}"}], ",", 
    "\n", "\n", 
    RowBox[{
     RowBox[{"myEcho", "[", 
      RowBox[{"\"\<SortOneDiag\>\"", ",", "1"}], "]"}], ";", "\n", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", 
             RowBox[{"(", 
              RowBox[{"objectPositionAssoc", "[", 
               RowBox[{"[", "#", "]"}], "]"}], ")"}]}], ">", "0"}], ",", "\n", 
           RowBox[{
            RowBox[{"objectIndices", " ", "=", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"RHSDiagram", "[", 
                  RowBox[{"[", 
                   RowBox[{"#", ",", "\"\<indices\>\""}], "]"}], "]"}], ")"}],
                 "&"}], "/@", 
               RowBox[{"objectPositionAssoc", "[", 
                RowBox[{"[", "#", "]"}], "]"}]}], ")"}]}], ";", "\n", "\n", 
            RowBox[{"newObjectIndices", " ", "=", " ", "objectIndices"}], ";",
             "\n", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "@", 
                RowBox[{"(", 
                 RowBox[{"objectPositionAssoc", "[", 
                  RowBox[{"[", "#", "]"}], "]"}], ")"}]}], ">", "1"}], ",", 
              "\n", "\n", "\n", 
              RowBox[{
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"iter", " ", "=", " ", "1"}], ",", " ", 
                 RowBox[{"iter", "<=", 
                  RowBox[{"Length", "@", 
                   RowBox[{"(", 
                    RowBox[{"objectPositionAssoc", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], ")"}]}]}], ",", 
                 RowBox[{"iter", "++"}], ",", "\n", "\n", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"dummysign", ",", " ", 
                    RowBox[{"newObjectIndices", "[", 
                    RowBox[{"[", "iter", "]"}], "]"}]}], "}"}], " ", "=", " ", 
                   RowBox[{"SortObject", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"objectIndices", "[", 
                    RowBox[{"[", "iter", "]"}], "]"}], ",", "oneIndexConfig", 
                    ",", " ", "fields", ",", " ", "truncation", ",", " ", 
                    "classicalAction"}], "]"}]}], ";", "\n", "\n", 
                  RowBox[{"newsign", " ", "=", " ", 
                   RowBox[{"newsign", "*", "dummysign"}]}], ";"}]}], "\n", 
                "\n", "]"}], ";"}], "\n", "\n", ",", "\n", "\n", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"dummysign", ",", " ", "newObjectIndices"}], "}"}], 
                " ", "=", " ", 
                RowBox[{"SortObject", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"objectIndices", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", "oneIndexConfig", ",",
                   " ", "fields", ",", " ", "truncation", ",", " ", 
                  "classicalAction"}], "]"}]}], ";", "\n", "\n", 
               RowBox[{"newsign", " ", "=", " ", 
                RowBox[{"newsign", "*", "dummysign"}]}], ";"}]}], "\n", "\n", 
             "]"}], ";", "\n", "\n", 
            RowBox[{
             RowBox[{"sortedDiagram", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"objectPositionAssoc", "[", 
                 RowBox[{"[", "#", "]"}], "]"}], ",", "\"\<indices\>\""}], 
               "]"}], "]"}], " ", "=", " ", "newObjectIndices"}], ";"}]}], 
          "\n", "]"}], ";"}], "\n", ")"}], "&"}], "/@", 
      RowBox[{"(", 
       RowBox[{"objectPositionAssoc", "//", "Keys"}], ")"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"sortedDiagram", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"RHSDiagram", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
         RowBox[{"{", "newsign", "}"}]}], "]"}], "//", "Sort"}]}], ";", "\n", 
     "\n", 
     RowBox[{"Return", "[", "sortedDiagram", "]"}], ";"}]}], "\n", "]"}], 
  " "}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"bf445f10-a165-4b74-ad2e-4cb90a13c4bb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "SortDiags", "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "Sorts", " ", "vertices", " ", "and", " ", "props", " ", "of", " ", 
      "one", " ", "diagram", " ", "type", " ", "for", " ", "multiple", " ", 
      "index", " ", "configs"}], "..."}], "."}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"SortDiags", "[", 
   RowBox[{
   "RHSDiagram_", ",", "IndexConfigs_", ",", "fields_", ",", 
    "objectPositionAssoc_", ",", "truncation_", ",", "classicalAction___"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"sortedDiag", ",", " ", "appliedDiag"}], "}"}], ",", "\n", "\n", 
    
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "@", "IndexConfigs"}], " ", ">", "1"}], ",", "\n", 
       RowBox[{
        RowBox[{"sortedDiag", " ", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{"Null", ",", 
           RowBox[{"Length", "@", "IndexConfigs"}]}], "]"}]}], ";", "\n", 
        RowBox[{"appliedDiag", " ", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{"Null", ",", 
           RowBox[{"Length", "@", "IndexConfigs"}]}], "]"}]}], ";", "\n", 
        RowBox[{
         RowBox[{
          RowBox[{"(", "\n", 
           RowBox[{
            RowBox[{
             RowBox[{"sortedDiag", "[", 
              RowBox[{"[", "#", "]"}], "]"}], " ", "=", " ", 
             RowBox[{"SortOneDiag", "[", 
              RowBox[{"RHSDiagram", ",", 
               RowBox[{"IndexConfigs", "[", 
                RowBox[{"[", "#", "]"}], "]"}], ",", "fields", ",", 
               "objectPositionAssoc", ",", "truncation", ",", 
               "classicalAction"}], "]"}]}], ";", "\n", 
            RowBox[{
             RowBox[{"appliedDiag", "[", 
              RowBox[{"[", "#", "]"}], "]"}], " ", "=", " ", 
             RowBox[{"sortedDiag", "[", 
              RowBox[{"[", "#", "]"}], "]"}]}], ";", "\n", "\n", 
            RowBox[{
             RowBox[{"appliedDiag", "[", 
              RowBox[{"[", 
               RowBox[{"#", ",", "1", ",", "2"}], "]"}], "]"}], "=", " ", 
             RowBox[{"GetSign", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"appliedDiag", "[", 
                 RowBox[{"[", 
                  RowBox[{"#", ",", "1"}], "]"}], "]"}], "/.", 
                RowBox[{"IndexConfigs", "[", 
                 RowBox[{"[", "#", "]"}], "]"}]}], ",", "fields"}], "]"}]}], 
            ";"}], "\n", ")"}], "&"}], "/@", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "@", "IndexConfigs"}], "]"}]}], ";"}], "\n", ",", 
       "\n", 
       RowBox[{
        RowBox[{"sortedDiag", " ", "=", " ", 
         RowBox[{"SortOneDiag", "[", 
          RowBox[{
          "RHSDiagram", ",", "IndexConfigs", ",", "fields", ",", 
           "objectPositionAssoc", ",", "truncation", ",", "classicalAction"}],
           "]"}]}], ";", "\n", 
        RowBox[{"appliedDiag", " ", "=", " ", 
         RowBox[{"{", "sortedDiag", "}"}]}], ";", "\n", "\n", 
        RowBox[{
         RowBox[{"appliedDiag", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], "=", " ", 
         RowBox[{"GetSign", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"appliedDiag", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], "/.", 
            RowBox[{"IndexConfigs", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", "fields"}], "]"}]}], 
        ";"}]}], "\n", "]"}], ";", "\n", "\n", 
     RowBox[{"Return", "[", "appliedDiag", "]"}], ";"}]}], "\n", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "we", " ", "want", " ", "to", " ", "get", " ", "the", " ", "swapped", " ", 
    "superindices", " ", "as", " ", "well", " ", "as", " ", "the", " ", 
    "possible", " ", "configs", " ", "as", " ", "a", " ", "list"}], " ", 
   "*)"}]}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"a6f01c17-dbd2-42ac-8e64-a5939a443b73"]
}, Closed]],

Cell[CellGroupData[{

Cell["Signs", "Subsection",ExpressionUUID->"354cb9b0-859e-4365-9795-c7b642337569"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "multiply", " ", "all", " ", "the", " ", "numbers", " ", "in", " ", "the", 
    " ", "prefactor", " ", "of", " ", "a", " ", "single", " ", "diagram"}], 
   " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"Clear", "[", "GetSign", "]"}], " ", "\n", 
   RowBox[{
    RowBox[{"GetSign", "[", 
     RowBox[{"appliedDiagPref_", ",", "fields_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"newappliedDiagPref", " ", "=", " ", 
         RowBox[{"appliedDiagPref", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", "fermionicBRST", ",", 
        "testfield1", ",", " ", "testfield2", ",", " ", "positionTestfield1", 
        ",", " ", "positionTestfield2", ",", " ", "totalDiagPref"}], "}"}], 
      ",", "\n", "\n", 
      RowBox[{
       RowBox[{"myEcho", "[", 
        RowBox[{"\"\<GetSign\>\"", ",", "1"}], "]"}], ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{
           RowBox[{"Keys", "[", "fields", "]"}], ",", "\"\<BRSTsources\>\""}],
           "]"}], ",", "\n", 
         RowBox[{
          RowBox[{"fermionicBRST", " ", "=", " ", 
           RowBox[{"Flatten", "@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"fields", "[", 
                RowBox[{"[", 
                 RowBox[{"\"\<BRSTsources\>\"", ",", "#", ",", "1"}], "]"}], 
                "]"}], "&"}], "/@", 
              RowBox[{"Position", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"fields", "[", 
                  RowBox[{"[", "\"\<BRSTsources\>\"", "]"}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
                "\"\<fermionic\>\""}], "]"}]}], ")"}]}]}], ";"}], "\n", ",", 
         "\n", 
         RowBox[{
          RowBox[{"fermionicBRST", " ", "=", " ", 
           RowBox[{"{", "}"}]}], ";"}]}], "\n", "]"}], ";", "\n", "\n", 
       RowBox[{
        RowBox[{
         RowBox[{"(", "\n", 
          RowBox[{
           RowBox[{"Switch", "[", 
            RowBox[{
             RowBox[{"Head", "[", 
              RowBox[{"newappliedDiagPref", "[", 
               RowBox[{"[", "#", "]"}], "]"}], "]"}], ",", "\n", "Integer", 
             ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"myEcho", "[", 
               RowBox[{"\"\<Integer\>\"", ",", "4"}], "]"}], ";", "\n", 
              "\t\t ", "Nothing"}], ",", "\n", "Rational", ",", "\n", "\t\t", 
             
             RowBox[{
              RowBox[{"myEcho", "[", 
               RowBox[{"\"\<Rational\>\"", ",", "4"}], "]"}], ";", "\n", 
              "\t\t ", "Nothing"}], ",", "\n", "List", ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"myEcho", "[", 
               RowBox[{"\"\<Metric factor\>\"", ",", "4"}], "]"}], ";", "\n", 
              "\t\t", 
              RowBox[{"testfield1", " ", "=", "  ", 
               RowBox[{"newappliedDiagPref", "[", 
                RowBox[{"[", 
                 RowBox[{"#", ",", "1"}], "]"}], "]"}]}], ";", "\n", "\t\t", 
              RowBox[{"testfield2", " ", "=", "  ", 
               RowBox[{"newappliedDiagPref", "[", 
                RowBox[{"[", 
                 RowBox[{"#", ",", "2"}], "]"}], "]"}]}], ";", "\n", "\t\t", 
              "\n", "\t\t", "\n", "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"MemberQ", "[", 
                   RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{"fermionicBRST", ",", 
                    RowBox[{"Map", "[", 
                    RowBox[{"Head", ",", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"fields", "[", 
                    RowBox[{"[", "\"\<fermionic\>\"", "]"}], "]"}], ",", 
                    "1"}], "]"}]}], "]"}]}], "]"}], ",", "testfield1"}], 
                   "]"}], "&&", 
                  RowBox[{"MemberQ", "[", 
                   RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{"fermionicBRST", ",", 
                    RowBox[{"Map", "[", 
                    RowBox[{"Head", ",", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"fields", "[", 
                    RowBox[{"[", "\"\<fermionic\>\"", "]"}], "]"}], ",", 
                    "1"}], "]"}]}], "]"}]}], "]"}], ",", "testfield2"}], 
                   "]"}]}], ")"}], ",", "\n", "\t\t\t", 
                RowBox[{
                 RowBox[{"myEcho", "[", 
                  RowBox[{"\"\<both fermions\>\"", ",", "4"}], "]"}], ";", 
                 "\n", "\n", "\t\t\t", 
                 RowBox[{
                  RowBox[{"newappliedDiagPref", "[", 
                   RowBox[{"[", "#", "]"}], "]"}], " ", "=", " ", 
                  RowBox[{"-", "1"}]}], ";"}], "\n", "\t\t\t", ",", "\n", 
                "\n", "\t\t\t", 
                RowBox[{
                 RowBox[{"myEcho", "[", 
                  RowBox[{"\"\<one or no fermion\>\"", ",", "4"}], "]"}], ";",
                  "\n", "\t\t\t", 
                 RowBox[{
                  RowBox[{"newappliedDiagPref", "[", 
                   RowBox[{"[", "#", "]"}], "]"}], " ", "=", " ", "1"}], 
                 ";"}]}], "\n", "\t\t", "]"}], ";"}]}], "\n", "]"}], ";"}], 
          "\n", ")"}], "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"Length", "@", "newappliedDiagPref"}], "]"}]}], ";", "\n", 
       "\n", 
       RowBox[{"totalDiagPref", " ", "=", " ", 
        RowBox[{"Apply", "[", 
         RowBox[{"Times", ",", "newappliedDiagPref"}], "]"}]}], ";", "\n", 
       "\n", 
       RowBox[{"Return", "[", 
        RowBox[{"{", "totalDiagPref", "}"}], "]"}], ";"}]}], "\n", 
     "]"}]}]}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"86e9c4b7-5093-4c81-b129-1c2ab59a2fc1"]
}, Closed]],

Cell[CellGroupData[{

Cell["Trace over Fields", "Subsection",ExpressionUUID->"6e03f30a-0137-49e7-bff0-c6ad8baec72a"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "TraceOverFields", "]"}], "\n", 
 RowBox[{
  RowBox[{"TraceOverFields", "[", 
   RowBox[{
   "RHS_", ",", "derivativelist_", ",", "replacementList_", ",", " ", 
    "fields_", ",", "truncation_", ",", "classicalAction___"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "internalreplacementList", ",", "objectPositionAssoc", ",", 
      "brstTruncation", ",", "truncationnew", ",", "tracedDiags"}], "}"}], 
    ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"myEcho", "[", 
      RowBox[{"\"\<GetTraceOverFields\>\"", ",", "1"}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "replace", " ", "dummy", " ", "indices", " ", "with", " ", "external", 
       " ", "fields"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"internalreplacementList", " ", "=", " ", 
      RowBox[{"MapThread", "[", 
       RowBox[{"IndexProjection", ",", 
        RowBox[{"{", 
         RowBox[{"derivativelist", ",", 
          RowBox[{"Map", "[", 
           RowBox[{"Head", ",", "derivativelist"}], "]"}]}], "}"}]}], "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"objectPositionAssoc", " ", "=", " ", 
      RowBox[{"getAllObjectPositionsSuperindex", "[", 
       RowBox[{"RHS", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "@", 
         RowBox[{"objectPositionAssoc", "[", 
          RowBox[{"[", "\"\<BRSTVertices\>\"", "]"}], "]"}]}], ">", "0"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"brstTruncation", " ", "=", " ", 
         RowBox[{"getBRSTTruncation", "[", "truncation", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"truncationnew", " ", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"truncation", ",", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"MemberQ", "[", 
              RowBox[{"brstTruncation", ",", "#"}], "]"}]}], "&"}]}], "]"}]}],
         ";"}], "\[IndentingNewLine]", ",", " ", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"brstTruncation", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"truncationnew", " ", "=", " ", "truncation"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"take", " ", "field", " ", "trace", " ", "diag"}], "-", 
       "wise"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"tracedDiags", " ", "=", " ", 
      RowBox[{"ParallelMap", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"traceSingleDiagram", "[", 
           RowBox[{
            RowBox[{"RHS", "[", 
             RowBox[{"[", "#", "]"}], "]"}], ",", "derivativelist", ",", 
            "internalreplacementList", ",", "fields", ",", " ", 
            "truncationnew", ",", "brstTruncation", ",", "classicalAction"}], 
           "]"}], ")"}], "&"}], ",", 
        RowBox[{"Range", "[", 
         RowBox[{"Length", "@", "RHS"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"tracedDiags", "/.", 
         RowBox[{
          RowBox[{"{", "\"\<dummyEntry\>\"", "}"}], "->", "Nothing"}]}], ",", 
        "1"}], "]"}], "]"}]}]}], "\n", "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.93223124024399*^9, 3.93223125502498*^9}, {
  3.932231359584824*^9, 
  3.932231409439332*^9}},ExpressionUUID->"c7dabc39-1ac8-4ea1-9fc6-\
5d27dd86f879"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "traceSingleDiagram", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"traceSingleDiagram", "[", 
    RowBox[{
    "RHSDiagram_", ",", "derivativelist_", ",", "replacementList_", ",", 
     "fields_", ",", "truncation_", ",", "brstTruncation_", ",", 
     "classicalAction___"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "allfields", ",", "objectPositionAssoc", ",", " ", "truncationObject", 
       ",", 
       RowBox[{"IndexConfigs", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ",", "sortedDiag"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"myEcho", "[", 
       RowBox[{"\"\<GetSingleDiagram\>\"", ",", "1"}], "]"}], ";", "\n", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "get", " ", "positions", " ", "of", " ", "all", " ", "object", " ", 
        "types"}], " ", "*)"}], "\n", 
      RowBox[{"objectPositionAssoc", " ", "=", " ", 
       RowBox[{"getAllObjectPositionsSuperindex", "[", "RHSDiagram", "]"}]}], 
      ";", "\n", "\n", 
      RowBox[{"allfields", " ", "=", " ", 
       RowBox[{"Union", "@", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Join", "[", 
          RowBox[{
          "truncation", ",", "brstTruncation", ",", "classicalAction"}], 
          "]"}], "]"}]}]}], ";", "\n", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
       "check", " ", "if", " ", "there", " ", "are", " ", "\"\<objects\>\"", 
        " ", "in", " ", "diag", " ", "and", " ", "get", " ", "index", " ", 
        "mapping", " ", "configs", " ", "of", " ", "\"\<object\>\"", " ", 
        "indices", " ", "onto", " ", "possible", " ", 
        "\"\<object configs\>\""}], " ", "*)"}], "\n", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "@", 
              RowBox[{"(", 
               RowBox[{"objectPositionAssoc", "[", 
                RowBox[{"[", "#", "]"}], "]"}], ")"}]}], ">", "0"}], " ", ",",
             "\n", "\n", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "@", "IndexConfigs"}], "==", "0"}], ",", 
               "\n", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"#", " ", "==", " ", "\"\<classicalVertices\>\""}], 
                  ",", "\n", "\t\t\t\t\t", 
                  RowBox[{
                   RowBox[{
                   "truncationObject", " ", "=", " ", "classicalAction"}], 
                   ";"}], "\n", "\n", "\t\t\t\t\t", ",", "\n", "\n", 
                  "\t\t\t\t", 
                  RowBox[{"truncationObject", " ", "=", " ", "truncation"}]}],
                  "]"}], ";", "\n", 
                RowBox[{"If", "[", " ", 
                 RowBox[{
                  RowBox[{"#", " ", "==", "\"\<BRSTVertices\>\""}], ",", "\n",
                   "\n", 
                  RowBox[{
                   RowBox[{
                   "truncationObject", " ", "=", " ", "brstTruncation"}], 
                   ";"}], "\n", "\n", "\t\t\t\t\t", ",", "\n", "\n", 
                  "\t\t\t\t", 
                  RowBox[{"truncationObject", " ", "=", " ", "truncation"}]}],
                  "]"}], ";", "\n", "\t\t\t\t", "\n", "\t", 
                RowBox[{"IndexConfigs", " ", "=", 
                 RowBox[{"getObjectIndexMapping", "[", 
                  RowBox[{
                  "RHSDiagram", ",", "objectPositionAssoc", ",", 
                   "truncationObject", ",", "IndexConfigs", ",", "#", ",", 
                   "allfields"}], "]"}]}], ";"}], "\n", "\t\t", "\n", ",", 
               "\n", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"StringMatchQ", "[", 
                   RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"IndexConfigs", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
                    "\"\<Null\>\""}], "]"}], ",", "\n", "Nothing", "\n", ",", 
                  "\n", "\n", "\t\t", 
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "#", " ", "==", " ", "\"\<classicalVertices\>\""}], ",", 
                    "\n", "\t\t", 
                    RowBox[{
                    RowBox[{
                    "truncationObject", " ", "=", " ", "classicalAction"}], 
                    ";"}], "\n", "\n", "\t\t", ",", "\n", "\n", "\t\t", 
                    RowBox[{
                    "truncationObject", " ", "=", " ", "truncation"}]}], 
                    "]"}], ";", "\n", 
                   RowBox[{"If", "[", " ", 
                    RowBox[{
                    RowBox[{"#", " ", "==", "\"\<BRSTVertices\>\""}], ",", 
                    "\n", "\n", 
                    RowBox[{
                    RowBox[{
                    "truncationObject", " ", "=", " ", "brstTruncation"}], 
                    ";"}], "\n", "\n", "\t\t\t\t\t", ",", "\n", "\n", 
                    "\t\t\t\t", 
                    RowBox[{
                    "truncationObject", " ", "=", " ", "truncation"}]}], 
                    "]"}], ";", "\n", "\n", "\n", "\t\t", "\n", "\t\t", 
                   RowBox[{"IndexConfigs", " ", "=", 
                    RowBox[{"getObjectIndexMapping", "[", 
                    RowBox[{
                    "RHSDiagram", ",", "objectPositionAssoc", ",", 
                    "truncationObject", ",", "IndexConfigs", ",", "#", ",", 
                    "allfields"}], "]"}]}], ";"}]}], "\n", "\t\t", "\n", 
                 "]"}], ";"}]}], "\n", "]"}], ";"}]}], "\n", "]"}], ";"}], 
         ")"}], "&"}], "/@", 
       RowBox[{"(", 
        RowBox[{"objectPositionAssoc", "//", "Keys"}], ")"}]}], ";", "\n", 
      "\n", "\n", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
       "sort", " ", "the", " ", "objects", " ", "in", " ", "default", " ", 
        "ordering"}], "*)"}], "\n", "\n", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"StringMatchQ", "[", 
         RowBox[{
          RowBox[{"ToString", "[", 
           RowBox[{"IndexConfigs", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", " ", 
          RowBox[{"{", "\"\<Null\>\"", "}"}]}], "]"}], ",", " ", "\n", 
        RowBox[{
         RowBox[{"myEcho", "[", 
          RowBox[{"\"\<no possible configs for this diagram\>\"", ",", "2"}], 
          "]"}], ";", "\n", "\n", 
         RowBox[{"Return", "[", 
          RowBox[{"{", "\"\<dummyEntry\>\"", "}"}], "]"}]}]}], "\n", "]"}], 
      ";", "\n", 
      RowBox[{"IndexConfigs", " ", "=", " ", 
       RowBox[{"MapThread", "[", 
        RowBox[{"Join", ",", 
         RowBox[{"{", 
          RowBox[{"IndexConfigs", ",", 
           RowBox[{"Table", "[", 
            RowBox[{"replacementList", ",", 
             RowBox[{"Length", "@", "IndexConfigs"}]}], "]"}]}], "}"}]}], 
        "]"}]}], ";", "\n", 
      RowBox[{"myEcho", "[", 
       RowBox[{"\"\<sort possible configs for this diagram\>\"", ",", "2"}], 
       "]"}], ";", "\n", "\n", 
      RowBox[{"sortedDiag", " ", "=", " ", 
       RowBox[{"SortDiags", "[", 
        RowBox[{
        "RHSDiagram", ",", "IndexConfigs", ",", "fields", ",", 
         "objectPositionAssoc", ",", "truncation", ",", "classicalAction"}], 
        "]"}]}], ";", "\n", "\n", 
      RowBox[{"Return", "[", "sortedDiag", "]"}]}]}], "\n", "\n", "\n", 
    "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9322314169697523`*^9, 
  3.932231422188714*^9}},ExpressionUUID->"6f5765eb-1953-4702-a0fd-\
f00ecd9066ee"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "SwitchSuperindexReplacementList", "]"}], "\n", 
 RowBox[{
  RowBox[{"SwitchSuperindexReplacementList", "[", "replacementList_", "]"}], 
  " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"superindexReplacementList", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{"Null", ",", 
        RowBox[{"Length", "@", "replacementList"}]}], "]"}]}], "}"}], ",", 
    "\n", "\n", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", "\n", 
        RowBox[{
         RowBox[{
          RowBox[{"superindexReplacementList", "[", 
           RowBox[{"[", "#", "]"}], "]"}], " ", "=", " ", 
          RowBox[{"IndexProjection", "[", 
           RowBox[{
            RowBox[{"replacementList", "[", 
             RowBox[{"[", 
              RowBox[{"#", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"List", "@@", 
             RowBox[{"replacementList", "[", 
              RowBox[{"[", 
               RowBox[{"#", ",", "2"}], "]"}], "]"}]}]}], "]"}]}], ";"}], 
        "\n", ")"}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"Length", "@", "replacementList"}], "]"}]}], ";", "\n", "\n", 
     RowBox[{"Return", "[", "superindexReplacementList", "]"}]}]}], "\n", 
   "]"}]}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"4d73a17b-aa06-4e9c-8ed4-a9688253e449"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Full Diagrams", "Section",ExpressionUUID->"9f51deb8-b776-48cb-b738-0328daa3b82a"],

Cell[CellGroupData[{

Cell["Aux Functions", "Subsection",ExpressionUUID->"ef29d8eb-2899-43d6-bb3e-cd5b7cca61f4"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "FindFirstVertex", "]"}], "\n", 
 RowBox[{
  RowBox[{"FindFirstVertex", "[", 
   RowBox[{"diag_", ",", " ", "firstsuperindex_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"posFirstVertex", ",", "pattern", ",", "casesFirstVertex"}], 
     "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"myEcho", "[", 
      RowBox[{"\"\<FindFirstVertex\>\"", ",", "3"}], "]"}], ";", "\n", "\n", 
     RowBox[{"pattern", " ", "=", " ", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<type\>\"", "->", "\"\<nPoint\>\""}], ",", 
        RowBox[{"\"\<indices\>\"", "->", 
         RowBox[{"{", 
          RowBox[{"___", ",", 
           RowBox[{"{", 
            RowBox[{"___", ",", "firstsuperindex"}], "}"}], ",", "___"}], 
          "}"}]}], ",", "__"}], "|>"}]}], ";", "\n", "\n", 
     RowBox[{"casesFirstVertex", " ", "=", " ", 
      RowBox[{"Cases", "[", 
       RowBox[{"diag", ",", "pattern"}], "]"}]}], ";", "\n", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "@", "casesFirstVertex"}], ">", "0"}], ",", "\n", 
       RowBox[{
        RowBox[{"posFirstVertex", " ", "=", " ", 
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{"diag", ",", 
            RowBox[{
             RowBox[{"Cases", "[", 
              RowBox[{"diag", ",", "pattern"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", "\n", 
        RowBox[{"Echo", "[", "posFirstVertex", "]"}], ";", "\n", 
        RowBox[{"myEcho", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<Position of first vertex\>\"", ",", "posFirstVertex"}], "}"}],
           ",", "3"}], "]"}], ";", "\n", 
        RowBox[{"Return", "[", "posFirstVertex", "]"}]}]}], "\n", "]"}], 
     ";"}]}], "\n", "]"}]}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"41e607ef-2ace-48f7-ac59-99046faf02ae"],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "gives", " ", "the", " ", "correct", " ", "number", " ", "of", " ", 
    "indices", " ", "for", " ", "the", " ", "prop", " ", "fields"}], " ", 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "SuperindexRules", "]"}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{"SuperindexRules", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"field1_", ",", "a_"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"field2_", ",", "b_"}], "}"}]}], "}"}], ",", "fields_"}], 
     "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "positionField1", ",", "superindices1", ",", "superindices2", ",", 
        "indicesNew"}], "}"}], ",", "\n", "\n", 
      RowBox[{
       RowBox[{"myEcho", "[", 
        RowBox[{"\"\<Superindex Rules\>\"", ",", "3"}], "]"}], ";", "\n", 
       "\n", "\n", 
       RowBox[{"positionField1", " ", "=", " ", 
        RowBox[{
         RowBox[{"Position", "[", 
          RowBox[{
           RowBox[{"Flatten", "@", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"Map", "[", 
               RowBox[{"Head", ",", 
                RowBox[{"fields", "[", 
                 RowBox[{"[", 
                  RowBox[{"\"\<bosonic\>\"", ",", "All"}], "]"}], "]"}]}], 
               "]"}], ",", 
              RowBox[{"Map", "[", 
               RowBox[{"Head", ",", 
                RowBox[{"Flatten", "@", 
                 RowBox[{"fields", "[", 
                  RowBox[{"[", 
                   RowBox[{"\"\<fermionic\>\"", ",", "All"}], "]"}], 
                  "]"}]}]}], "]"}]}], "]"}]}], ",", "field1"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", "\n", 
       RowBox[{"superindices1", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{"Unique", ",", 
          RowBox[{"List", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"fields", "[", 
                  RowBox[{"[", 
                   RowBox[{"\"\<bosonic\>\"", ",", "All"}], "]"}], "]"}], ",", 
                 RowBox[{"fields", "[", 
                  RowBox[{"[", 
                   RowBox[{"\"\<fermionic\>\"", ",", "All"}], "]"}], "]"}]}], 
                "]"}], ",", "1"}], "]"}], "[", 
             RowBox[{"[", "positionField1", "]"}], "]"}], ")"}]}]}], "]"}]}], 
       ";", 
       RowBox[{"superindices2", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{"Unique", ",", 
          RowBox[{"List", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"fields", "[", 
                  RowBox[{"[", 
                   RowBox[{"\"\<bosonic\>\"", ",", "All"}], "]"}], "]"}], ",", 
                 RowBox[{"fields", "[", 
                  RowBox[{"[", 
                   RowBox[{"\"\<fermionic\>\"", ",", "All"}], "]"}], "]"}]}], 
                "]"}], ",", "1"}], "]"}], "[", 
             RowBox[{"[", "positionField1", "]"}], "]"}], ")"}]}]}], "]"}]}], 
       ";", "\n", "\n", 
       RowBox[{"indicesNew", " ", "=", " ", 
        RowBox[{"(*", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"field1", ",", "superindices1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"field2", ",", "superindices2"}], "}"}]}], "}"}], "*)"}], 
        
        RowBox[{"{", 
         RowBox[{"superindices1", ",", "superindices2"}], "}"}]}], ";", "\n", 
       "\n", 
       RowBox[{"Return", "[", "indicesNew", "]"}]}]}], "\n", 
     "]"}]}]}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"c82f0248-2ae5-47a4-8d4e-f0191914e555"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "BRSTSuperindexRules", "]"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"needs", " ", "to", " ", "be", " ", "adjusted", " ", "for", " ", 
     RowBox[{"fermions", "/", "ghosts"}]}], " ", "\[Rule]", " ", 
    RowBox[{"lorentz", " ", "indices"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"BRSTSuperindexRules", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"BRSTfield_", ",", "a_"}], "}"}], ",", "fields_"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"positionField", ",", "superindices", ",", "indicesNew"}], "}"}],
     ",", "\n", "\n", "\n", 
    RowBox[{
     RowBox[{"positionField", " ", "=", " ", 
      RowBox[{
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{"Flatten", "@", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{"Head", ",", 
              RowBox[{"fields", "[", 
               RowBox[{"[", 
                RowBox[{"\"\<bosonic\>\"", ",", "All"}], "]"}], "]"}]}], 
             "]"}], ",", 
            RowBox[{"Map", "[", 
             RowBox[{"Head", ",", 
              RowBox[{"Flatten", "@", 
               RowBox[{"fields", "[", 
                RowBox[{"[", 
                 RowBox[{"\"\<fermionic\>\"", ",", "All"}], "]"}], "]"}]}]}], 
             "]"}]}], "]"}]}], ",", 
         RowBox[{"BRSTfield", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", "\n", 
     RowBox[{"superindices", " ", "=", " ", 
      RowBox[{"Map", "[", 
       RowBox[{"Unique", ",", 
        RowBox[{"List", "@@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"fields", "[", 
                RowBox[{"[", 
                 RowBox[{"\"\<bosonic\>\"", ",", "All"}], "]"}], "]"}], ",", 
               RowBox[{"fields", "[", 
                RowBox[{"[", 
                 RowBox[{"\"\<fermionic\>\"", ",", "All"}], "]"}], "]"}]}], 
              "]"}], ",", "1"}], "]"}], "[", 
           RowBox[{"[", "positionField", "]"}], "]"}], ")"}]}]}], "]"}]}], 
     ";", "\n", "\n", 
     RowBox[{"indicesNew", " ", "=", " ", 
      RowBox[{"{", "superindices", "}"}]}], ";", "\n", "\n", 
     RowBox[{"Return", "[", "indicesNew", "]"}]}]}], "\n", "]"}]}]}], "Input",\

 InitializationCell->
  True,ExpressionUUID->"c7171279-aaaf-4980-bd4b-ecc6c18ccdf5"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "FindPositionNewMomentum", "]"}], "\n", 
 RowBox[{
  RowBox[{"FindPositionNewMomentum", "[", 
   RowBox[{
   "allmomenta_", ",", "externalMomenta_", ",", "signRules_", ",", 
    "loopMom_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"iter", ",", "posNewMom", ",", "memberList"}], "}"}], ",", "\n", 
    
    RowBox[{
     RowBox[{"myEcho", "[", 
      RowBox[{"\"\<Find Position New\>\"", ",", "5"}], "]"}], ";", "\n", "\n", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"iter", " ", "=", " ", "1"}], ",", " ", 
       RowBox[{"iter", " ", "<=", 
        RowBox[{"Length", "@", "allmomenta"}]}], ",", " ", 
       RowBox[{"iter", "++"}], ",", "\n", "\t", 
       RowBox[{
        RowBox[{"myEcho", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<check index if new momentum: \>\"", ",", " ", 
            RowBox[{"allmomenta", "[", 
             RowBox[{"[", "iter", "]"}], "]"}]}], "}"}], ",", "5"}], "]"}], 
        ";", "\n", "\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"Map", "[", 
               RowBox[{"List", ",", "externalMomenta"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"{", "loopMom", "}"}], "}"}]}], "]"}], ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"allmomenta", "[", 
               RowBox[{"[", "iter", "]"}], "]"}], "}"}], "/.", 
             "signRules"}]}], "]"}], ",", "\n", "\t\t", 
          RowBox[{
           RowBox[{"posNewMom", " ", "=", " ", 
            RowBox[{"{", "}"}]}], ";", "\n", "\t\t", 
           RowBox[{"myEcho", "[", 
            RowBox[{"\"\<no new mom\>\"", ",", "5"}], "]"}], ";"}], "\n", 
          "\t\t", ",", "\n", "\t", "\n", "\t\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "@", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Flatten", "[", 
                    RowBox[{"List", "@@@", 
                    RowBox[{"{", 
                    RowBox[{"allmomenta", "[", 
                    RowBox[{"[", "iter", "]"}], "]"}], "}"}]}], "]"}], "/.", 
                   "signRules"}], ")"}], "/.", 
                 RowBox[{
                  RowBox[{"n_", "?", "NumericQ"}], "->", "Nothing"}]}], 
                ")"}]}], "==", "1"}], ",", "\n", "\t\t\t", 
             RowBox[{
              RowBox[{"myEcho", "[", 
               RowBox[{"\"\<only one mom in this entry\>\"", ",", "5"}], 
               "]"}], ";", "\n", "\t\t\t", 
              RowBox[{"posNewMom", " ", "=", " ", "iter"}], ";", "\n", 
              "\t\t\t", 
              RowBox[{"myEcho", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"\"\<newmom\>\"", ",", " ", 
                  RowBox[{"allmomenta", "[", 
                   RowBox[{"[", "iter", "]"}], "]"}], ",", " ", "posNewMom"}],
                  "}"}], ",", "5"}], "]"}], ";", "\n", "\t\t\t", 
              RowBox[{"iter", " ", "=", " ", 
               RowBox[{
                RowBox[{"Length", "@", "allmomenta"}], "+", "1"}]}], ";"}], 
             "\n", "\t\t\t", ",", "\n", "\t\t\t", 
             RowBox[{
              RowBox[{"myEcho", "[", 
               RowBox[{"\"\<more than one mom in this entry\>\"", ",", "5"}], 
               "]"}], ";", "\n", "\t\t\t", 
              RowBox[{"memberList", " ", "=", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"MemberQ", "[", 
                  RowBox[{
                   RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Map", "[", 
                    RowBox[{"List", ",", "externalMomenta"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"{", "loopMom", "}"}], "}"}]}], "]"}], ",", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"allmomenta", "[", 
                    RowBox[{"[", 
                    RowBox[{"iter", ",", "#"}], "]"}], "]"}], "}"}], "/.", 
                    "signRules"}]}], "]"}], "&"}], "/@", 
                RowBox[{"Table", "[", 
                 RowBox[{"i", ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", 
                    RowBox[{"Length", "@", 
                    RowBox[{"allmomenta", "[", 
                    RowBox[{"[", "iter", "]"}], "]"}]}]}], "}"}]}], "]"}]}]}],
               ";", "\n", "\t\t\t", "\n", "\t\t\t", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"AllTrue", "[", 
                 RowBox[{"memberList", ",", "TrueQ"}], "]"}], ",", "\n", 
                "\t\t\t\t", 
                RowBox[{
                 RowBox[{"myEcho", "[", 
                  RowBox[{"\"\<all mom are external\>\"", ",", "5"}], "]"}], 
                 ";", "\n", "\t\t\t\t", 
                 RowBox[{"posNewMom", " ", "=", " ", 
                  RowBox[{"{", "}"}]}], ";"}], "\n", "\t\t\t\t", ",", "\n", 
                "\t\t\t\t", 
                RowBox[{
                 RowBox[{"myEcho", "[", 
                  RowBox[{"\"\<find out position of false\>\"", ",", "5"}], 
                  "]"}], ";", "\n", "\t\t\t\t", 
                 RowBox[{"posNewMom", " ", "=", " ", 
                  RowBox[{"{", 
                   RowBox[{"iter", ",", 
                    RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Map", "[", 
                    RowBox[{"List", ",", "externalMomenta"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"{", "loopMom", "}"}], "}"}]}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"allmomenta", "[", 
                    RowBox[{"[", 
                    RowBox[{"iter", ",", "#"}], "]"}], "]"}], "}"}], "/.", 
                    "signRules"}]}], "]"}], "&"}], "/@", 
                    RowBox[{"Table", "[", 
                    RowBox[{"i", ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", 
                    RowBox[{"Length", "@", 
                    RowBox[{"allmomenta", "[", 
                    RowBox[{"[", "iter", "]"}], "]"}]}]}], "}"}]}], "]"}]}], 
                    ")"}], ",", "False"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "}"}]}], ";", 
                 "\n", "\t\t\t\t", 
                 RowBox[{"iter", " ", "=", " ", 
                  RowBox[{
                   RowBox[{"Length", "@", "allmomenta"}], "+", "1"}]}], 
                 ";"}]}], "\n", "\t\t\t", "]"}], ";"}]}], "\n", "\t\t", "]"}],
            ";", "\n", "\t\t", 
           RowBox[{"myEcho", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\"\<posNewMom\>\"", ",", "posNewMom"}], "}"}], ",", 
             "5"}], "]"}], ";"}]}], "\n", "\t", "]"}], ";"}]}], "\n", "]"}], 
     ";", "\n", "\n", 
     RowBox[{"Return", "[", "posNewMom", "]"}]}]}], "\n", "]"}]}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"3112e98c-9e7e-4639-8554-79de653ae7f2"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "FixMomentum", "]"}], "\n", 
 RowBox[{
  RowBox[{"FixMomentum", "[", 
   RowBox[{
   "object_", ",", "posNewMom_", ",", "allmomenta_", ",", "fullDeltaList_", 
    ",", "signRules_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "allmomentanew", ",", "newVar", ",", " ", "prefVar", ",", "momentumCons",
       ",", " ", 
      RowBox[{"newfullDeltaList", " ", "=", " ", "fullDeltaList"}]}], "}"}], 
    ",", "\n", 
    RowBox[{
     RowBox[{"myEcho", "[", 
      RowBox[{"\"\<Fix Momentum\>\"", ",", "5"}], "]"}], ";", "\n", "\n", 
     "\n", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "@", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", "posNewMom", "}"}], "]"}]}], "==", "1"}], ",", "\n", 
       "\n", 
       RowBox[{
        RowBox[{"myEcho", "[", 
         RowBox[{"\"\<only one new mom\>\"", ",", "5"}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"allmomentanew", " ", "=", " ", 
         RowBox[{"Drop", "[", 
          RowBox[{"allmomenta", ",", 
           RowBox[{"{", "posNewMom", "}"}]}], "]"}]}], ";", "\n", "\n", 
        RowBox[{"newVar", " ", "=", " ", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"object", "[", 
             RowBox[{"[", 
              RowBox[{
              "\"\<indices\>\"", ",", "posNewMom", ",", "2", ",", "1"}], 
              "]"}], "]"}], "/.", "fullDeltaList"}], "]"}], "/.", 
          "signRules"}]}], ";", "\n", 
        RowBox[{"prefVar", " ", "=", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"object", "[", 
             RowBox[{"[", 
              RowBox[{
              "\"\<indices\>\"", ",", "posNewMom", ",", "2", ",", "1"}], 
              "]"}], "]"}], "/.", "fullDeltaList"}], "]"}], "/", "newVar"}]}],
         ";", "\n", "\n", "\n", "\n", "\n", 
        RowBox[{"momentumCons", " ", "=", " ", 
         RowBox[{"Flatten", "@", 
          RowBox[{"Solve", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"prefVar", "*", "newVar"}], " ", "+", " ", 
                RowBox[{"Total", "[", "allmomentanew", "]"}]}], "/.", 
               "fullDeltaList"}], ")"}], "==", "0"}], ",", "newVar"}], 
           "]"}]}]}], ";", "\n", "\n", "\n", 
        RowBox[{"newfullDeltaList", " ", "=", " ", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{"fullDeltaList", "/.", "momentumCons"}], "]"}], ",", 
           "momentumCons"}], "]"}]}], ";"}], "\n", "\n", "\n", ",", "\n", 
       "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "@", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", "posNewMom", "}"}], "]"}]}], "==", "2"}], ",", "\n",
           "\n", 
          RowBox[{
           RowBox[{"myEcho", "[", 
            RowBox[{"\"\<more than one new mom\>\"", ",", "5"}], "]"}], ";", 
           "\n", "\n", 
           RowBox[{"allmomentanew", " ", "=", " ", 
            RowBox[{"Delete", "[", 
             RowBox[{"allmomenta", ",", 
              RowBox[{"{", "posNewMom", "}"}]}], "]"}]}], ";", "\n", "\n", 
           RowBox[{"newVar", " ", "=", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Evaluate", "[", 
                RowBox[{
                 RowBox[{"object", "[", 
                  RowBox[{"[", 
                   RowBox[{
                   "\"\<indices\>\"", ",", "2", ",", "All", ",", "2", ",", 
                    "1"}], "]"}], "]"}], "/.", "fullDeltaList"}], "]"}], "/.",
                "signRules"}], ")"}], "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"posNewMom", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"posNewMom", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}]}], ";", "\n", 
           "\n", 
           RowBox[{"prefVar", " ", "=", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"Evaluate", "[", 
                 RowBox[{
                  RowBox[{"object", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    "\"\<indices\>\"", ",", "2", ",", "All", ",", "2", ",", 
                    "1"}], "]"}], "]"}], "/.", "fullDeltaList"}], "]"}], 
                ")"}], "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"posNewMom", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"posNewMom", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "/", 
              "newVar"}], ")"}]}], ";", "\n", "\n", 
           RowBox[{"momentumCons", " ", "=", " ", 
            RowBox[{"Flatten", "@", 
             RowBox[{"Solve", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"prefVar", "*", "newVar"}], " ", "+", " ", 
                   RowBox[{"Total", "[", "allmomentanew", "]"}]}], "/.", 
                  "fullDeltaList"}], ")"}], "==", "0"}], ",", "newVar"}], 
              "]"}]}]}], ";", "\n", "\n", 
           RowBox[{"newfullDeltaList", " ", "=", " ", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"Evaluate", "[", 
               RowBox[{"fullDeltaList", "/.", "momentumCons"}], "]"}], ",", 
              "momentumCons"}], "]"}]}], ";"}], "\n", "\n", ",", "\n", 
          "Nothing"}], "\n", "]"}], ";"}]}], "\n", "]"}], ";", "\n", 
     RowBox[{"Return", "[", "newfullDeltaList", "]"}]}]}], "\n", 
   "]"}]}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"3e094693-2bc0-4466-98c5-94107858786b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "somehow", " ", "it", " ", "also", " ", "fixes", " ", "external", " ", 
     "momenta"}], "..."}], "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{"Clear", "[", "MomentumConservationVert", "]"}], "\n", 
   RowBox[{
    RowBox[{"MomentumConservationVert", "[", 
     RowBox[{
     "diag_", ",", "replacementList_", ",", "positionAllVertices_", ",", 
      "loopMom_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"newReplList", " ", "=", " ", "replacementList"}], ",", 
        "externalMomenta", ",", "signRules", ",", "positionReg", ",", 
        "positionFirstVert", ",", " ", "irun", ",", "rightLength", ",", " ", 
        "leftLength", ",", 
        RowBox[{"direction", " ", "=", " ", "0"}], ",", " ", "newVar", ",", 
        " ", "prefVar", ",", "posNewMom", ",", "RunningIndex", ",", 
        "MemberList", ",", 
        RowBox[{"FullDeltaList", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"MomentumCons", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ",", " ", "directionTable", ",", " ", 
        "allMomenta"}], "}"}], ",", "\n", "\n", 
      RowBox[{
       RowBox[{
        RowBox[{"newReplList", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], " ", "=", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"List", "@@", 
             RowBox[{"(", 
              RowBox[{"replacementList", "[", 
               RowBox[{"[", 
                RowBox[{"#", ",", "2"}], "]"}], "]"}], ")"}]}], ")"}], "&"}], 
          "/@", 
          RowBox[{"Table", "[", 
           RowBox[{"i", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "@", "replacementList"}]}], "}"}]}], "]"}]}], 
         ")"}]}], 
       RowBox[{"(*", 
        RowBox[{"[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "*)"}], ";", "\n", "\n", 
       "\n", 
       RowBox[{"signRules", " ", "=", "  ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"n_", "?", "NumericQ"}], "*", "q_"}], " ", "->", " ", 
          "loopMom"}], "}"}]}], ";", "\n", "\n", 
       RowBox[{"externalMomenta", " ", "=", " ", 
        RowBox[{"replacementList", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2", ",", "1"}], "]"}], "]"}]}], ";", "\n", 
       "\n", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "check", " ", "how", " ", "long", " ", "it", " ", "is", " ", "to", 
          " ", "get", " ", "to", " ", "the", " ", "reg", " ", "from", " ", 
          "the", " ", "first", " ", "vertex", " ", "clockwise", " ", "and", 
          " ", "counter"}], "-", "clockwise"}], " ", "*)"}], "\n", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{
        "note", " ", "that", " ", "the", " ", "position", " ", "of", " ", 
         "the", " ", "reg", " ", "is", " ", "always", " ", "at", " ", "one"}],
         " ", "*)"}], "\n", 
       RowBox[{"positionReg", " ", "=", " ", "1"}], ";", "\n", "\n", "\n", 
       "\n", 
       RowBox[{"(*", " ", 
        RowBox[{
        "check", " ", "for", " ", "single", " ", "tadpole", " ", "diagram"}], 
        "*)"}], "\n", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "@", 
           RowBox[{"(", 
            RowBox[{"Union", "[", "positionAllVertices", "]"}], ")"}]}], "==",
           "1"}], ",", "\n", "\n", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{
                RowBox[{"Join", "[", 
                 RowBox[{
                  RowBox[{"Evaluate", "[", 
                   RowBox[{"-", 
                    RowBox[{"diag", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"positionAllVertices", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], ",", 
                    "\"\<indices\>\"", ",", "All", ",", "2", ",", "1"}], 
                    "]"}], "]"}]}], "]"}], ",", 
                  RowBox[{"diag", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"positionAllVertices", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], ",", 
                    "\"\<indices\>\"", ",", "All", ",", "2", ",", "1"}], 
                    "]"}], "]"}]}], "]"}], ",", 
                RowBox[{"diag", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"positionAllVertices", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<indices\>\"", 
                   ",", "#", ",", "2", ",", "1"}], "]"}], "]"}]}], "]"}], ",",
               "    ", "\n", "  ", "\n", "\t\t", 
              RowBox[{
               RowBox[{"newVar", " ", "=", " ", 
                RowBox[{"diag", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"positionAllVertices", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<indices\>\"", 
                   ",", "#", ",", "2", ",", "1"}], "]"}], "]"}]}], ";"}]}], 
             "\n", "\n", "\t", "]"}], "&"}], "/@", 
           RowBox[{"Range", "[", 
            RowBox[{"Length", "@", 
             RowBox[{"diag", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"positionAllVertices", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<indices\>\"", ",", 
                "All", ",", "2"}], "]"}], "]"}]}], "]"}]}], ";"}]}], "\n", 
        "]"}], ";", "\n", "\n", "\n", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"irun", "=", "1"}], ",", 
         RowBox[{"irun", "<=", 
          RowBox[{"Length", "@", "positionAllVertices"}]}], ",", 
         RowBox[{"irun", "++"}], ",", "\n", "\n", 
         RowBox[{
          RowBox[{"positionFirstVert", " ", "=", " ", 
           RowBox[{"positionAllVertices", "[", 
            RowBox[{"[", "irun", "]"}], "]"}]}], ";", "\n", "\n", "       ", 
          RowBox[{"leftLength", " ", "=", " ", 
           RowBox[{"positionFirstVert", "-", "positionReg"}]}], ";", "\n", 
          RowBox[{"rightLength", " ", "=", "  ", 
           RowBox[{
            RowBox[{"Length", "@", "diag"}], "-", " ", "positionFirstVert", 
            "+", "positionReg"}]}], ";", "\n", "\n", 
          RowBox[{"myEcho", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"leftLength", ",", "rightLength"}], "}"}], ",", "4"}], 
           "]"}], ";", "\n", 
          RowBox[{"Echo", "[", 
           RowBox[{"{", 
            RowBox[{"leftLength", ",", "rightLength"}], "}"}], "]"}], ";", 
          "\n", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"rightLength", "<", "leftLength"}], ",", "\n", "\n", 
            RowBox[{"(*", " ", 
             RowBox[{
             "check", " ", "which", " ", "index", " ", "connects", " ", "to", 
              " ", "the", " ", "right"}], " ", "*)"}], "\n", 
            RowBox[{
             RowBox[{"direction", " ", "=", " ", 
              RowBox[{"+", "1"}]}], ";", "\n", 
             RowBox[{
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"MemberQ", "[", 
                  RowBox[{
                   RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"-", 
                    RowBox[{"diag", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"positionFirstVert", "+", "1"}], ",", 
                    "\"\<indices\>\"", ",", "All", ",", "2", ",", "1"}], 
                    "]"}], "]"}]}], "]"}], ",", 
                    RowBox[{"diag", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"positionFirstVert", "+", "1"}], ",", 
                    "\"\<indices\>\"", ",", "All", ",", "2", ",", "1"}], 
                    "]"}], "]"}]}], "]"}], ",", 
                   RowBox[{"diag", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    "positionFirstVert", ",", "\"\<indices\>\"", ",", "#", 
                    ",", "2", ",", "1"}], "]"}], "]"}]}], "]"}], ",", "    ", 
                 "\n", "  ", "\n", "\t\t", 
                 RowBox[{
                  RowBox[{"newVar", " ", "=", " ", 
                   RowBox[{"diag", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    "positionFirstVert", ",", "\"\<indices\>\"", ",", "#", 
                    ",", "2", ",", "1"}], "]"}], "]"}]}], ";"}]}], "\n", "\n",
                 "\t", "]"}], "&"}], "/@", 
              RowBox[{"Table", "[", 
               RowBox[{"i", ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", 
                  RowBox[{"Length", "@", 
                   RowBox[{"diag", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    "positionFirstVert", ",", "\"\<indices\>\"", ",", "All", 
                    ",", "2"}], "]"}], "]"}]}]}], "}"}]}], "]"}]}], ";", "\n",
              "\n", 
             RowBox[{"irun", " ", "=", " ", 
              RowBox[{"Length", "@", "positionAllVertices"}]}], ";"}], "\n", 
            ",", "\n", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"leftLength", "<", "rightLength"}], ",", "\n", "\n", 
               RowBox[{"(*", " ", 
                RowBox[{
                "check", " ", "which", " ", "index", " ", "connects", " ", 
                 "to", " ", "the", " ", "left"}], " ", "*)"}], "\n", 
               RowBox[{
                RowBox[{"direction", " ", "=", " ", 
                 RowBox[{"-", "1"}]}], ";", "\n", 
                RowBox[{
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"-", 
                    RowBox[{"diag", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"positionFirstVert", "-", "1"}], ",", 
                    "\"\<indices\>\"", ",", "All", ",", "2", ",", "1"}], 
                    "]"}], "]"}]}], "]"}], ",", 
                    RowBox[{"diag", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"positionFirstVert", "-", "1"}], ",", 
                    "\"\<indices\>\"", ",", "All", ",", "2", ",", "1"}], 
                    "]"}], "]"}]}], "]"}], ",", 
                    RowBox[{"diag", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    "positionFirstVert", ",", "\"\<indices\>\"", ",", "#", 
                    ",", "2", ",", "1"}], "]"}], "]"}]}], "]"}], ",", "    ", 
                    "\n", "  ", "\n", "\t\t", 
                    RowBox[{
                    RowBox[{"newVar", " ", "=", " ", 
                    RowBox[{"diag", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    "positionFirstVert", ",", "\"\<indices\>\"", ",", "#", 
                    ",", "2", ",", "1"}], "]"}], "]"}]}], ";"}]}], "\n", "\n",
                    "\t", "]"}], "&"}], "/@", 
                 RowBox[{"Table", "[", 
                  RowBox[{"i", ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", 
                    RowBox[{"Length", "@", 
                    RowBox[{"diag", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    "positionFirstVert", ",", "\"\<indices\>\"", ",", "All", 
                    ",", "2"}], "]"}], "]"}]}]}], "}"}]}], "]"}]}], ";", "\n",
                 "\n", 
                RowBox[{"irun", " ", "=", " ", 
                 RowBox[{"Length", "@", "positionAllVertices"}]}]}], "\n", 
               ",", "\n", 
               RowBox[{
                RowBox[{"direction", " ", "=", " ", 
                 RowBox[{"+", "1"}]}], ";"}]}], "\n", "\n", "\n", "]"}], 
             ";"}]}], "\n", "]"}], ";"}]}], "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"else", " ", "leftLength"}], " ", "=", " ", 
           RowBox[{"rightLength", ":", " ", 
            RowBox[{"go", " ", "to", " ", "second", " ", "vertex"}]}]}], ",", 
          " ", "etc"}], "*)"}], "\n", "]"}], ";", "\n", "\n", "\n", 
       RowBox[{"myEcho", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<momentum which connects to the first vertex is: \>\"", ",", 
           "newVar"}], "}"}], ",", "4"}], "]"}], ";", "\n", "\n", "\n", "\n", 
       
       RowBox[{"prefVar", " ", "=", " ", 
        RowBox[{"newVar", "/", 
         RowBox[{"(", 
          RowBox[{"newVar", "/.", "signRules"}], ")"}]}]}], ";", "\n", "\n", 
       "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"prefVar", ">", "0"}], ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{"MomentumCons", " ", "=", " ", 
           RowBox[{"Flatten", "@", 
            RowBox[{"Solve", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"newVar", "+", "loopMom"}], "==", "0"}], ",", 
              "newVar"}], "]"}]}]}], ";"}], "\n", "\t\t", ",", "\n", "\t\t", 
         RowBox[{"MomentumCons", " ", "=", " ", 
          RowBox[{"Flatten", "@", 
           RowBox[{"Solve", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"newVar", "+", "loopMom"}], "==", "0"}], ",", 
             RowBox[{"prefVar", "*", "newVar"}]}], "]"}]}]}]}], "\n", "]"}], 
       ";", "\n", "\n", "\n", "\n", "\n", "\n", 
       RowBox[{"FullDeltaList", " ", "=", " ", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{"FullDeltaList", "/.", "MomentumCons"}], "]"}], ",", 
          "MomentumCons"}], "]"}]}], ";", "\n", 
       RowBox[{"myEcho", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<Delta List of momenta: \>\"", ",", "FullDeltaList"}], 
          "}"}], ",", "4"}], "]"}], ";", "\n", "\n", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "go", " ", "through", " ", "the", " ", "diagram", " ", "in", " ", 
          "direction"}], ",", " ", 
         RowBox[{
         "starting", " ", "from", " ", "the", " ", "first", " ", "vertex"}]}],
         " ", "*)"}], "\n", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"direction", " ", "==", "1"}], ",", "\n", 
         RowBox[{
          RowBox[{"directionTable", "  ", "=", " ", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{"i", ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", 
                 RowBox[{"positionFirstVert", "+", "1"}], ",", 
                 RowBox[{"Length", "@", "diag"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{"i", ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"positionFirstVert", "-", "1"}]}], "}"}]}], "]"}]}], 
            "]"}]}], ";"}], "\n", ",", "\n", 
         RowBox[{
          RowBox[{"directionTable", " ", "=", " ", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{"i", ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", 
                 RowBox[{"positionFirstVert", "-", "1"}], ",", "1", ",", 
                 RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{"i", ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", 
                 RowBox[{"Length", "@", "diag"}], ",", 
                 RowBox[{"positionFirstVert", "+", "1"}], ",", 
                 RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "]"}]}], ";"}]}], 
        "\n", "]"}], ";", "\n", "\n", "\n", "\n", 
       RowBox[{
        RowBox[{
         RowBox[{"(", "\n", 
          RowBox[{
           RowBox[{"myEcho", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\"\<check object no. \>\"", ",", "#"}], "}"}], ",", 
             "4"}], "]"}], ";", "\n", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Echo", "[", "#", "]"}], ";"}], "*)"}], "\n", "\n", 
           RowBox[{"allMomenta", " ", "=", " ", 
            RowBox[{
             RowBox[{"diag", "[", 
              RowBox[{"[", 
               RowBox[{
               "#", ",", "\"\<indices\>\"", ",", "All", ",", "2", ",", "1"}], 
               "]"}], "]"}], "/.", "FullDeltaList"}]}], ";", "\n", 
           RowBox[{"myEcho", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "\"\<all momenta in the object which is momentum fixed right \
now\>\"", ",", "allMomenta"}], "}"}], ",", "4"}], "]"}], ";", "\n", 
           RowBox[{"(*", " ", 
            RowBox[{
            "find", " ", "out", " ", "position", " ", "of", " ", "new", " ", 
             "momentum", " ", "which", " ", "is", " ", "not", " ", "yet", " ",
              "fixed"}], " ", "*)"}], "\n", 
           RowBox[{"myEcho", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "\"\<here.............................\>\"", ",", "allMomenta", 
               ",", "externalMomenta", ",", "signRules", ",", "loopMom"}], 
              "}"}], ",", "6"}], "]"}], ";", "\n", 
           RowBox[{"posNewMom", " ", "=", " ", 
            RowBox[{"FindPositionNewMomentum", "[", 
             RowBox[{
             "allMomenta", ",", "externalMomenta", ",", "signRules", ",", 
              "loopMom"}], "]"}]}], ";", "\n", "\n", 
           RowBox[{"myEcho", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\"\<here.............................\>\"", ",", 
               RowBox[{"diag", "[", 
                RowBox[{"[", "#", "]"}], "]"}], ",", "posNewMom", ",", 
               "allMomenta", ",", "FullDeltaList", ",", "signRules"}], "}"}], 
             ",", "6"}], "]"}], ";", "\n", 
           RowBox[{"FullDeltaList", " ", "=", " ", 
            RowBox[{"FixMomentum", "[", 
             RowBox[{
              RowBox[{"diag", "[", 
               RowBox[{"[", "#", "]"}], "]"}], ",", "posNewMom", ",", 
              "allMomenta", ",", "FullDeltaList", ",", "signRules"}], "]"}]}],
            ";"}], "\n", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Echo", "[", "FullDeltaList", "]"}], ";"}], "*)"}], "\n", 
          ")"}], "&"}], "/@", "directionTable"}], ";", "\n", "\n", "\n", 
       RowBox[{"Return", "[", "FullDeltaList", "]"}]}]}], "\n", 
     "]"}]}]}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"cce475bb-b8f5-478c-a96e-fde6008ff66d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "somehow", " ", "it", " ", "also", " ", "fixes", " ", "external", " ", 
     "momenta"}], "..."}], "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{"Clear", "[", "MomentumConservationBRST", "]"}], "\n", 
   RowBox[{
    RowBox[{"MomentumConservationBRST", "[", 
     RowBox[{
     "diag_", ",", "replacementList_", ",", "positionFirstVert_", ",", 
      "allProps_", ",", "loopMom_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"newReplList", " ", "=", " ", "replacementList"}], ",", 
        "externalMomenta", ",", "signRules", ",", "diagfieldindices", ",", 
        " ", "posBRSTfield", ",", "BRSTcheck", ",", "newVar", ",", " ", 
        "prefVar", ",", "posNewMom", ",", "startingPoint", ",", "MemberList", 
        ",", 
        RowBox[{"FullDeltaList", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"MomentumCons", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ",", " ", "allMomenta"}], "}"}], ",", "\n", 
      "\n", 
      RowBox[{
       RowBox[{
        RowBox[{"newReplList", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], " ", "=", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"List", "@@", 
             RowBox[{"(", 
              RowBox[{"replacementList", "[", 
               RowBox[{"[", 
                RowBox[{"#", ",", "2"}], "]"}], "]"}], ")"}]}], ")"}], "&"}], 
          "/@", 
          RowBox[{"Table", "[", 
           RowBox[{"i", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "@", "replacementList"}]}], "}"}]}], "]"}]}], 
         ")"}]}], 
       RowBox[{"(*", 
        RowBox[{"[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "*)"}], ";", "\n", "\n", 
       "\n", 
       RowBox[{"signRules", " ", "=", "  ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"n_", "?", "NumericQ"}], "*", "q_"}], " ", "->", 
          "loopMom"}], "}"}]}], ";", "\n", "\n", 
       RowBox[{"externalMomenta", " ", "=", " ", 
        RowBox[{"replacementList", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2", ",", "1"}], "]"}], "]"}]}], ";", "\n", 
       "\n", "\n", "\n", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{
        "check", " ", "if", " ", "there", " ", "is", " ", "any", " ", 
         RowBox[{"loop", "?"}]}], " ", "*)"}], "\n", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "@", "allProps"}], ">", "0"}], ",", "\n", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
           "get", " ", "the", " ", "BRST", " ", "momentum", " ", "and", " ", 
            "set", " ", "it", " ", "to"}], " ", "-", "q"}], " ", "*)"}], "\n", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", "\n", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"Echo", "[", "#", "]"}], ";"}], "*)"}], "\n", "\n", 
             RowBox[{
              RowBox[{"diagfieldindices", " ", "=", " ", 
               RowBox[{"diag", "[", 
                RowBox[{"[", 
                 RowBox[{"#", ",", "\"\<indices\>\"", ",", "All", ",", "1"}], 
                 "]"}], "]"}]}], ";", "\n", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"Echo", "[", "diagfieldindices", "]"}], ";"}], "*)"}],
               "\n", 
              RowBox[{"BRSTcheck", " ", "=", " ", 
               RowBox[{"ToExpression", "[", 
                RowBox[{"StringCases", "[", 
                 RowBox[{
                  RowBox[{"ToString", "[", "diagfieldindices", "]"}], ",", 
                  RowBox[{"\"\<Q[\>\"", "~~", "__", "~~", "\"\<]\>\""}]}], 
                 "]"}], "]"}]}], ";", "\n", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"Echo", "[", "BRSTcheck", "]"}], ";"}], "*)"}], "\n", 
              
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "@", "BRSTcheck"}], ">", "0"}], ",", "\n", 
                
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{"Echo", "[", "\"\<true\>\"", "]"}], ";"}], "*)"}], 
                "\n", 
                RowBox[{
                 RowBox[{"posBRSTfield", " ", "=", " ", 
                  RowBox[{"{", 
                   RowBox[{"#", ",", "\"\<indices\>\"", ",", 
                    RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{"diagfieldindices", ",", 
                    RowBox[{"BRSTcheck", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "2", ",", 
                    "1"}], "}"}]}], ";"}], "\n", "\n", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{"Echo", "[", 
                   RowBox[{"{", 
                    RowBox[{"\"\<pos BRST: \>\"", ",", "posBRSTfield"}], 
                    "}"}], "]"}], ";"}], "*)"}], "\n", ",", "\n", "Nothing"}],
                "\n", "]"}], ";"}], "\n", "\n", ")"}], "&"}], "/@", 
           RowBox[{"Table", "[", 
            RowBox[{"i", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "@", "diag"}]}], "}"}]}], "]"}]}], ";", "\n",
           "\n", 
          RowBox[{"newVar", " ", "=", " ", 
           RowBox[{"diag", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"posBRSTfield", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"posBRSTfield", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"posBRSTfield", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", "2", ",", "1"}], "]"}], 
            "]"}]}], ";", "\n", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Echo", "[", "newVar", "]"}], ";"}], "*)"}], "\n", "\n", 
          RowBox[{"prefVar", " ", "=", " ", 
           RowBox[{"newVar", "/", 
            RowBox[{"(", 
             RowBox[{"newVar", "/.", "signRules"}], ")"}]}]}], ";", "\n", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"prefVar", ">", "0"}], ",", "\n", 
            RowBox[{
             RowBox[{"MomentumCons", " ", "=", " ", 
              RowBox[{"Flatten", "@", 
               RowBox[{"Solve", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"newVar", "+", "loopMom"}], "==", "0"}], ",", 
                 "newVar"}], "]"}]}]}], ";"}], "\n", ",", "\n", 
            RowBox[{"MomentumCons", " ", "=", " ", 
             RowBox[{"Flatten", "@", 
              RowBox[{"Solve", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"newVar", "+", "loopMom"}], "==", "0"}], ",", 
                RowBox[{"prefVar", "*", "newVar"}]}], "]"}]}]}]}], "\n", 
           "]"}], ";", "\n", 
          RowBox[{"startingPoint", " ", "=", " ", 
           RowBox[{"posBRSTfield", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", ",", "\n", "\n", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{"externalMomenta", ",", 
                RowBox[{"diag", "[", 
                 RowBox[{"[", 
                  RowBox[{
                  "1", ",", "\"\<indices\>\"", ",", "#", ",", "2", ",", "1"}],
                   "]"}], "]"}]}], "]"}], ",", "\n", 
              RowBox[{"Nothing", ";"}], "\n", ",", "\n", 
              RowBox[{
               RowBox[{"newVar", " ", "=", " ", 
                RowBox[{"diag", "[", 
                 RowBox[{"[", 
                  RowBox[{
                  "1", ",", "\"\<indices\>\"", ",", "#", ",", "2", ",", "1"}],
                   "]"}], "]"}]}], ";", "\n", "\n", 
               RowBox[{"prefVar", " ", "=", " ", 
                RowBox[{"newVar", "/", 
                 RowBox[{"(", 
                  RowBox[{"newVar", "/.", "signRules"}], ")"}]}]}], ";", "\n", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"prefVar", ">", "0"}], ",", "\n", 
                 RowBox[{
                  RowBox[{"MomentumCons", " ", "=", " ", 
                   RowBox[{"Flatten", "@", 
                    RowBox[{"Solve", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Total", "@", 
                    RowBox[{"diag", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    "1", ",", "\"\<indices\>\"", ",", "All", ",", "2", ",", 
                    "1"}], "]"}], "]"}]}], " ", "==", " ", "0"}], ",", " ", 
                    "newVar"}], "]"}]}]}], ";"}], "\n", ",", "\n", 
                 RowBox[{
                  RowBox[{"MomentumCons", " ", "=", " ", 
                   RowBox[{"Flatten", "@", 
                    RowBox[{"Solve", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Total", "@", 
                    RowBox[{"diag", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    "1", ",", "\"\<indices\>\"", ",", "All", ",", "2", ",", 
                    "1"}], "]"}], "]"}]}], " ", "==", " ", "0"}], ",", " ", 
                    RowBox[{"prefVar", "*", "newVar"}]}], "]"}]}]}], ";"}]}], 
                "\n", "]"}], ";"}]}], "\n", "\n", " ", "]"}], "&"}], "/@", 
           RowBox[{"Table", "[", 
            RowBox[{"i", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "@", 
                RowBox[{"diag", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "\"\<indices\>\"", ",", "All", ",", "2"}],
                   "]"}], "]"}]}]}], "}"}]}], "]"}]}], ";", "\n", 
          RowBox[{"startingPoint", " ", "=", " ", "1"}], ";"}]}], "\n", "]"}],
        ";", "\n", "\n", "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Echo", "[", 
          RowBox[{"{", 
           RowBox[{"\"\<Momentum cons.: \>\"", ",", " ", "MomentumCons"}], 
           "}"}], "]"}], ";"}], "*)"}], "\n", "\n", "\n", "\n", 
       RowBox[{"FullDeltaList", " ", "=", " ", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{"FullDeltaList", "/.", "MomentumCons"}], "]"}], ",", 
          "MomentumCons"}], "]"}]}], ";", "\n", 
       RowBox[{"myEcho", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<Delta List of momenta: \>\"", ",", "FullDeltaList"}], 
          "}"}], ",", "4"}], "]"}], ";", "\n", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "go", " ", "through", " ", "the", " ", "diagram", " ", "from", " ", 
          "left", " ", "to", " ", "right"}], ",", " ", 
         RowBox[{
         "starting", " ", "from", " ", "the", " ", "first", " ", "vertex", 
          " ", "or", " ", "BRST", " ", "vertex"}]}], " ", "*)"}], "\n", 
       RowBox[{
        RowBox[{
         RowBox[{"(", "\n", 
          RowBox[{
           RowBox[{"myEcho", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\"\<check object no. \>\"", ",", "#"}], "}"}], ",", 
             "4"}], "]"}], ";", "\n", "\n", 
           RowBox[{"allMomenta", " ", "=", " ", 
            RowBox[{
             RowBox[{"diag", "[", 
              RowBox[{"[", 
               RowBox[{
               "#", ",", "\"\<indices\>\"", ",", "All", ",", "2", ",", "1"}], 
               "]"}], "]"}], "/.", "FullDeltaList"}]}], ";", "\n", 
           RowBox[{"myEcho", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "\"\<all momenta in the object which is momentum fixed right \
now\>\"", ",", "allMomenta"}], "}"}], ",", "4"}], "]"}], ";", "\n", 
           RowBox[{"(*", " ", 
            RowBox[{
            "find", " ", "out", " ", "position", " ", "of", " ", "new", " ", 
             "momentum", " ", "which", " ", "is", " ", "not", " ", "yet", " ",
              "fixed"}], " ", "*)"}], "\n", 
           RowBox[{"myEcho", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "\"\<here.............................\>\"", ",", "allMomenta", 
               ",", "externalMomenta", ",", "signRules", ",", "loopMom"}], 
              "}"}], ",", "6"}], "]"}], ";", "\n", 
           RowBox[{"posNewMom", " ", "=", " ", 
            RowBox[{"FindPositionNewMomentum", "[", 
             RowBox[{
             "allMomenta", ",", "externalMomenta", ",", "signRules", ",", 
              "loopMom"}], "]"}]}], ";", "\n", "\n", 
           RowBox[{"myEcho", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\"\<here.............................\>\"", ",", 
               RowBox[{"diag", "[", 
                RowBox[{"[", "#", "]"}], "]"}], ",", "posNewMom", ",", 
               "allMomenta", ",", "FullDeltaList", ",", "signRules"}], "}"}], 
             ",", "6"}], "]"}], ";", "\n", 
           RowBox[{"FullDeltaList", " ", "=", " ", 
            RowBox[{"FixMomentum", "[", 
             RowBox[{
              RowBox[{"diag", "[", 
               RowBox[{"[", "#", "]"}], "]"}], ",", "posNewMom", ",", 
              "allMomenta", ",", "FullDeltaList", ",", "signRules"}], "]"}]}],
            ";"}], "\n", "\n", ")"}], "&"}], "/@", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{"i", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"startingPoint", "+", "1"}], ",", 
              RowBox[{"Length", "@", "diag"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{"i", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"startingPoint", "-", "1"}]}], "}"}]}], "]"}]}], 
         "]"}]}], ";", "\n", "\n", "\n", 
       RowBox[{"Return", "[", "FullDeltaList", "]"}]}]}], "\n", 
     "]"}]}]}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"8313f053-cd60-4636-a60c-b69779167528"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "ShiftLoopMomentum", "]"}], "\n", 
 RowBox[{
  RowBox[{"ShiftLoopMomentum", "[", 
   RowBox[{"Regdot_", ",", "loopIndex_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "SignRules", ",", "oldMomentum", ",", "  ", "oldMomClear", ",", 
      "Prefold", ",", " ", "shift", ",", "qnew"}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"SignRules", " ", "=", "  ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"n_", "?", "NumericQ"}], "*", "q_"}], " ", "->", "  ", "q"}],
        "}"}]}], ";", "\n", 
     RowBox[{"oldMomentum", " ", "=", " ", 
      RowBox[{"Regdot", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "\"\<indices\>\"", ",", "2", ",", "2", ",", "1"}], 
        "]"}], "]"}]}], ";", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Echo", "[", "oldMomentum", "]"}], ";"}], "*)"}], "\n", "\n", 
     RowBox[{"myEcho", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"oldMomentum", ",", "Prefold"}], "}"}], ",", "5"}], "]"}], 
     ";", "\n", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Echo", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Evaluate", "[", 
             RowBox[{"-", "loopIndex"}], "]"}], ",", "loopIndex"}], "}"}], 
          ",", "oldMomentum"}], "}"}], "]"}], ";"}], "*)"}], "\n", "\n", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{"-", "loopIndex"}], "]"}], ",", "loopIndex"}], "}"}], ",",
          "oldMomentum"}], "]"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"myEcho", "[", 
         RowBox[{"\"\<nothing to shift\>\"", ",", "5"}], "]"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Echo", "[", "\"\<nothing to shift\>\"", "]"}], ";"}], 
         "*)"}], "\n", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "}"}], ",", "Regdot", ",", "loopIndex"}], "}"}], 
         "]"}]}], "\n", "\n", ",", "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Echo", "[", "\"\<correct\>\"", "]"}], ";", "\n", "\n", 
         RowBox[{"Echo", "[", "\"\<shift\>\"", "]"}], ";"}], "*)"}], "\n", 
       RowBox[{
        RowBox[{"myEcho", "[", 
         RowBox[{"\"\<need to shift reg mom\>\"", ",", "5"}], "]"}], ";", 
        "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Echo", "[", 
           RowBox[{"oldMomentum", " ", "==", " ", "qnew"}], "]"}], ";"}], 
         "*)"}], "\n", 
        RowBox[{"shift", " ", "=", " ", 
         RowBox[{"Flatten", "@", 
          RowBox[{"Solve", "[", 
           RowBox[{
            RowBox[{"oldMomentum", " ", "==", " ", "qnew"}], ",", " ", 
            "loopIndex"}], "]"}]}]}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Echo", "[", "shift", "]"}], ";"}], "*)"}], "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"Prefold", "<", " ", "0"}], ",", "\n", 
            RowBox[{
             RowBox[{"myEcho", "[", 
              RowBox[{"\"\<<0\>\"", ",", "5"}], "]"}], ";", "\n", 
             RowBox[{"Echo", "[", "\"\<<0\>\"", "]"}], ";", "\n", 
             RowBox[{"Echo", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"oldMomentum", " ", "==", " ", "qnew"}], ",", " ", 
                "loopIndex"}], "}"}], "]"}], ";", "\n", 
             RowBox[{"shift", " ", "=", " ", 
              RowBox[{"First", "[", 
               RowBox[{"Solve", "[", 
                RowBox[{
                 RowBox[{"oldMomentum", " ", "==", " ", "qnew"}], ",", " ", 
                 "loopIndex"}], "]"}], "]"}]}], ";"}], "\n", ",", "\n", 
            RowBox[{
             RowBox[{"Echo", "[", "\"\<>0\>\"", "]"}], ";", "\n", 
             RowBox[{"myEcho", "[", 
              RowBox[{"\"\<>0\>\"", ",", "5"}], "]"}], ";", "\n", 
             RowBox[{"shift", " ", "=", " ", 
              RowBox[{"First", "[", 
               RowBox[{"Solve", "[", 
                RowBox[{
                 RowBox[{"oldMomentum", " ", "==", " ", 
                  RowBox[{"-", "qnew"}]}], ",", " ", "loopIndex"}], "]"}], 
               "]"}]}], ";"}]}], "\n", "]"}], ";"}], "*)"}], "\n", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Echo", "[", 
           RowBox[{"{", 
            RowBox[{"Regdot", ",", 
             RowBox[{"Regdot", "/.", "shift"}]}], "}"}], "]"}], ";"}], "*)"}],
         "\n", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{"shift", ",", 
           RowBox[{"Regdot", "/.", "shift"}], ",", "qnew"}], "}"}], "]"}]}]}],
       "\n", "]"}]}]}], "\n", "]"}]}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"75ea6ecd-6037-4367-983d-ea4a8a1f1c62"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "SwitchRegIndices", "]"}], "\n", 
 RowBox[{
  RowBox[{"SwitchRegIndices", "[", 
   RowBox[{"allProps_", ",", "allRegs_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"dummyallRegs", " ", "=", " ", "allRegs"}], ",", 
      "LeftIndexPos"}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"myEcho", "[", 
      RowBox[{"\"\<SwitchRegIndices\>\"", ",", "3"}], "]"}], ";", "\n", "\n", 
     
     RowBox[{"LeftIndexPos", " ", "=", " ", 
      RowBox[{
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"allProps", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "\"\<indices\>\"", ",", "All", ",", "2"}], 
                "]"}], "]"}], ",", 
              RowBox[{"allRegs", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "\"\<indices\>\"", ",", "#", ",", "2"}], 
                "]"}], "]"}]}], "]"}], ")"}], "&"}], "/@", 
          RowBox[{"Table", "[", 
           RowBox[{"i", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "@", 
               RowBox[{"allRegs", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "\"\<indices\>\""}], "]"}], "]"}]}]}], 
             "}"}]}], "]"}]}], ",", "True"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Echo", "[", "LeftIndexPos", "]"}], ";", "\n", 
       RowBox[{"Echo", "[", 
        RowBox[{"allRegs", "[", 
         RowBox[{"[", 
          RowBox[{
          "1", ",", "\"\<indices\>\"", ",", "2", ",", "LeftIndexPos", ",", 
           "2"}], "]"}], "]"}], "]"}], ";"}], "*)"}], "\n", 
     RowBox[{
      RowBox[{"dummyallRegs", "[", 
       RowBox[{"[", 
        RowBox[{
        "1", ",", "\"\<indices\>\"", ",", "2", ",", "LeftIndexPos", ",", 
         "2"}], "]"}], "]"}], " ", "=", " ", 
      RowBox[{"-", " ", 
       RowBox[{"allRegs", "[", 
        RowBox[{"[", 
         RowBox[{
         "1", ",", "\"\<indices\>\"", ",", "2", ",", "LeftIndexPos", ",", 
          "2"}], "]"}], "]"}]}]}], ";", "\n", 
     RowBox[{"Return", "[", "dummyallRegs", "]"}]}]}], "\n", 
   "]"}]}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"809c3a8c-9283-41e5-bab8-f3a6b280500b"]
}, Closed]],

Cell[CellGroupData[{

Cell["right now....", "Subsection",ExpressionUUID->"e0ce89bc-2eec-4d27-a38d-225088262171"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "get", " ", "an", " ", "assoc", " ", "with", " ", "the", " ", "positions", 
    " ", "of", " ", "objects"}], " ", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{"Clear", "[", "getAllObjectPositions", "]"}], "\n", 
   RowBox[{
    RowBox[{"getAllObjectPositions", "[", "RHSDiagram_", "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "props", " ", ",", "regs", ",", " ", "vertices", ",", " ", "classical",
         ",", " ", "brst", ",", "positionAssoc"}], "}"}], ",", "\n", 
      RowBox[{
       RowBox[{"props", " ", "=", " ", 
        RowBox[{"regs", " ", "=", " ", 
         RowBox[{"vertices", " ", "=", " ", 
          RowBox[{"classical", "=", " ", 
           RowBox[{"brst", " ", "=", " ", 
            RowBox[{"{", "}"}]}]}]}]}]}], ";", "\n", "\n", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Switch", "[", 
           RowBox[{
            RowBox[{"RHSDiagram", "[", 
             RowBox[{"[", 
              RowBox[{"#", ",", "\"\<type\>\""}], "]"}], "]"}], ",", "\n", 
            "\"\<Propagator\>\"", ",", 
            RowBox[{
             RowBox[{"props", " ", "=", 
              RowBox[{"Join", "[", 
               RowBox[{"props", ",", 
                RowBox[{"{", "#", "}"}]}], "]"}]}], ";"}], ",", "\n", 
            "\"\<Regulator\>\"", ",", 
            RowBox[{
             RowBox[{"regs", "=", 
              RowBox[{"Join", "[", 
               RowBox[{"regs", ",", 
                RowBox[{"{", "#", "}"}]}], "]"}]}], ";"}], ",", "\n", 
            "\"\<Regulatordot\>\"", ",", 
            RowBox[{
             RowBox[{"regs", "=", 
              RowBox[{"Join", "[", 
               RowBox[{"regs", ",", 
                RowBox[{"{", "#", "}"}]}], "]"}]}], ";"}], ",", "\n", "\n", 
            "\"\<nPoint\>\"", ",", "\n", 
            RowBox[{
             RowBox[{"Switch", "[", 
              RowBox[{
               RowBox[{"RHSDiagram", "[", 
                RowBox[{"[", 
                 RowBox[{"#", ",", "\"\<spec\>\""}], "]"}], "]"}], ",", "\n", 
               "\"\<none\>\"", ",", 
               RowBox[{
                RowBox[{"vertices", "=", " ", 
                 RowBox[{"Join", "[", 
                  RowBox[{"vertices", ",", 
                   RowBox[{"{", "#", "}"}]}], "]"}]}], ";"}], ",", "\n", 
               "\"\<classical\>\"", ",", 
               RowBox[{
                RowBox[{"classical", "=", 
                 RowBox[{"Join", "[", 
                  RowBox[{"classical", ",", 
                   RowBox[{"{", "#", "}"}]}], "]"}]}], ";"}], ",", "\n", 
               "\"\<BRST\>\"", ",", " ", 
               RowBox[{
                RowBox[{"brst", "=", 
                 RowBox[{"Join", "[", 
                  RowBox[{"brst", ",", 
                   RowBox[{"{", "#", "}"}]}], "]"}]}], ";"}]}], "\n", "]"}], 
             ";"}]}], "\n", "]"}], ")"}], "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"1", ",", 
          RowBox[{"Length", "@", "RHSDiagram"}], ",", "1"}], "]"}]}], ";", 
       "\n", "\n", 
       RowBox[{"positionAssoc", " ", "=", " ", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<Propagators\>\"", " ", "->", " ", "props"}], ",", " ", 
          
          RowBox[{"\"\<Regulators\>\"", " ", "->", " ", "regs"}], ",", " ", 
          RowBox[{"\"\<Vertices\>\"", "->", " ", "vertices"}], ",", " ", 
          RowBox[{"\"\<classicalVertices\>\"", "->", " ", "classical"}], ",", 
          " ", 
          RowBox[{"\"\<BRSTVertices\>\"", "->", " ", "brst"}]}], "|>"}]}], 
       ";", "\n", "\n", 
       RowBox[{"Return", "[", "positionAssoc", "]"}]}]}], "\n", "]"}], 
    "                                                                         \
              "}]}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"f929a436-cf9d-48eb-81ee-f63f2ee5c75f"]
}, Closed]],

Cell[CellGroupData[{

Cell["Helper", "Subsection",ExpressionUUID->"28afae71-cb16-4a0e-8e5b-025a1af2d0a3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "ReplaceOneIndex", "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"ReplaceOneIndex", "[", 
   RowBox[{
   "field_", ",", " ", "indices_", ",", " ", "superindexReplacementList_", 
    ",", " ", "fields_"}], "\n", "    ", "]"}], " ", ":=", "\n", "    ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"newfield", ",", " ", "posfield", ",", " ", "newIndices"}], 
     "}"}], ",", "\n", "        ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"superindexReplacementList", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], ",", " ", "indices"}],
        "]"}], ",", "\n", "            ", 
      RowBox[{"Return", "[", 
       RowBox[{"{", "Nothing", "}"}], "]"}], "\n", "            ", ",", "\n", 
      "            ", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ToString", "[", 
           RowBox[{"Head", "[", "field", "]"}], "]"}], " ", "==", " ", 
          "\"\<Q\>\""}], ",", "\n", "                ", 
         RowBox[{
          RowBox[{"newfield", " ", "=", " ", 
           RowBox[{"field", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", "                ",
          ",", "\n", "                ", 
         RowBox[{
          RowBox[{"newfield", " ", "=", " ", "field"}], ";"}]}], "\n", 
        "            ", "]"}], ";", "\n", "            ", 
       RowBox[{"posfield", " ", "=", " ", 
        RowBox[{"Position", "[", 
         RowBox[{"fields", ",", " ", 
          RowBox[{"newfield", "[", "___", "]"}]}], "]"}]}], ";", "\n", 
       "            ", 
       RowBox[{"newIndices", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{"Unique", ",", " ", 
          RowBox[{"List", " ", "@@", " ", 
           RowBox[{"(", 
            RowBox[{"Extract", "[", 
             RowBox[{"fields", ",", " ", 
              RowBox[{"posfield", "\n", "                ", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ")"}]}]}], "]"}]}], 
       ";", "\n", "            ", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"indices", " ", "->", " ", "newIndices"}], "}"}], "]"}]}]}], 
     "\n", "        ", "]"}]}], "\n", "    ", "]"}]}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"c69cc621-26d8-4c9a-9812-affd3b44481e"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "ReplaceIndices", "]"}], "\n", 
 RowBox[{
  RowBox[{"ReplaceIndices", "[", 
   RowBox[{
   "dummyObject_", ",", "superindexReplacementList_", ",", "fields_"}], "]"}],
   " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "iter", ",", "objIndices", ",", "objFields", ",", "IndexRules", ",", 
      RowBox[{
      "newsuperindexReplacementList", " ", "=", " ", 
       "superindexReplacementList"}]}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"objIndices", " ", "=", " ", 
      RowBox[{"dummyObject", "[", 
       RowBox[{"[", 
        RowBox[{"\"\<indices\>\"", ",", "All", ",", "2"}], "]"}], "]"}]}], 
     ";", "\n", 
     RowBox[{"objFields", " ", "=", " ", 
      RowBox[{"dummyObject", "[", 
       RowBox[{"[", 
        RowBox[{"\"\<indices\>\"", ",", "All", ",", "1"}], "]"}], "]"}]}], 
     ";", "\n", "\n", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"iter", "=", "1"}], ",", 
       RowBox[{"iter", "<=", 
        RowBox[{"Length", "@", "objIndices"}]}], ",", 
       RowBox[{"iter", "++"}], ",", "\n", 
       RowBox[{
        RowBox[{"IndexRules", " ", "=", " ", 
         RowBox[{"ReplaceOneIndex", "[", 
          RowBox[{
           RowBox[{"objFields", "[", 
            RowBox[{"[", "iter", "]"}], "]"}], ",", 
           RowBox[{"objIndices", "[", 
            RowBox[{"[", "iter", "]"}], "]"}], ",", 
           "superindexReplacementList", ",", "fields"}], "]"}]}], ";", "\n", 
        RowBox[{"newsuperindexReplacementList", " ", "=", " ", 
         RowBox[{"Join", "[", 
          RowBox[{"IndexRules", ",", "newsuperindexReplacementList"}], 
          "]"}]}], ";", "\n", 
        RowBox[{"objIndices", " ", "=", " ", 
         RowBox[{"objIndices", "/.", "newsuperindexReplacementList"}]}], ";", 
        "\n", 
        RowBox[{"objFields", " ", "=", " ", 
         RowBox[{"objFields", "/.", "newsuperindexReplacementList"}]}], 
        ";"}]}], "\n", "]"}], ";", "\n", "\n", 
     RowBox[{"Return", "[", "newsuperindexReplacementList", "]"}]}]}], "\n", 
   "]"}]}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"0545ff2b-cb85-411b-bc9c-3c0db1b327f9"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "conserveOneObjectMomentum", "]"}], "\n", 
 RowBox[{
  RowBox[{"conserveOneObjectMomentum", "[", 
   RowBox[{
   "DiagObj_", ",", "momConsList_", ",", "loopIndex_", ",", 
    "BRSTmomentum___"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "newDiagObj", ",", " ", "newMomList", ",", "openMomIndex", ",", " ", 
      "newRule"}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"newDiagObj", " ", "=", " ", 
      RowBox[{"DiagObj", "/.", "momConsList"}]}], ";", "\n", "\n", 
     RowBox[{"newMomList", " ", "=", " ", 
      RowBox[{"newDiagObj", "[", 
       RowBox[{"[", 
        RowBox[{"\"\<indices\>\"", ",", "All", ",", "2", ",", "1"}], "]"}], 
       "]"}]}], ";", "\n", "\n", 
     RowBox[{"openMomIndex", " ", "=", "  ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"StringMatchQ", "[", 
            RowBox[{
             RowBox[{"ToString", "[", 
              RowBox[{"newMomList", "[", 
               RowBox[{"[", "#", "]"}], "]"}], "]"}], ",", " ", 
             RowBox[{"__", "~~", "\"\<$\>\"", "~~", "__"}]}], "]"}], ",", 
           "\n", 
           RowBox[{"newMomList", "[", 
            RowBox[{"[", "#", "]"}], "]"}], ",", "\n", "Nothing"}], "]"}], 
         ")"}], "&"}], "/@", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "@", "newMomList"}], "]"}]}]}], ";", "\n", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Echo", "[", "openMomIndex", "]"}], ";"}], "*)"}], "\n", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "@", "openMomIndex"}], "==", " ", "0"}], ",", "\n", 
       "\n", 
       RowBox[{"Return", "[", "momConsList", "]"}], "\n", ",", "\n", 
       RowBox[{
        RowBox[{"newRule", " ", "=", " ", 
         RowBox[{"conserveOneObjectMomentumbyType", "[", 
          RowBox[{
          "DiagObj", ",", "newDiagObj", ",", "momConsList", ",", "newMomList",
            ",", "openMomIndex", ",", "BRSTmomentum"}], "]"}]}], ";", "\n", 
        RowBox[{"Return", "[", "newRule", "]"}]}]}], "\n", "]"}]}]}], "\n", 
   "]"}]}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"333e9ef9-680d-4807-b8ee-0ffc7609539e"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "conserveOneObjectMomentumbyType", "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"conserveOneObjectMomentumbyType", "[", 
    RowBox[{
    "DiagObj_", ",", "newDiagObj_", ",", "momConsList_", ",", "newMomList_", 
     ",", "openMomIndex_", ",", "BRSTmomentum_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "newRule", "}"}], ",", "\n", "\n", 
     RowBox[{
      RowBox[{"Switch", "[", 
       RowBox[{
        RowBox[{"DiagObj", "[", 
         RowBox[{"[", "\"\<type\>\"", "]"}], "]"}], ",", "\n", 
        "\"\<Regulator\>\"", ",", 
        RowBox[{"newRule", " ", "=", " ", 
         RowBox[{"conserveRegulatorMomentum", "[", 
          RowBox[{
          "newDiagObj", ",", "momConsList", ",", "newMomList", ",", 
           "openMomIndex", ",", "BRSTmomentum"}], "]"}]}], ",", "\n", 
        "\"\<Regulatordot\>\"", ",", 
        RowBox[{"newRule", " ", "=", " ", 
         RowBox[{"conserveRegulatorMomentum", "[", 
          RowBox[{
          "newDiagObj", ",", "momConsList", ",", "newMomList", ",", 
           "openMomIndex", ",", "BRSTmomentum"}], "]"}]}], ",", "\n", 
        "\"\<Propagator\>\"", ",", 
        RowBox[{"newRule", " ", "=", " ", 
         RowBox[{"conserveVertexMomentum", "[", 
          RowBox[{
          "newDiagObj", ",", "momConsList", ",", "newMomList", ",", 
           "openMomIndex"}], "]"}]}], ",", "\n", "\"\<nPoint\>\"", ",", " ", 
        RowBox[{
         RowBox[{"newRule", " ", "=", " ", 
          RowBox[{"conserveVertexMomentum", "[", 
           RowBox[{
           "newDiagObj", ",", "momConsList", ",", "newMomList", ",", 
            "openMomIndex"}], "]"}]}], ";"}]}], "\n", "]"}], ";", "\n", 
      RowBox[{"Return", "[", "newRule", "]"}]}]}], "\n", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"conserveOneObjectMomentumbyType", "[", 
   RowBox[{
   "DiagObj_", ",", "newDiagObj_", ",", "momConsList_", ",", "newMomList_", 
    ",", "openMomIndex_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "newRule", "}"}], ",", "\n", "\n", 
    RowBox[{
     RowBox[{"newRule", " ", "=", " ", 
      RowBox[{"conserveVertexMomentum", "[", 
       RowBox[{
       "newDiagObj", ",", "momConsList", ",", "newMomList", ",", 
        "openMomIndex"}], "]"}]}], ";", "\n", "\n", 
     RowBox[{"Return", "[", "newRule", "]"}]}]}], "\n", "]"}]}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"5c86bd2c-9cb0-4211-8717-e2f38f3e4958"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "conserveRegulatorMomentum", "]"}], "\n", 
 RowBox[{
  RowBox[{"conserveRegulatorMomentum", "[", 
   RowBox[{
   "DiagObj_", ",", "momConsList_", ",", "newMomList_", ",", "openMomIndex_", 
    ",", "BRSTmomentum_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"openMomIndexnew", ",", "newRule"}], "}"}], ",", "\n", "\n", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "@", "openMomIndex"}], "==", "0"}], ",", "\n", 
      RowBox[{"Return", "[", "momConsList", "]"}], "\n", ",", "\n", "\n", 
      RowBox[{
       RowBox[{"openMomIndexnew", " ", "=", " ", 
        RowBox[{"openMomIndex", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "\n", 
       RowBox[{"newRule", " ", "=", " ", 
        RowBox[{"Solve", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Total", "[", "newMomList", "]"}], "+", 
             RowBox[{"2", "*", "QMeSderivation`Private`q"}]}], ")"}], "==", 
           "0"}], ",", " ", "openMomIndexnew"}], "]"}]}], ";", "\n", "\n", 
       RowBox[{"Return", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"momConsList", ",", 
          RowBox[{"newRule", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}]}]}], "\n", "]"}]}], 
   "\n", "]"}]}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"51f3ab91-0c7b-4eb8-8d70-be57a16a75b5"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "conserveVertexMomentum", "]"}], "\n", 
 RowBox[{
  RowBox[{"conserveVertexMomentum", "[", 
   RowBox[{
   "DiagObj_", ",", "momConsList_", ",", "newMomList_", ",", 
    "openMomIndex_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"newRule", ",", "dummyRule", ",", "dummynewIndex"}], "}"}], ",", 
    "\n", "\n", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "@", "openMomIndex"}], "==", "0"}], ",", "\n", 
      RowBox[{"Return", "[", "momConsList", "]"}], "\n", ",", "\n", "\n", 
      RowBox[{
       RowBox[{"dummyRule", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"openMomIndex", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "->", "dummynewIndex"}], "}"}]}], 
       ";", "\n", "\n", 
       RowBox[{"newRule", " ", "=", " ", 
        RowBox[{
         RowBox[{"Solve", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Total", "[", 
             RowBox[{"newMomList", "/.", "dummyRule"}], "]"}], "==", "0"}], 
           ",", " ", "dummynewIndex"}], "]"}], "/.", 
         RowBox[{"Reverse", "/@", "dummyRule"}]}]}], ";", "\n", "\n", "\n", 
       RowBox[{"Return", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"momConsList", ",", 
          RowBox[{"newRule", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}]}]}], "\n", "]"}]}], 
   "\n", "]"}]}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"750ff0fe-2576-4e7f-acee-4edd86373bed"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "shiftLoopFromBRST", "]"}], "\n", 
 RowBox[{
  RowBox[{"shiftLoopFromBRST", "[", 
   RowBox[{"Diag_", ",", "objectPositionAssoc_", ",", "loopIndex_"}], "]"}], 
  " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "posBRSTsource", ",", "BRSTmomentum", ",", " ", "momConsList", ",", 
      "momConsListnew"}], "}"}], ",", "\n", "\n", 
    RowBox[{
     RowBox[{"posBRSTsource", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Position", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Diag", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"objectPositionAssoc", "[", 
               RowBox[{"[", "\"\<BRSTVertices\>\"", "]"}], "]"}], ",", 
              "\"\<indices\>\""}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "Global`Q"}], "]"}], ")"}], 
       "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "\n", 
     RowBox[{"BRSTmomentum", " ", "=", " ", 
      RowBox[{"Extract", "[", 
       RowBox[{
        RowBox[{"Extract", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Diag", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"objectPositionAssoc", "[", 
               RowBox[{"[", "\"\<BRSTVertices\>\"", "]"}], "]"}], ",", 
              "\"\<indices\>\""}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"posBRSTsource", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"momConsList", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"BRSTmomentum", "->", 
        RowBox[{"-", "loopIndex"}]}], "}"}]}], ";", "\n", "\n", 
     RowBox[{"momConsListnew", " ", "=", " ", 
      RowBox[{"conserveOneObjectMomentum", "[", 
       RowBox[{
        RowBox[{"Diag", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"objectPositionAssoc", "[", 
            RowBox[{"[", "\"\<BRSTVertices\>\"", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", "momConsList", 
        ",", "loopIndex", ",", "BRSTmomentum"}], "]"}]}], ";", "\n", "\n", 
     "\n", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"objectPositionAssoc", "[", 
          RowBox[{"[", "\"\<BRSTVertices\>\"", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], " ", "==", " ", 
        RowBox[{"Length", "@", "Diag"}]}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"momConsListnew", " ", "=", " ", 
            RowBox[{"conserveOneObjectMomentum", "[", 
             RowBox[{
              RowBox[{"Diag", "[", 
               RowBox[{"[", "#", "]"}], "]"}], ",", "momConsListnew", ",", 
              "loopIndex", ",", "BRSTmomentum"}], "]"}]}], ")"}], "&"}], "/@", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", 
           RowBox[{
            RowBox[{"Length", "@", "Diag"}], "-", "1"}]}], "]"}]}], ";"}], 
       "\n", ",", "\n", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"momConsListnew", " ", "=", " ", 
            RowBox[{"conserveOneObjectMomentum", "[", 
             RowBox[{
              RowBox[{"Diag", "[", 
               RowBox[{"[", "#", "]"}], "]"}], ",", "momConsListnew", ",", 
              "loopIndex", ",", "BRSTmomentum"}], "]"}]}], ")"}], "&"}], "/@", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"objectPositionAssoc", "[", 
                RowBox[{"[", "\"\<BRSTVertices\>\"", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], ",", 
             RowBox[{"Length", "@", "Diag"}]}], "]"}], ",", 
           RowBox[{"Range", "[", 
            RowBox[{"1", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"objectPositionAssoc", "[", 
                RowBox[{"[", "\"\<BRSTVertices\>\"", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}]}], "]"}]}],
         ";"}]}], "\n", "]"}], ";", "\n", "\n", 
     RowBox[{"Return", "[", 
      RowBox[{"Diag", "/.", "momConsListnew"}], "]"}], ";"}]}], "\n", 
   "]"}]}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"97b1d85b-edea-4dce-8af5-88ef4907ed6e"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "shiftLoopFromFirstVertex", "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"shiftLoopFromFirstVertex", "[", 
    RowBox[{
    "Diag_", ",", "objectPositionAssoc_", ",", "derivativeList_", ",", 
     "loopIndex_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"posfirstDer", ",", "direction", ",", " ", 
       RowBox[{"iter", " ", "=", " ", "2"}], ",", "loopDirIndex", ",", 
       "momConsList", ",", "momConsListnew", ",", "distanceright", ",", 
       "distanceleft", ",", "IndexDiag"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"posfirstDer", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Position", "[", 
          RowBox[{
           RowBox[{"Diag", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "\"\<indices\>\""}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Head", "[", 
              RowBox[{"derivativeList", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
             RowBox[{"List", "@@", 
              RowBox[{"(", 
               RowBox[{"derivativeList", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ")"}]}]}], "}"}]}], "]"}], 
         ")"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{"unique", " ", "tad", " ", "direction"}], "*)"}], "\n", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "Diag"}], "-", 
            RowBox[{"posfirstDer", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], " ", "==", " ", 
           RowBox[{
            RowBox[{"posfirstDer", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "-", "2"}]}], ")"}], "&&", " ", 
         RowBox[{"(", 
          RowBox[{"iter", " ", "<=", " ", 
           RowBox[{"Length", "@", "derivativeList"}]}], ")"}]}], ",", "\n", 
        "\n", 
        RowBox[{
         RowBox[{"posfirstDer", " ", "=", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Position", "[", 
             RowBox[{
              RowBox[{"Diag", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "\"\<indices\>\""}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Head", "[", 
                 RowBox[{"derivativeList", "[", 
                  RowBox[{"[", "iter", "]"}], "]"}], "]"}], ",", 
                RowBox[{"List", "@@", 
                 RowBox[{"(", 
                  RowBox[{"derivativeList", "[", 
                   RowBox[{"[", "iter", "]"}], "]"}], ")"}]}]}], "}"}]}], 
             "]"}], ")"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", 
         RowBox[{"iter", " ", "=", " ", 
          RowBox[{"iter", "+", "1"}]}], ";"}]}], "\n", "]"}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Echo", "[", 
         RowBox[{"{", 
          RowBox[{"posfirstDer", ",", 
           RowBox[{"Length", "@", "Diag"}]}], "}"}], "]"}], ";"}], "*)"}], 
      "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "Diag"}], "-", 
            RowBox[{"posfirstDer", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "==", 
           RowBox[{
            RowBox[{"posfirstDer", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "-", "2"}]}], ",", "\n", "\n", 
          RowBox[{
           RowBox[{"direction", " ", "=", " ", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"posfirstDer", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], ",", 
                RowBox[{"Length", "@", "Diag"}]}], "]"}], ",", 
              RowBox[{"Range", "[", 
               RowBox[{"1", ",", 
                RowBox[{
                 RowBox[{"posfirstDer", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}]}], 
             "]"}]}], ";"}], "\n", ",", "\n", 
          RowBox[{
           RowBox[{"Switch", "[", 
            RowBox[{
             RowBox[{"objectPositionAssoc", "[", 
              RowBox[{"[", 
               RowBox[{"\"\<Regulators\>\"", ",", "1"}], "]"}], "]"}], ",", 
             "\n", 
             RowBox[{
              RowBox[{"posfirstDer", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "+", "2", "-", 
              RowBox[{"Length", "@", "Diag"}]}], ",", " ", "\n", " ", 
             RowBox[{
              RowBox[{"direction", " ", "=", " ", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"Range", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"posfirstDer", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], ",", 
                   RowBox[{"Length", "@", "Diag"}]}], "]"}], ",", 
                 RowBox[{"Range", "[", 
                  RowBox[{"1", ",", 
                   RowBox[{
                    RowBox[{"posfirstDer", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}]}], 
                "]"}]}], ";"}], " ", "\n", ",", "\n", 
             RowBox[{
              RowBox[{"posfirstDer", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "-", "2"}], ",", " ", 
             RowBox[{
              RowBox[{"direction", " ", "=", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"Range", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"posfirstDer", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], ",", "1", ",", 
                   RowBox[{"-", "1"}]}], "]"}], ",", 
                 RowBox[{"Range", "[", 
                  RowBox[{
                   RowBox[{"Length", "@", "Diag"}], ",", 
                   RowBox[{
                    RowBox[{"posfirstDer", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], ",", 
                   RowBox[{"-", "1"}]}], "]"}]}], "]"}]}], ";"}]}], "\n", 
            "]"}], ";"}]}], "]"}], ";"}], "*)"}], "\n", 
      RowBox[{"distanceright", " ", "=", " ", 
       RowBox[{
        RowBox[{"Length", "@", "Diag"}], "-", 
        RowBox[{"posfirstDer", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "+", 
        RowBox[{"objectPositionAssoc", "[", 
         RowBox[{"[", 
          RowBox[{"\"\<Regulators\>\"", ",", "1"}], "]"}], "]"}]}]}], ";", 
      "\n", 
      RowBox[{"distanceleft", " ", "=", " ", 
       RowBox[{
        RowBox[{"posfirstDer", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "-", 
        RowBox[{"objectPositionAssoc", "[", 
         RowBox[{"[", 
          RowBox[{"\"\<Regulators\>\"", ",", "1"}], "]"}], "]"}]}]}], ";", 
      "\n", "\n", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"distanceright", 
         RowBox[{"(*", ">", "*)"}], "<", "distanceleft"}], ",", "\n", 
        RowBox[{
         RowBox[{"direction", " ", "=", " ", 
          RowBox[{"(*", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"posfirstDer", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], ",", 
               RowBox[{"Length", "@", "Diag"}]}], "]"}], ",", 
             RowBox[{"Range", "[", 
              RowBox[{"1", ",", 
               RowBox[{
                RowBox[{"posfirstDer", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}]}], "]"}],
            "*)"}], 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{
              RowBox[{"objectPositionAssoc", "[", 
               RowBox[{"[", 
                RowBox[{"\"\<Regulators\>\"", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"Length", "@", "Diag"}]}], "]"}], ",", 
            RowBox[{"Range", "[", 
             RowBox[{"1", ",", 
              RowBox[{"objectPositionAssoc", "[", 
               RowBox[{"[", 
                RowBox[{"\"\<Regulators\>\"", ",", "1"}], "]"}], "]"}]}], 
             "]"}]}], "]"}]}], ";"}], "\n", "\n", ",", "\n", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"distanceright", " ", "==", " ", "distanceleft"}], ",", 
           "\n", 
           RowBox[{
            RowBox[{"direction", " ", "=", " ", 
             RowBox[{"(*", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"Range", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"posfirstDer", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], ",", 
                  RowBox[{"Length", "@", "Diag"}]}], "]"}], ",", 
                RowBox[{"Range", "[", 
                 RowBox[{"1", ",", 
                  RowBox[{
                   RowBox[{"posfirstDer", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}]}], 
               "]"}], "*)"}], 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{
                 RowBox[{"objectPositionAssoc", "[", 
                  RowBox[{"[", 
                   RowBox[{"\"\<Regulators\>\"", ",", "1"}], "]"}], "]"}], 
                 ",", 
                 RowBox[{"Length", "@", "Diag"}]}], "]"}], ",", 
               RowBox[{"Range", "[", 
                RowBox[{"1", ",", 
                 RowBox[{"objectPositionAssoc", "[", 
                  RowBox[{"[", 
                   RowBox[{"\"\<Regulators\>\"", ",", "1"}], "]"}], "]"}]}], 
                "]"}]}], "]"}]}], ";"}], "\n", "\n", ",", "\n", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"distanceright", 
               RowBox[{"(*", "<", "*)"}], ">", "distanceleft"}], ",", "\n", 
              RowBox[{
               RowBox[{"direction", " ", "=", 
                RowBox[{"(*", 
                 RowBox[{"Join", "[", 
                  RowBox[{
                   RowBox[{"Range", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"posfirstDer", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], ",", "1", ",", 
                    RowBox[{"-", "1"}]}], "]"}], ",", 
                   RowBox[{"Range", "[", 
                    RowBox[{
                    RowBox[{"Length", "@", "Diag"}], ",", 
                    RowBox[{
                    RowBox[{"posfirstDer", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], ",", 
                    RowBox[{"-", "1"}]}], "]"}]}], "]"}], "*)"}], 
                RowBox[{"Join", "[", 
                 RowBox[{
                  RowBox[{"Range", "[", 
                   RowBox[{
                    RowBox[{"objectPositionAssoc", "[", 
                    RowBox[{"[", 
                    RowBox[{"\"\<Regulators\>\"", ",", "1"}], "]"}], "]"}], 
                    ",", "1", ",", 
                    RowBox[{"-", "1"}]}], "]"}], ",", 
                  RowBox[{"Range", "[", 
                   RowBox[{
                    RowBox[{"Length", "@", "Diag"}], ",", 
                    RowBox[{"objectPositionAssoc", "[", 
                    RowBox[{"[", 
                    RowBox[{"\"\<Regulators\>\"", ",", "1"}], "]"}], "]"}], 
                    ",", 
                    RowBox[{"-", "1"}]}], "]"}]}], "]"}]}], ";"}], "\n", "\n",
               ",", "\n", 
              RowBox[{
               RowBox[{"direction", " ", "=", 
                RowBox[{"(*", 
                 RowBox[{"Join", "[", 
                  RowBox[{
                   RowBox[{"Range", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"posfirstDer", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], ",", "1", ",", 
                    RowBox[{"-", "1"}]}], "]"}], ",", 
                   RowBox[{"Range", "[", 
                    RowBox[{
                    RowBox[{"Length", "@", "Diag"}], ",", 
                    RowBox[{
                    RowBox[{"posfirstDer", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], ",", 
                    RowBox[{"-", "1"}]}], "]"}]}], "]"}], "*)"}], 
                RowBox[{"Join", "[", 
                 RowBox[{
                  RowBox[{"Range", "[", 
                   RowBox[{
                    RowBox[{"objectPositionAssoc", "[", 
                    RowBox[{"[", 
                    RowBox[{"\"\<Regulators\>\"", ",", "1"}], "]"}], "]"}], 
                    ",", "1", ",", 
                    RowBox[{"-", "1"}]}], "]"}], ",", 
                  RowBox[{"Range", "[", 
                   RowBox[{
                    RowBox[{"Length", "@", "Diag"}], ",", 
                    RowBox[{"objectPositionAssoc", "[", 
                    RowBox[{"[", 
                    RowBox[{"\"\<Regulators\>\"", ",", "1"}], "]"}], "]"}], 
                    ",", 
                    RowBox[{"-", "1"}]}], "]"}]}], "]"}]}], ";"}]}], "\n", 
             "\n", "]"}], ";"}]}], "\n", "]"}], ";"}]}], "\n", "]"}], ";", 
      "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"loopDirIndex", " ", "=", " ", 
         RowBox[{"FindMatchingIndex", "[", 
          RowBox[{
           RowBox[{"Diag", "[", 
            RowBox[{"[", 
             RowBox[{"posfirstDer", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"Diag", "[", 
            RowBox[{"[", 
             RowBox[{"direction", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], "]"}]}], ";"}], 
       "*)"}], "\n", "\n", 
      RowBox[{"loopDirIndex", " ", "=", " ", 
       RowBox[{"FindMatchingIndex", "[", 
        RowBox[{
         RowBox[{"Diag", "[", 
          RowBox[{"[", 
           RowBox[{"objectPositionAssoc", "[", 
            RowBox[{"[", 
             RowBox[{"\"\<Regulators\>\"", ",", "1"}], "]"}], "]"}], "]"}], 
          "]"}], ",", 
         RowBox[{"Diag", "[", 
          RowBox[{"[", 
           RowBox[{"direction", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], "]"}]}], ";", 
      "\n", "\n", 
      RowBox[{"momConsList", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"loopDirIndex", "->", 
         RowBox[{"-", "loopIndex"}]}], "}"}]}], ";", "\n", "\n", "\n", "\n", 
      RowBox[{"momConsListnew", " ", "=", " ", 
       RowBox[{"conserveOneObjectMomentum", "[", 
        RowBox[{
         RowBox[{"Diag", "[", 
          RowBox[{"[", 
           RowBox[{"(*", 
            RowBox[{"posfirstDer", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "*)"}], 
           RowBox[{"objectPositionAssoc", "[", 
            RowBox[{"[", 
             RowBox[{"\"\<Regulators\>\"", ",", "1"}], "]"}], "]"}], "]"}], 
          "]"}], ",", "momConsList", ",", "loopIndex"}], "]"}]}], ";", "\n", 
      "\n", "\n", "\n", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"momConsListnew", " ", "=", " ", 
          RowBox[{"conserveOneObjectMomentum", "[", 
           RowBox[{
            RowBox[{"Diag", "[", 
             RowBox[{"[", "#", "]"}], "]"}], ",", "momConsListnew", ",", 
            "loopIndex"}], "]"}]}], ")"}], "&"}], "/@", "direction"}], ";", 
      "\n", "\n", "\n", 
      RowBox[{"Return", "[", 
       RowBox[{"Diag", "/.", "momConsListnew"}], "]"}], ";"}]}], "\n", 
    "]"}]}], "\n"}], "\n"}], "Input",
 InitializationCell->
  True,ExpressionUUID->"534afdc8-366f-42bb-8f19-be0273f2f631"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "FindMatchingIndex", "]"}], "\n", 
 RowBox[{
  RowBox[{"FindMatchingIndex", "[", 
   RowBox[{"firstDiag_", ",", "nextDiag_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"allfirstIndices", ",", "allnextIndices", ",", "matchingIndex"}],
      "}"}], ",", "\n", "\n", 
    RowBox[{
     RowBox[{"allfirstIndices", " ", "=", " ", 
      RowBox[{"firstDiag", "[", 
       RowBox[{"[", 
        RowBox[{"\"\<indices\>\"", ",", "All", ",", "2", ",", "1"}], "]"}], 
       "]"}]}], ";", "\n", 
     RowBox[{"allnextIndices", " ", "=", " ", 
      RowBox[{"nextDiag", "[", 
       RowBox[{"[", 
        RowBox[{"\"\<indices\>\"", ",", "All", ",", "2", ",", "1"}], "]"}], 
       "]"}]}], ";", "\n", "\n", 
     RowBox[{"matchingIndex", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{"allfirstIndices", ",", 
             RowBox[{"allnextIndices", "[", 
              RowBox[{"[", "#", "]"}], "]"}]}], "]"}], ",", "\n", 
           RowBox[{"allnextIndices", "[", 
            RowBox[{"[", "#", "]"}], "]"}], ",", "\n", "Nothing"}], "\n", 
          "]"}], ")"}], "&"}], "/@", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "@", "allnextIndices"}], "]"}]}]}], ";", "\n", "\n", 
     RowBox[{"Return", "[", 
      RowBox[{"matchingIndex", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], "\n", "]"}]}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"6372fc10-f1de-4aba-af51-7023592bcba6"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "shiftLoopFromFirstVertexDSE", "]"}], "\n", 
 RowBox[{
  RowBox[{"shiftLoopFromFirstVertexDSE", "[", 
   RowBox[{
   "Diag_", ",", "objectPositionAssoc_", ",", "derivativeList_", ",", 
    "loopIndex_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "posfirstDer", ",", "direction", ",", " ", "loopDirIndex", ",", 
      "momConsList", ",", "momConsListnew"}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"posfirstDer", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Position", "[", 
         RowBox[{
          RowBox[{"Diag", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "\"\<indices\>\""}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Head", "[", 
             RowBox[{"derivativeList", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
            RowBox[{"List", "@@", 
             RowBox[{"(", 
              RowBox[{"derivativeList", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ")"}]}]}], "}"}]}], "]"}], 
        ")"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "\n", "\n", " ", 
     RowBox[{"direction", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"posfirstDer", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], ",", 
          RowBox[{"Length", "@", "Diag"}]}], "]"}], ",", 
        RowBox[{"Range", "[", 
         RowBox[{"1", ",", 
          RowBox[{
           RowBox[{"posfirstDer", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}]}], "]"}]}], 
     ";", " ", "\n", "\n", "\n", 
     RowBox[{"loopDirIndex", " ", "=", " ", 
      RowBox[{"FindMatchingIndex", "[", 
       RowBox[{
        RowBox[{"Diag", "[", 
         RowBox[{"[", 
          RowBox[{"posfirstDer", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
        RowBox[{"Diag", "[", 
         RowBox[{"[", 
          RowBox[{"direction", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], "]"}]}], ";", "\n",
      "\n", 
     RowBox[{"momConsList", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"loopDirIndex", "->", 
        RowBox[{"-", "loopIndex"}]}], "}"}]}], ";", "\n", "\n", "\n", "\n", 
     RowBox[{"momConsListnew", " ", "=", " ", 
      RowBox[{"conserveOneObjectMomentum", "[", 
       RowBox[{
        RowBox[{"Diag", "[", 
         RowBox[{"[", 
          RowBox[{"posfirstDer", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", "momConsList", 
        ",", "loopIndex"}], "]"}]}], ";", "\n", "\n", "\n", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"momConsListnew", " ", "=", " ", 
         RowBox[{"conserveOneObjectMomentum", "[", 
          RowBox[{
           RowBox[{"Diag", "[", 
            RowBox[{"[", "#", "]"}], "]"}], ",", "momConsListnew", ",", 
           "loopIndex"}], "]"}]}], ")"}], "&"}], "/@", "direction"}], ";", 
     "\n", "\n", 
     RowBox[{"Return", "[", 
      RowBox[{"Diag", "/.", "momConsListnew"}], "]"}], ";"}]}], "\n", 
   "]"}]}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"842305f0-9156-462f-a305-238218cafc78"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "conserveExternalMomenta", "]"}], "\n", 
 RowBox[{
  RowBox[{"conserveExternalMomenta", "[", 
   RowBox[{"dummyDiagObj_", ",", "objectPositionAssoc_"}], "]"}], " ", ":=", 
  " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "posBRSTsource", ",", "BRSTmomentum", ",", "BRSTshift", ",", 
      "newdummyDiag", ",", 
      RowBox[{"momConsList", " ", "=", " ", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", "\n", "\n", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "@", 
         RowBox[{"(", 
          RowBox[{"objectPositionAssoc", "[", "\"\<BRSTVertices\>\"", "]"}], 
          ")"}]}], ">", "0"}], ",", "\n", 
       RowBox[{
        RowBox[{"posBRSTsource", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Position", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"dummyDiagObj", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"objectPositionAssoc", "[", 
                  RowBox[{"[", "\"\<BRSTVertices\>\"", "]"}], "]"}], ",", 
                 "\"\<indices\>\""}], "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "Global`Q"}], "]"}], ")"}],
           "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "\n", 
        RowBox[{"BRSTmomentum", " ", "=", " ", 
         RowBox[{"Extract", "[", 
          RowBox[{
           RowBox[{"Extract", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"dummyDiagObj", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"objectPositionAssoc", "[", 
                  RowBox[{"[", "\"\<BRSTVertices\>\"", "]"}], "]"}], ",", 
                 "\"\<indices\>\""}], "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"posBRSTsource", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "1"}], "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"BRSTshift", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{"BRSTmomentum", "->", 
           RowBox[{"-", "BRSTmomentum"}]}], "}"}]}], ";", "\n", 
        RowBox[{"newdummyDiag", " ", "=", " ", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"dummyDiagObj", "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", 
              RowBox[{
               RowBox[{"objectPositionAssoc", "[", 
                RowBox[{"[", 
                 RowBox[{"\"\<BRSTVertices\>\"", ",", "1"}], "]"}], "]"}], 
               "-", "1"}]}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"dummyDiagObj", "[", 
              RowBox[{"[", 
               RowBox[{"objectPositionAssoc", "[", 
                RowBox[{"[", 
                 RowBox[{"\"\<BRSTVertices\>\"", ",", "1"}], "]"}], "]"}], 
               "]"}], "]"}], "/.", "BRSTshift"}], "}"}], ",", 
           RowBox[{"dummyDiagObj", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{
               RowBox[{"objectPositionAssoc", "[", 
                RowBox[{"[", 
                 RowBox[{"\"\<BRSTVertices\>\"", ",", "1"}], "]"}], "]"}], 
               "+", "1"}], ";;", 
              RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}]}], ";", "\n", "\n", 
        
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"momConsList", "=", " ", 
            RowBox[{"conserveOneObjectMomentum", "[", 
             RowBox[{
              RowBox[{"newdummyDiag", "[", 
               RowBox[{"[", "#", "]"}], "]"}], ",", "momConsList", ",", 
              "\"\<dummyIndex\>\"", ",", "BRSTmomentum"}], "]"}]}], ")"}], 
          "&"}], "/@", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "@", "dummyDiagObj"}], "]"}]}], ";"}], "\n", ",", 
       "\n", 
       RowBox[{
        RowBox[{"newdummyDiag", " ", "=", " ", "dummyDiagObj"}], ";", "\n", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"momConsList", "=", " ", 
            RowBox[{"conserveOneObjectMomentum", "[", 
             RowBox[{
              RowBox[{"newdummyDiag", "[", 
               RowBox[{"[", "#", "]"}], "]"}], ",", "momConsList", ",", 
              "\"\<dummyIndex\>\""}], "]"}]}], ")"}], "&"}], "/@", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "@", "dummyDiagObj"}], "]"}]}], ";"}]}], "\n", 
      "]"}], ";", "\n", "\n", "\n", 
     RowBox[{"Return", "[", 
      RowBox[{"newdummyDiag", "/.", "momConsList"}], "]"}]}]}], "\n", 
   "]"}]}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"da321ddd-94a1-4d7c-8761-876d9290435d"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "ReplaceObjectsWithFunctions", "]"}], "\n", 
 RowBox[{
  RowBox[{"ReplaceObjectsWithFunctions", "[", "DiagObj_", "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"funcObj", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{"Null", ",", 
         RowBox[{"Length", "@", "DiagObj"}]}], "]"}]}], ",", 
      RowBox[{"AllVarsList", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ",", "newIndicesBRST"}], "}"}], ",", "\n", "\n", 
    
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Switch", "[", 
        RowBox[{
         RowBox[{"DiagObj", "[", 
          RowBox[{"[", 
           RowBox[{"#", ",", "\"\<type\>\""}], "]"}], "]"}], ",", "\n", "\n", 
         "\"\<Regulator\>\"", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"funcObj", "[", 
            RowBox[{"[", "#", "]"}], "]"}], "=", " ", 
           RowBox[{
            RowBox[{"ToExpression", "[", 
             RowBox[{"StringJoin", "[", 
              RowBox[{"\"\<R\>\"", ",", 
               RowBox[{"Map", "[", 
                RowBox[{"ToString", ",", 
                 RowBox[{"DiagObj", "[", 
                  RowBox[{"[", 
                   RowBox[{
                   "#", ",", "\"\<indices\>\"", ",", "All", ",", "1"}], "]"}],
                   "]"}]}], "]"}]}], "]"}], "]"}], "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"DiagObj", "[", 
              RowBox[{"[", 
               RowBox[{"#", ",", "\"\<indices\>\"", ",", "All", ",", "2"}], 
               "]"}], "]"}], "]"}], "]"}]}], ";", "\n", 
          RowBox[{"AllVarsList", " ", "=", " ", 
           RowBox[{"Union", "@", 
            RowBox[{"Join", "[", 
             RowBox[{"AllVarsList", ",", 
              RowBox[{"Union", "@", 
               RowBox[{"Flatten", "@", 
                RowBox[{"DiagObj", "[", 
                 RowBox[{"[", 
                  RowBox[{"#", ",", "\"\<indices\>\"", ",", "All", ",", "2"}],
                   "]"}], "]"}]}]}]}], "]"}]}]}], ";"}], ",", "\n", 
         "\"\<Regulatordot\>\"", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"funcObj", "[", 
            RowBox[{"[", "#", "]"}], "]"}], " ", "=", " ", 
           RowBox[{
            RowBox[{"ToExpression", "[", 
             RowBox[{"StringJoin", "[", 
              RowBox[{"\"\<Rdot\>\"", ",", 
               RowBox[{"Map", "[", 
                RowBox[{"ToString", ",", 
                 RowBox[{"DiagObj", "[", 
                  RowBox[{"[", 
                   RowBox[{
                   "#", ",", "\"\<indices\>\"", ",", "All", ",", "1"}], "]"}],
                   "]"}]}], "]"}]}], "]"}], "]"}], "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"DiagObj", "[", 
              RowBox[{"[", 
               RowBox[{"#", ",", "\"\<indices\>\"", ",", "All", ",", "2"}], 
               "]"}], "]"}], "]"}], "]"}]}], ";", "\n", 
          RowBox[{"AllVarsList", " ", "=", " ", 
           RowBox[{"Union", "@", 
            RowBox[{"Join", "[", 
             RowBox[{"AllVarsList", ",", 
              RowBox[{"Union", "@", 
               RowBox[{"Flatten", "@", 
                RowBox[{"DiagObj", "[", 
                 RowBox[{"[", 
                  RowBox[{"#", ",", "\"\<indices\>\"", ",", "All", ",", "2"}],
                   "]"}], "]"}]}]}]}], "]"}]}]}], ";"}], ",", "\n", 
         "\"\<Propagator\>\"", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"funcObj", "[", 
            RowBox[{"[", "#", "]"}], "]"}], " ", "=", " ", 
           RowBox[{
            RowBox[{"ToExpression", "[", 
             RowBox[{"StringJoin", "[", 
              RowBox[{"\"\<G\>\"", ",", 
               RowBox[{"Map", "[", 
                RowBox[{"ToString", ",", 
                 RowBox[{"DiagObj", "[", 
                  RowBox[{"[", 
                   RowBox[{
                   "#", ",", "\"\<indices\>\"", ",", "All", ",", "1"}], "]"}],
                   "]"}]}], "]"}]}], "]"}], "]"}], "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"DiagObj", "[", 
              RowBox[{"[", 
               RowBox[{"#", ",", "\"\<indices\>\"", ",", "All", ",", "2"}], 
               "]"}], "]"}], "]"}], "]"}]}], ";", 
          RowBox[{"AllVarsList", " ", "=", " ", 
           RowBox[{"Union", "@", 
            RowBox[{"Join", "[", 
             RowBox[{"AllVarsList", ",", 
              RowBox[{"Union", "@", 
               RowBox[{"Flatten", "@", 
                RowBox[{"DiagObj", "[", 
                 RowBox[{"[", 
                  RowBox[{"#", ",", "\"\<indices\>\"", ",", "All", ",", "2"}],
                   "]"}], "]"}]}]}]}], "]"}]}]}], ";"}], ",", "\n", 
         "\"\<nPoint\>\"", ",", " ", "\n", 
         RowBox[{
          RowBox[{"Switch", "[", 
           RowBox[{
            RowBox[{"DiagObj", "[", 
             RowBox[{"[", 
              RowBox[{"#", ",", "\"\<spec\>\""}], "]"}], "]"}], ",", "\n", 
            "\"\<none\>\"", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"funcObj", "[", 
               RowBox[{"[", "#", "]"}], "]"}], "=", " ", 
              RowBox[{
               RowBox[{"ToExpression", "[", 
                RowBox[{"StringJoin", "[", 
                 RowBox[{"\"\<\[CapitalGamma]\>\"", ",", 
                  RowBox[{"Map", "[", 
                   RowBox[{"ToString", ",", 
                    RowBox[{"DiagObj", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    "#", ",", "\"\<indices\>\"", ",", "All", ",", "1"}], 
                    "]"}], "]"}]}], "]"}]}], "]"}], "]"}], "[", 
               RowBox[{"Flatten", "[", 
                RowBox[{"DiagObj", "[", 
                 RowBox[{"[", 
                  RowBox[{"#", ",", "\"\<indices\>\"", ",", "All", ",", "2"}],
                   "]"}], "]"}], "]"}], "]"}]}], ";", "\n", 
             RowBox[{"AllVarsList", " ", "=", " ", 
              RowBox[{"Union", "@", 
               RowBox[{"Join", "[", 
                RowBox[{"AllVarsList", ",", 
                 RowBox[{"Union", "@", 
                  RowBox[{"Flatten", "@", 
                   RowBox[{"DiagObj", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    "#", ",", "\"\<indices\>\"", ",", "All", ",", "2"}], 
                    "]"}], "]"}]}]}]}], "]"}]}]}], ";"}], ",", "\n", 
            "\"\<classical\>\"", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"funcObj", "[", 
               RowBox[{"[", "#", "]"}], "]"}], "=", " ", 
              RowBox[{
               RowBox[{"ToExpression", "[", 
                RowBox[{"StringJoin", "[", 
                 RowBox[{"\"\<S\>\"", ",", 
                  RowBox[{"Map", "[", 
                   RowBox[{"ToString", ",", 
                    RowBox[{"DiagObj", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    "#", ",", "\"\<indices\>\"", ",", "All", ",", "1"}], 
                    "]"}], "]"}]}], "]"}]}], "]"}], "]"}], "[", 
               RowBox[{"Flatten", "[", 
                RowBox[{"DiagObj", "[", 
                 RowBox[{"[", 
                  RowBox[{"#", ",", "\"\<indices\>\"", ",", "All", ",", "2"}],
                   "]"}], "]"}], "]"}], "]"}]}], ";", "\n", 
             RowBox[{"AllVarsList", " ", "=", " ", 
              RowBox[{"Union", "@", 
               RowBox[{"Join", "[", 
                RowBox[{"AllVarsList", ",", 
                 RowBox[{"Union", "@", 
                  RowBox[{"Flatten", "@", 
                   RowBox[{"DiagObj", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    "#", ",", "\"\<indices\>\"", ",", "All", ",", "2"}], 
                    "]"}], "]"}]}]}]}], "]"}]}]}], ";"}], ",", "\n", 
            "\"\<BRST\>\"", ",", " ", 
            RowBox[{
             RowBox[{"newIndicesBRST", " ", "=", " ", 
              RowBox[{"replaceIndicesBRST", "[", 
               RowBox[{"DiagObj", "[", 
                RowBox[{"[", 
                 RowBox[{"#", ",", "\"\<indices\>\""}], "]"}], "]"}], "]"}]}],
              ";", 
             RowBox[{
              RowBox[{"funcObj", "[", 
               RowBox[{"[", "#", "]"}], "]"}], " ", "=", " ", 
              RowBox[{
               RowBox[{"ToExpression", "[", 
                RowBox[{"StringJoin", "[", 
                 RowBox[{"\"\<\[CapitalGamma]\>\"", ",", 
                  RowBox[{"Map", "[", 
                   RowBox[{"ToString", ",", 
                    RowBox[{"newIndicesBRST", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}], "]"}],
                 "]"}], "[", 
               RowBox[{"Flatten", "[", 
                RowBox[{"newIndicesBRST", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}]}], 
             ";", "\n", 
             RowBox[{"AllVarsList", " ", "=", " ", 
              RowBox[{"Union", "@", 
               RowBox[{"Join", "[", 
                RowBox[{"AllVarsList", ",", 
                 RowBox[{"Union", "@", 
                  RowBox[{"Flatten", "@", 
                   RowBox[{"DiagObj", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    "#", ",", "\"\<indices\>\"", ",", "All", ",", "2"}], 
                    "]"}], "]"}]}]}]}], "]"}]}]}], ";"}]}], "\n", "]"}], 
          ";"}]}], "\n", "]"}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"Length", "@", "DiagObj"}], "]"}]}], ";", "\n", "\n", "\n", 
     "\n", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"AllVarsList", ",", "funcObj"}], "}"}], "]"}]}]}], "\n", 
   "]"}]}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"a7c6b7f3-16a2-447d-91f9-5970d44e2039"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "replaceIndicesBRST", "]"}], "\n", 
 RowBox[{
  RowBox[{"replaceIndicesBRST", "[", "indices_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"positionBRST", ",", " ", "newindices", ",", "newBRSTName"}], 
     "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"positionBRST", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"StringMatchQ", "[", 
           RowBox[{
            RowBox[{"ToString", "[", 
             RowBox[{"indices", "[", 
              RowBox[{"[", 
               RowBox[{"#", ",", "1"}], "]"}], "]"}], "]"}], ",", 
            RowBox[{"\"\<Q\>\"", "~~", "__"}]}], "]"}], ",", "\n", "#", ",", 
          "Nothing"}], "]"}], "&"}], "/@", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "@", "indices"}], "]"}]}]}], ";", "\n", "\n", 
     RowBox[{"newBRSTName", " ", "=", " ", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"StringJoin", "[", 
        RowBox[{
         RowBox[{"ToString", "[", 
          RowBox[{"Head", "[", 
           RowBox[{"indices", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"positionBRST", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], "]"}], 
           "]"}], "]"}], ",", 
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"List", "@@", 
             RowBox[{"(", 
              RowBox[{"indices", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"positionBRST", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], "]"}], 
              ")"}]}], ")"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], "]"}]}], ";", "\n",
      "\n", 
     RowBox[{"newindices", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"indices", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", 
           RowBox[{
            RowBox[{"positionBRST", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}], "]"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", "newBRSTName", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"indices", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"positionBRST", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "2"}], "]"}], "]"}], 
            "}"}]}], "]"}], "}"}], ",", 
        RowBox[{"indices", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{
            RowBox[{"positionBRST", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], ";;", 
           RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}]}], ";", "\n", "\n", 
     RowBox[{"Return", "[", "newindices", "]"}]}]}], "\n", "]"}]}]}], "Input",\

 InitializationCell->
  True,ExpressionUUID->"a38ae142-cd67-4720-8727-5cf5cdc1f74e"]
}, Closed]],

Cell[CellGroupData[{

Cell["Main Function", "Subsection",ExpressionUUID->"9b004c12-6709-41c6-b09e-0aacbbea6691"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "InsertFeynRules", "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "takes", " ", "as", " ", "RHS", " ", "one", " ", "single", " ", 
    "diagram"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"InsertFeynRules", "[", 
   RowBox[{
   "diag_", ",", "derivativeList_", ",", "fields_", ",", "loopIndex_"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"dummyDiagObj", " ", "=", " ", 
       RowBox[{"Drop", "[", 
        RowBox[{"diag", ",", 
         RowBox[{"{", "1", "}"}]}], "]"}]}], ",", " ", 
      RowBox[{"prefDiag", " ", "=", " ", 
       RowBox[{"diag", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ",", "objectPositionAssoc", 
      ",", "newsuperindexReplacementList", ",", "shiftedDiagObj", ",", 
      "funcObjects", ",", "diagVars", ",", "fullDiag"}], "}"}], ",", "\n", 
    "\n", 
    RowBox[{
     RowBox[{"myEcho", "[", 
      RowBox[{"\"\<Insert Feynman Rules\>\"", ",", "1"}], "]"}], ";", "\n", 
     "\n", 
     RowBox[{"(*", 
      RowBox[{"Identification", " ", "of", " ", "different", " ", "objects"}],
       "*)"}], "\n", 
     RowBox[{"objectPositionAssoc", " ", "=", " ", 
      RowBox[{"getAllObjectPositions", "[", "dummyDiagObj", "]"}]}], ";", 
     "\n", "\n", "\n", "\n", 
     RowBox[{"newsuperindexReplacementList", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"derivativeList", "[", 
           RowBox[{"[", "#", "]"}], "]"}], "->", 
          RowBox[{"List", "@@", 
           RowBox[{"(", 
            RowBox[{"derivativeList", "[", 
             RowBox[{"[", "#", "]"}], "]"}], ")"}]}]}], ")"}], "&"}], "/@", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "@", "derivativeList"}], "]"}]}]}], ";", "\n", "\n",
      "\n", "\n", "\n", 
     RowBox[{"(*", " ", 
      RowBox[{
      "replace", " ", "superincides", " ", "with", " ", "full", " ", "set", 
       " ", "of", " ", "indices"}], " ", "*)"}], "\n", 
     RowBox[{"dummyDiagObj", " ", "=", " ", 
      RowBox[{"dummyDiagObj", "/.", "newsuperindexReplacementList"}]}], ";", 
     "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"newsuperindexReplacementList", "=", " ", 
          RowBox[{"ReplaceIndices", "[", 
           RowBox[{
            RowBox[{"dummyDiagObj", "[", 
             RowBox[{"[", "#", "]"}], "]"}], ",", 
            "newsuperindexReplacementList", ",", "fields"}], "]"}]}], ";", 
         "\n", 
         RowBox[{"dummyDiagObj", " ", "=", " ", 
          RowBox[{"dummyDiagObj", "/.", "newsuperindexReplacementList"}]}], 
         ";"}], "\n", ")"}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"Length", "@", "dummyDiagObj"}], "]"}]}], ";", "\n", "\n", 
     "\n", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", " ", "Check"}]}]}]}]}]}]}]}]}], " ", "and", " ", 
       "shift", " ", "loop", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"momentum", " ", "--"}], "--"}], "--"}], "--"}], 
                  "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
           "--"}], "--"}], "--"}], "--"}]}], " ", "*)"}], "\n", "\n", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"check", " ", "if", " ", 
        RowBox[{"it", "'"}], "s", " ", "more", " ", "than", " ", "1"}], "-", 
       "loop"}], " ", "*)"}], "\n", "\n", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Length", "@", 
           RowBox[{"objectPositionAssoc", "[", "\"\<Propagators\>\"", "]"}]}],
           ")"}], "-", 
         RowBox[{"(", 
          RowBox[{"Length", "@", 
           RowBox[{"objectPositionAssoc", "[", "\"\<Regulators\>\"", "]"}]}], 
          ")"}]}], ">", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Length", "@", 
            RowBox[{"objectPositionAssoc", "[", "\"\<Vertices\>\"", "]"}]}], 
           ")"}], "+", 
          RowBox[{"(", 
           RowBox[{"Length", "@", 
            RowBox[{
            "objectPositionAssoc", "[", "\"\<classicalVertices\>\"", "]"}]}], 
           ")"}], "+", 
          RowBox[{"(", 
           RowBox[{"Length", "@", 
            RowBox[{
            "objectPositionAssoc", "[", "\"\<BRSTVertices\>\"", "]"}]}], 
           ")"}]}], ")"}]}], ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"more", " ", "than", " ", "1"}], "-", "loop"}], " ", "*)"}], 
       "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Echo", "[", "\"\<more than one loop\>\"", "]"}], ";"}], 
        "*)"}], "\n", 
       RowBox[{
        RowBox[{"shiftedDiagObj", " ", "=", " ", "dummyDiagObj"}], ";"}], 
       "\n", ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"if", " ", "no", " ", "loop"}], ",", " ", 
         RowBox[{
         "simply", " ", "conserve", " ", "external", " ", "momenta"}]}], " ", 
        "*)"}], "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "@", 
            RowBox[{
            "objectPositionAssoc", "[", "\"\<Propagators\>\"", "]"}]}], "==", 
           "0"}], ",", "\n", "\n", 
          RowBox[{
           RowBox[{"shiftedDiagObj", " ", "=", " ", 
            RowBox[{"conserveExternalMomenta", "[", 
             RowBox[{"dummyDiagObj", ",", "objectPositionAssoc"}], "]"}]}], 
           ";"}], "\n", ",", "\n", "\n", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "@", "dummyDiagObj"}], "==", "1"}], ",", "\n", 
             RowBox[{
              RowBox[{"shiftedDiagObj", " ", "=", " ", "dummyDiagObj"}], 
              ";"}], "\n", ",", "\n", 
             RowBox[{"(*", " ", 
              RowBox[{
               RowBox[{"If", " ", "there", " ", "is", " ", "a", " ", "Brst"}],
                ",", " ", 
               RowBox[{
                RowBox[{"then", " ", "that", " ", "field", " ", "has"}], " ", 
                "-", "q"}]}], " ", "*)"}], "\n", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "@", 
                  RowBox[{"objectPositionAssoc", "[", 
                   RowBox[{"[", "\"\<BRSTVertices\>\"", "]"}], "]"}]}], ">", 
                 "0"}], ",", "\n", 
                RowBox[{
                 RowBox[{"shiftedDiagObj", " ", "=", " ", 
                  RowBox[{"shiftLoopFromBRST", "[", 
                   RowBox[{
                   "dummyDiagObj", ",", "objectPositionAssoc", ",", 
                    "loopIndex"}], "]"}]}], ";"}], "\n", "\n", ",", "\n", 
                RowBox[{"(*", " ", 
                 RowBox[{
                 "Otherwise", " ", "start", " ", "from", " ", "the", " ", 
                  "first", " ", "vertex", " ", "with", " ", "loop", " ", 
                  "mom", " ", "conservation", " ", "and", " ", "shift"}], " ",
                  "*)"}], "\n", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Length", "@", 
                    RowBox[{"objectPositionAssoc", "[", 
                    RowBox[{"[", "\"\<Regulators\>\"", "]"}], "]"}]}], "==", 
                    "0"}], ",", "\n", "\n", 
                   RowBox[{
                    RowBox[{"shiftedDiagObj", " ", "=", " ", 
                    RowBox[{"shiftLoopFromFirstVertexDSE", "[", 
                    RowBox[{
                    "dummyDiagObj", ",", "objectPositionAssoc", ",", 
                    "derivativeList", ",", "loopIndex"}], "]"}]}], ";"}], 
                   "\n", ",", "\n", "\n", 
                   RowBox[{
                    RowBox[{"shiftedDiagObj", " ", "=", " ", 
                    RowBox[{"shiftLoopFromFirstVertex", "[", 
                    RowBox[{
                    "dummyDiagObj", ",", "objectPositionAssoc", ",", 
                    "derivativeList", ",", "loopIndex"}], "]"}]}], ";"}]}], 
                  "\n", "]"}], ";"}]}], "\n", "]"}], ";"}]}], "\n", "]"}], 
           ";"}]}], "\n", "]"}], ";"}]}], "\n", "]"}], ";", "\n", "\n", "\n", 
     
     RowBox[{"(*", " ", 
      RowBox[{
      "Prepare", " ", "objects", " ", "such", " ", "that", " ", "one", " ", 
       "can", " ", "easily", " ", "insert", " ", "the", " ", "Feynman", " ", 
       "Rules"}], " ", "*)"}], "\n", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"diagVars", ",", "funcObjects"}], "}"}], " ", "=", " ", 
      RowBox[{"ReplaceObjectsWithFunctions", "[", "shiftedDiagObj", "]"}]}], 
     ";", "\n", 
     RowBox[{"fullDiag", " ", "=", "  ", 
      RowBox[{"prefDiag", "*", 
       RowBox[{"Apply", "[", 
        RowBox[{"Times", ",", "funcObjects"}], "]"}]}]}], ";", "\n", "\n", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"diagVars", ",", "fullDiag"}], "}"}], "]"}]}]}], "\n", 
   "]"}]}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"db9c4141-644a-4cdb-b3dc-35bd3b160da3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "InsertFeynRulesAllDiags", "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "takes", " ", "as", " ", "RHS", " ", "one", " ", "single", " ", 
    "diagram"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"InsertFeynRulesAllDiags", "[", 
   RowBox[{
   "allDiags_", ",", "derivativeList_", ",", "fields_", ",", "loopIndex_"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"allVars", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", 
         RowBox[{"Length", "@", "allDiags"}]}], "]"}]}], ",", " ", 
      RowBox[{"fullDiags", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{"Null", ",", 
         RowBox[{"Length", "@", "allDiags"}]}], "]"}]}]}], "}"}], ",", "\n", 
    "\n", "\n", "\n", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", "\n", 
        RowBox[{
         RowBox[{"myEcho", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<Insert Feynman Rules in Diagram no: \>\"", ",", "#"}], "}"}],
            ",", "1"}], "]"}], ";", "\n", "\n", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"allVars", "[", 
             RowBox[{"[", "#", "]"}], "]"}], ",", 
            RowBox[{"fullDiags", "[", 
             RowBox[{"[", "#", "]"}], "]"}]}], "}"}], " ", "=", " ", 
          RowBox[{"InsertFeynRules", "[", 
           RowBox[{
            RowBox[{"allDiags", "[", 
             RowBox[{"[", "#", "]"}], "]"}], ",", "derivativeList", ",", 
            "fields", ",", "loopIndex"}], "]"}]}], ";"}], "\n", "\n", ")"}], 
       "&"}], "/@", 
      RowBox[{"Table", "[", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "@", "allDiags"}]}], "}"}]}], "]"}]}], ";", "\n", 
     "\n", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"allVars", ",", "fullDiags"}], "}"}], "]"}]}]}], "\n", "\n", 
   "]"}]}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"10933651-0b16-4a43-893a-5132566d1ccd"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Derive Equations", "Section",ExpressionUUID->"f7b89351-b82e-458d-bce9-f3c725209e58"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "DeriveFunctionalEquation", "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DeriveFunctionalEquation", "[", 
    RowBox[{"setupAssoc_", ",", " ", "derivativeList_", ",", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], " ", ":=", "\n", "    ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"masterEq", ",", " ", "derivativeListnew", ",", " ", 
       RowBox[{"dse", " ", "=", " ", "False"}], ",", " ", "classicalAction", 
       ",", "\n", "         ", "fields", ",", " ", "truncation", ",", " ", 
       "outputLevel", ",", " ", "loopIndex", ",", " ", "funcDerDiagrams", ",",
        " ", "replacementList", ",", "\n", "         ", 
       "superindexReplacementList", ",", " ", "superindexDiags", ",", " ", 
       "allVars", ",", " ", "fullDiags"}], "}"}], ",", "\n", "\n", "        ", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"AssociationQ", "[", 
          RowBox[{"setupAssoc", "[", 
           RowBox[{"[", "\"\<MasterEquation\>\"", "]"}], "]"}], "]"}], " ", "==",
          " ", "True"}], ",", "\n", "            ", 
        RowBox[{
         RowBox[{"classicalAction", " ", "=", " ", 
          RowBox[{"setupAssoc", "[", 
           RowBox[{"[", 
            RowBox[{
            "\"\<MasterEquation\>\"", ",", " ", "\"\<classicalAction\>\""}], 
            "]"}], "]"}]}], ";", "\n", "            ", 
         RowBox[{"masterEq", " ", "=", " ", 
          RowBox[{"getDSE", "[", 
           RowBox[{"classicalAction", ",", " ", 
            RowBox[{"Last", "[", "derivativeList", "]"}]}], "]"}]}], ";", 
         "\n", "            ", 
         RowBox[{"derivativeListnew", " ", "=", " ", 
          RowBox[{"derivativeList", "[", 
           RowBox[{"[", 
            RowBox[{"1", " ", ";;", " ", 
             RowBox[{"-", "2"}]}], "]"}], "]"}]}], ";", "\n", "            ", 
         
         RowBox[{"dse", " ", "=", " ", "True"}], ";"}], "\n", "            ", 
        ",", "\n", "            ", 
        RowBox[{
         RowBox[{"derivativeListnew", " ", "=", " ", "derivativeList"}], ";", 
         "\n", "            ", 
         RowBox[{"masterEq", " ", "=", " ", 
          RowBox[{"setupAssoc", "[", 
           RowBox[{"[", "\"\<MasterEquation\>\"", "]"}], "]"}]}], ";"}]}], 
       "\n", "        ", "]"}], ";", "\n", "\n", "        ", 
      RowBox[{"fields", " ", "=", 
       RowBox[{"Association", "[", 
        RowBox[{
         RowBox[{"\"\<bosonic\>\"", "->", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"\"\<fermionic\>\"", "->", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"setupAssoc", "[", 
          RowBox[{"[", "\"\<FieldSpace\>\"", "]"}], "]"}]}], "]"}]}], ";", 
      "\n", "        ", 
      RowBox[{"truncation", " ", "=", " ", 
       RowBox[{"setupAssoc", "[", 
        RowBox[{"[", "\"\<Truncation\>\"", "]"}], "]"}]}], ";", "\n", 
      "        ", 
      RowBox[{"myEcho", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"masterEq", ",", " ", "fields", ",", " ", "truncation"}], 
         "}"}], ",", " ", "1"}], "]"}], ";", "\n", "        ", 
      RowBox[{"outputLevel", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "\"\<OutputLevel\>\"", "]"}]}], ";", "\n", 
      "        ", 
      RowBox[{"loopIndex", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "\"\<LoopIndex\>\"", "]"}]}], ";", "\n", 
      "\n", "        ", 
      RowBox[{"Switch", "[", 
       RowBox[{
       "outputLevel", ",", "\n", "            ", "\"\<getDSE\>\"", ",", "\n", 
        "                ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"dse", " ", "==", " ", "True"}], ",", "\n", 
          "                    ", 
          RowBox[{"Return", "[", "masterEq", "]"}], "\n", 
          "                    ", ",", 
          RowBox[{
           RowBox[{
           "Print", "[", 
            "\"\<Master equation is aleady given. Please choose a different \
output (i.e. \[OpenCurlyDoubleQuote]FunctionalDerivatives\
\[CloseCurlyDoubleQuote], \[OpenCurlyDoubleQuote]SuperindexDiagrams\
\[CloseCurlyDoubleQuote] or \[OpenCurlyDoubleQuote]FullDiagrams\
\[CloseCurlyDoubleQuote]).\>\"", "]"}], ";", "\n", "                    ", 
           RowBox[{"Return", "[", "masterEq", "]"}]}]}], "\n", 
         "                ", "]"}], "\n", "            ", ",", "\n", "\n", 
        "            ", "\"\<FunctionalDerivatives\>\"", ",", "\n", 
        "                ", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"funcDerDiagrams", ",", " ", "replacementList"}], "}"}], 
          " ", "=", " ", 
          RowBox[{"MultipleFuncDer", "[", 
           RowBox[{"masterEq", ",", " ", "derivativeListnew"}], "]"}]}], ";", 
         "\n", "                ", 
         RowBox[{"funcDerDiagrams", " ", "=", " ", 
          RowBox[{"funcDerDiagrams", " ", "/.", " ", "replacementList"}]}], 
         ";", "\n", "                    ", "\n", "                ", 
         RowBox[{"Return", "[", "funcDerDiagrams", "]"}]}], "\n", 
        "            ", ",", "\n", "\n", "            ", 
        "\"\<SuperindexDiagrams\>\"", ",", "\n", "                ", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"funcDerDiagrams", ",", " ", "replacementList"}], "}"}], 
          "=", 
          RowBox[{"MultipleFuncDer", "[", 
           RowBox[{"masterEq", ",", " ", "derivativeListnew"}], "]"}]}], ";", 
         "\n", "\n", "                ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"AssociationQ", "[", 
             RowBox[{"setupAssoc", "[", 
              RowBox[{"[", "\"\<MasterEquation\>\"", "]"}], "]"}], "]"}], " ",
             "==", " ", "True"}], ",", "\n", "                    ", 
           RowBox[{"superindexDiags", " ", "=", " ", 
            RowBox[{"TraceOverFields", "[", 
             RowBox[{
             "funcDerDiagrams", ",", "derivativeList", ",", " ", 
              "replacementList", ",", " ", "fields", ",", " ", "truncation", 
              ",", " ", "classicalAction"}], "]"}]}], ",", "\n", 
           "                    ", 
           RowBox[{"superindexDiags", " ", "=", " ", 
            RowBox[{"TraceOverFields", "[", 
             RowBox[{
             "funcDerDiagrams", ",", "derivativeList", ",", " ", 
              "replacementList", ",", " ", "fields", ",", " ", "truncation"}],
              "]"}]}]}], "]"}], ";", "\n", "\n", "                ", 
         RowBox[{"Return", "[", "superindexDiags", "]"}]}], "\n", 
        "            ", ",", "\n", "\n", "            ", 
        "\"\<FullDiagrams\>\"", ",", "\n", "                ", 
        RowBox[{
         RowBox[{"myEcho", "[", 
          RowBox[{
           RowBox[{"MultipleFuncDer", "[", 
            RowBox[{"masterEq", ",", " ", "derivativeListnew"}], "]"}], ",", 
           "1"}], "]"}], ";", "\n", "                ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"funcDerDiagrams", ",", " ", "replacementList"}], "}"}], 
          " ", "=", " ", 
          RowBox[{"MultipleFuncDer", "[", 
           RowBox[{"masterEq", ",", " ", "derivativeListnew"}], "]"}]}], ";", 
         "\n", "\n", "                ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"AssociationQ", "[", 
             RowBox[{"setupAssoc", "[", 
              RowBox[{"[", "\"\<MasterEquation\>\"", "]"}], "]"}], "]"}], " ",
             "==", " ", "True"}], ",", "\n", "                    ", 
           RowBox[{"superindexDiags", " ", "=", " ", 
            RowBox[{"TraceOverFields", "[", 
             RowBox[{
             "funcDerDiagrams", ",", "derivativeList", ",", " ", 
              "replacementList", ",", " ", "fields", ",", " ", "truncation", 
              ",", " ", "classicalAction"}], "]"}]}], ",", "\n", 
           "                    ", 
           RowBox[{"superindexDiags", " ", "=", " ", 
            RowBox[{"TraceOverFields", "[", 
             RowBox[{
             "funcDerDiagrams", ",", "derivativeList", ",", " ", 
              "replacementList", ",", " ", "fields", ",", " ", "truncation"}],
              "]"}]}]}], "\n", "                ", "]"}], ";", "\n", "\n", 
         "                ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"allVars", ",", " ", "fullDiags"}], "}"}], " ", "=", " ", 
          RowBox[{
           RowBox[{"InsertFeynRulesAllDiags", "[", 
            RowBox[{
            "superindexDiags", ",", " ", "derivativeList", ",", " ", "fields",
              ",", " ", "loopIndex"}], "]"}], " ", "/.", " ", 
           RowBox[{"QMeSderivation`Private`q", "->", "Global`q"}]}]}], ";", 
         "\[IndentingNewLine]", "\n", "                ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"OptionValue", "[", "\"\<ReturnAll\>\"", "]"}], " ", "==",
             " ", "False"}], ",", "\n", "                    ", 
           RowBox[{"Return", "[", "fullDiags", "]"}], ",", "\n", 
           "                    ", 
           RowBox[{"Return", "[", 
            RowBox[{"{", 
             RowBox[{"superindexDiags", ",", " ", "fullDiags"}], "}"}], 
            "]"}]}], "\n", "                ", "]"}], ";", "\n", "\n", 
         "                ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"OptionValue", "[", "\"\<DummyVarList\>\"", "]"}], " ", "==",
             " ", "False"}], ",", "\n", "                    ", 
           RowBox[{"Return", "[", "fullDiags", "]"}], ",", "\n", 
           "                    ", 
           RowBox[{"Return", "[", 
            RowBox[{"{", 
             RowBox[{"allVars", ",", " ", "fullDiags"}], "}"}], "]"}]}], "\n",
           "                ", "]"}], ";"}]}], "\n", "        ", "]"}], 
      ";"}]}], "\n", "    ", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "DeriveFunctionalEquation", "]"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
     "\"\<OutputLevel\>\"", " ", "->", " ", "\"\<FunctionalDerivatives\>\""}],
      ",", "\n", "     ", 
     RowBox[{"\"\<LoopIndex\>\"", " ", "->", " ", "q"}], ",", " ", 
     RowBox[{"\"\<DummyVarList\>\"", " ", "->", " ", "False"}], ",", 
     RowBox[{"\"\<ReturnAll\>\"", "->", "False"}]}], "}"}]}], ";"}]}], "Input",\

 InitializationCell->True,
 CellChangeTimes->{{3.932091867598856*^9, 3.93209188114114*^9}, {
  3.932092111347263*^9, 
  3.932092114932242*^9}},ExpressionUUID->"6ca5fc88-9951-4045-ac07-\
4eb8fbd1f515"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SuperindexToFullDiagrams", "[", 
   RowBox[{"diags_", ",", "derivativeList_", ",", "setupAssoc_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "fields", ",", "loopIndex", ",", "allVars", ",", " ", "fullDiags"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"fields", " ", "=", 
      RowBox[{"Association", "[", 
       RowBox[{
        RowBox[{"\"\<bosonic\>\"", "->", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"\"\<fermionic\>\"", "->", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"setupAssoc", "[", 
         RowBox[{"[", "\"\<FieldSpace\>\"", "]"}], "]"}]}], "]"}]}], ";", 
     "\n", "     ", 
     RowBox[{"loopIndex", " ", "=", " ", "Global`q"}], ";", 
     "\[IndentingNewLine]", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"allVars", ",", " ", "fullDiags"}], "}"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"InsertFeynRulesAllDiags", "[", 
        RowBox[{
        "diags", ",", " ", "derivativeList", ",", "fields", ",", " ", 
         "loopIndex"}], "]"}], " ", "/.", " ", 
       RowBox[{"QMeSderivation`Private`q", "->", "Global`q"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "fullDiags", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.93218125692752*^9},ExpressionUUID->"b0e49f7d-ddc2-4eb6-a1a4-412e36cf6c8d"],

Cell[BoxData[{
 RowBox[{"End", "[", "]"}], "\n", 
 RowBox[{"EndPackage", "[", "]"}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"6ae29785-f7d1-4d85-9b99-b147d9011e08"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1800, 1012.5},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"14.0 for Linux x86 (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"1cf55137-e805-4424-8d7d-eef3ba22c961"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 100, 0, 67, "Chapter",ExpressionUUID->"45ddee6f-3f32-44ef-82cd-b73bd4ff308b"],
Cell[683, 24, 900, 14, 45, "Input",ExpressionUUID->"09445a57-7255-4382-a99e-890a2d3f1c1c",
 InitializationCell->True],
Cell[1586, 40, 240, 5, 45, "Input",ExpressionUUID->"5b3b251d-1a0d-4384-ba9b-26af0d4bef2e",
 InitializationCell->True],
Cell[1829, 47, 1176, 21, 45, "Input",ExpressionUUID->"68080c37-4b9f-4d66-a306-bec84e35eeaf",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[3030, 72, 152, 3, 66, "Section",ExpressionUUID->"ab79d882-34f1-4122-9150-7e5976bab5c1"],
Cell[3185, 77, 3297, 47, 1077, "Input",ExpressionUUID->"ed4d7724-1b4a-4971-a017-4caeafa6af48",
 InitializationCell->True],
Cell[6485, 126, 368, 8, 129, "Input",ExpressionUUID->"efb2446e-7b3a-4843-a2ec-076083ba1d3a",
 InitializationCell->True],
Cell[6856, 136, 501, 11, 108, "Input",ExpressionUUID->"56b00adc-6ded-4055-9c3d-9c77060da24a",
 InitializationCell->True],
Cell[7360, 149, 159, 3, 45, "Input",ExpressionUUID->"90ac0479-f244-40f4-93cf-d5751b4e9a16",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[7556, 157, 150, 3, 52, "Section",ExpressionUUID->"0e5efc1c-b67a-456f-b36e-d1bb2591cd71"],
Cell[7709, 162, 2204, 51, 294, "Input",ExpressionUUID->"9fda98be-e781-446e-a3a2-a2ea51d98fb7",
 InitializationCell->True],
Cell[9916, 215, 167, 4, 45, "Input",ExpressionUUID->"399502b2-65cd-48c5-bc19-8af476d3d318",
 InitializationCell->True],
Cell[10086, 221, 406, 11, 48, "Input",ExpressionUUID->"37db1de1-8a68-46a0-adc2-0015e58de4d6",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[10529, 237, 81, 0, 52, "Section",ExpressionUUID->"facb5743-108a-440d-a72a-36a58aae5f55"],
Cell[CellGroupData[{
Cell[10635, 241, 81, 0, 55, "Subsection",ExpressionUUID->"95d4f988-e43d-4461-9871-bad4e8bddd38"],
Cell[10719, 243, 1366, 32, 256, "Input",ExpressionUUID->"aead25f1-6518-48fc-bf5b-7dcba37b3228",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[12122, 280, 102, 0, 55, "Subsection",ExpressionUUID->"72ef84f0-2b33-4001-9007-a371effeb273"],
Cell[12227, 282, 2144, 55, 359, "Input",ExpressionUUID->"4295dc07-9432-40d1-a0a3-da643a8f69a2",
 InitializationCell->True],
Cell[14374, 339, 2678, 67, 301, "Input",ExpressionUUID->"ae25b815-5151-46d4-a716-2aa43b441df1",
 InitializationCell->True],
Cell[17055, 408, 1211, 33, 215, "Input",ExpressionUUID->"e6481881-d841-4f49-8053-bcec4792828c",
 InitializationCell->True],
Cell[18269, 443, 746, 20, 194, "Input",ExpressionUUID->"c3a8aa4a-ad65-4395-964a-0d4c62acaa3d",
 InitializationCell->True],
Cell[19018, 465, 2320, 58, 380, "Input",ExpressionUUID->"67b730f8-9986-4b99-b497-c5c63cd307e0",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[21375, 528, 104, 0, 55, "Subsection",ExpressionUUID->"322bda9f-50ab-43c5-a83a-2eab82cec10b"],
Cell[21482, 530, 1873, 49, 70, "Input",ExpressionUUID->"31100a2c-a9c4-40d2-8c76-12bc7d70830d",
 InitializationCell->True],
Cell[23358, 581, 6285, 150, 70, "Input",ExpressionUUID->"4c99eb30-559a-4323-913b-8b6aa72c936f",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[29680, 736, 107, 0, 39, "Subsection",ExpressionUUID->"87793f6f-28b0-4190-ad21-4e5635b753fa"],
Cell[29790, 738, 1824, 47, 70, "Input",ExpressionUUID->"bfd28cd3-e4a4-4aa9-b03e-471a6a012beb",
 InitializationCell->True],
Cell[31617, 787, 2815, 70, 70, "Input",ExpressionUUID->"12af5cf8-4b49-4e2b-96be-0e2a4aa8f6cf",
 InitializationCell->True],
Cell[34435, 859, 4874, 111, 70, "Input",ExpressionUUID->"bb875bb7-8ff2-463f-9454-5bb6bd163c89",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[39346, 975, 99, 0, 39, "Subsection",ExpressionUUID->"487e1efe-049a-4710-9a9a-606fd7d8e20b"],
Cell[39448, 977, 2959, 72, 70, "Input",ExpressionUUID->"0fcdf26b-bbc1-4882-8ec5-d1067e92cea6",
 InitializationCell->True],
Cell[42410, 1051, 2655, 65, 70, "Input",ExpressionUUID->"494f43e0-fbec-48ff-9f49-7d2b1013ccbe",
 InitializationCell->True],
Cell[45068, 1118, 2114, 48, 70, "Input",ExpressionUUID->"ea263f90-1210-4d72-b189-bcadcbb1b5c6",
 InitializationCell->True],
Cell[47185, 1168, 13225, 294, 70, "Input",ExpressionUUID->"7192cecc-dee2-4a26-9cc9-251be0e53c51",
 InitializationCell->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[60459, 1468, 96, 0, 52, "Section",ExpressionUUID->"930ee394-3ff3-484f-9b21-54794df1722b"],
Cell[CellGroupData[{
Cell[60580, 1472, 108, 0, 55, "Subsection",ExpressionUUID->"a2d10372-3b62-4786-8dca-c490b890d1fd"],
Cell[60691, 1474, 16244, 383, 2526, "Input",ExpressionUUID->"62b0f92b-2065-4002-8b62-9944aca7099e",
 InitializationCell->True],
Cell[76938, 1859, 703, 17, 174, "Input",ExpressionUUID->"84c53d76-ebdb-4c88-a408-b7a7c72fba33",
 InitializationCell->True],
Cell[77644, 1878, 2435, 66, 284, "Input",ExpressionUUID->"990d6f20-9dc0-4370-98a0-cb8a072efc2c",
 InitializationCell->True],
Cell[80082, 1946, 10921, 273, 1708, "Input",ExpressionUUID->"65d6eb88-0d90-4060-a428-1526df649553",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[91040, 2224, 81, 0, 39, "Subsection",ExpressionUUID->"1ba6e94d-5dc4-4734-a238-80cb4c1ea387"],
Cell[91124, 2226, 6973, 178, 998, "Input",ExpressionUUID->"5a2c8237-6ed6-4808-97f4-8df24e5e89db",
 InitializationCell->True]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[98146, 2410, 93, 0, 66, "Section",ExpressionUUID->"68d5b923-9dcb-4458-a1a3-9e57cf8c65f1"],
Cell[CellGroupData[{
Cell[98264, 2414, 96, 0, 55, "Subsection",ExpressionUUID->"d3ee7cd2-791c-4dfe-a558-6ea82268fc7e"],
Cell[98363, 2416, 360, 10, 45, "Input",ExpressionUUID->"c599140f-ca0a-4b7c-83bd-2e6e3f23fcaf",
 InitializationCell->True],
Cell[98726, 2428, 3759, 94, 665, "Input",ExpressionUUID->"ccd5c48d-1d51-4450-a748-386a2170ed61",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[102522, 2527, 93, 0, 39, "Subsection",ExpressionUUID->"9c8c0288-4a28-4fa1-adbf-290ca9687bba"],
Cell[102618, 2529, 8047, 202, 939, "Input",ExpressionUUID->"701dbd92-f47c-4823-b517-9baadb5a445b",
 InitializationCell->True],
Cell[110668, 2733, 3946, 95, 491, "Input",ExpressionUUID->"6fdfc5ab-e809-4f1c-9040-df9ab1ac86b0",
 InitializationCell->True],
Cell[114617, 2830, 12776, 277, 2526, "Input",ExpressionUUID->"5b0c3aae-4fe4-45a1-a2ae-6570141ff965",
 InitializationCell->True],
Cell[127396, 3109, 3031, 73, 344, "Input",ExpressionUUID->"a112f8e5-2518-45ab-a2cd-6ce3babe9394",
 InitializationCell->True],
Cell[130430, 3184, 1163, 29, 194, "Input",ExpressionUUID->"20f5815d-493d-45c8-8ed4-ce2ce01d58b8",
 InitializationCell->True],
Cell[131596, 3215, 9032, 214, 1360, "Input",ExpressionUUID->"bf51e236-e996-4179-b2d2-8ed47978dc55",
 InitializationCell->True],
Cell[140631, 3431, 1470, 37, 344, "Input",ExpressionUUID->"c558ff81-9d90-462d-8bf9-a9c17cfbfe9c",
 InitializationCell->True],
Cell[142104, 3470, 5762, 133, 979, "Input",ExpressionUUID->"9b181022-3642-4e93-aa6e-a76809288c69",
 InitializationCell->True],
Cell[147869, 3605, 1450, 37, 264, "Input",ExpressionUUID->"7b9e6c6b-d540-4d17-99ab-dfb98ca61885",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[149356, 3647, 89, 0, 39, "Subsection",ExpressionUUID->"e8c5087a-1035-41bd-b3b2-eaeb22827139"],
Cell[149448, 3649, 2640, 69, 70, "Input",ExpressionUUID->"87be69eb-19ab-4383-891d-e68e20106c83",
 InitializationCell->True],
Cell[152091, 3720, 5169, 132, 70, "Input",ExpressionUUID->"8ccce0fa-4421-44cb-8df8-de9697ffadf1",
 InitializationCell->True],
Cell[157263, 3854, 15784, 387, 70, "Input",ExpressionUUID->"2be9c2d3-acb2-475c-b543-c748e92f8307",
 InitializationCell->True],
Cell[173050, 4243, 3128, 79, 70, "Input",ExpressionUUID->"08caf701-b12e-45e1-81ab-afe96be83c0e",
 InitializationCell->True],
Cell[176181, 4324, 19980, 458, 70, "Input",ExpressionUUID->"e3a48274-ec6a-4e25-a585-1d384d2b8bce",
 InitializationCell->True],
Cell[196164, 4784, 8224, 199, 70, "Input",ExpressionUUID->"821ff777-2daf-49ff-8ba2-7a79c867aedb",
 InitializationCell->True],
Cell[204391, 4985, 3570, 87, 70, "Input",ExpressionUUID->"0383848f-25d4-499d-9087-dda0734057c0",
 InitializationCell->True],
Cell[207964, 5074, 5274, 125, 70, "Input",ExpressionUUID->"bf445f10-a165-4b74-ad2e-4cb90a13c4bb",
 InitializationCell->True],
Cell[213241, 5201, 4052, 99, 70, "Input",ExpressionUUID->"a6f01c17-dbd2-42ac-8e64-a5939a443b73",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[217330, 5305, 82, 0, 39, "Subsection",ExpressionUUID->"354cb9b0-859e-4365-9795-c7b642337569"],
Cell[217415, 5307, 6072, 142, 70, "Input",ExpressionUUID->"86e9c4b7-5093-4c81-b129-1c2ab59a2fc1",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[223524, 5454, 94, 0, 39, "Subsection",ExpressionUUID->"6e03f30a-0137-49e7-bff0-c6ad8baec72a"],
Cell[223621, 5456, 3784, 90, 468, "Input",ExpressionUUID->"c7dabc39-1ac8-4ea1-9fc6-5d27dd86f879",
 InitializationCell->True],
Cell[227408, 5548, 7844, 180, 1632, "Input",ExpressionUUID->"6f5765eb-1953-4702-a0fd-f00ecd9066ee",
 InitializationCell->True],
Cell[235255, 5730, 1377, 36, 218, "Input",ExpressionUUID->"4d73a17b-aa06-4e9c-8ed4-a9688253e449",
 InitializationCell->True]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[236681, 5772, 87, 0, 66, "Section",ExpressionUUID->"9f51deb8-b776-48cb-b738-0328daa3b82a"],
Cell[CellGroupData[{
Cell[236793, 5776, 90, 0, 70, "Subsection",ExpressionUUID->"ef29d8eb-2899-43d6-bb3e-cd5b7cca61f4"],
Cell[236886, 5778, 2035, 51, 70, "Input",ExpressionUUID->"41e607ef-2ace-48f7-ac59-99046faf02ae",
 InitializationCell->True],
Cell[238924, 5831, 3975, 105, 70, "Input",ExpressionUUID->"c82f0248-2ae5-47a4-8d4e-f0191914e555",
 InitializationCell->True],
Cell[242902, 5938, 2583, 69, 70, "Input",ExpressionUUID->"c7171279-aaaf-4980-bd4b-ecc6c18ccdf5",
 InitializationCell->True],
Cell[245488, 6009, 7650, 177, 70, "Input",ExpressionUUID->"3112e98c-9e7e-4639-8554-79de653ae7f2",
 InitializationCell->True],
Cell[253141, 6188, 5999, 150, 70, "Input",ExpressionUUID->"3e094693-2bc0-4466-98c5-94107858786b",
 InitializationCell->True],
Cell[259143, 6340, 19291, 452, 70, "Input",ExpressionUUID->"cce475bb-b8f5-478c-a96e-fde6008ff66d",
 InitializationCell->True],
Cell[278437, 6794, 14396, 341, 70, "Input",ExpressionUUID->"8313f053-cd60-4636-a60c-b69779167528",
 InitializationCell->True],
Cell[292836, 7137, 4981, 128, 70, "Input",ExpressionUUID->"75ea6ecd-6037-4367-983d-ea4a8a1f1c62",
 InitializationCell->True],
Cell[297820, 7267, 2497, 67, 70, "Input",ExpressionUUID->"809c3a8c-9283-41e5-bab8-f3a6b280500b",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[300354, 7339, 90, 0, 70, "Subsection",ExpressionUUID->"e0ce89bc-2eec-4d27-a38d-225088262171"],
Cell[300447, 7341, 3932, 94, 70, "Input",ExpressionUUID->"f929a436-cf9d-48eb-81ee-f63f2ee5c75f",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[304416, 7440, 83, 0, 70, "Subsection",ExpressionUUID->"28afae71-cb16-4a0e-8e5b-025a1af2d0a3"],
Cell[304502, 7442, 2416, 59, 70, "Input",ExpressionUUID->"c69cc621-26d8-4c9a-9812-affd3b44481e",
 InitializationCell->True],
Cell[306921, 7503, 2183, 54, 70, "Input",ExpressionUUID->"0545ff2b-cb85-411b-bc9c-3c0db1b327f9",
 InitializationCell->True],
Cell[309107, 7559, 2276, 57, 70, "Input",ExpressionUUID->"333e9ef9-680d-4807-b8ee-0ffc7609539e",
 InitializationCell->True],
Cell[311386, 7618, 2497, 58, 70, "Input",ExpressionUUID->"5c86bd2c-9cb0-4211-8717-e2f38f3e4958",
 InitializationCell->True],
Cell[313886, 7678, 1472, 36, 70, "Input",ExpressionUUID->"51f3ab91-0c7b-4eb8-8d70-be57a16a75b5",
 InitializationCell->True],
Cell[315361, 7716, 1545, 40, 70, "Input",ExpressionUUID->"750ff0fe-2576-4e7f-acee-4edd86373bed",
 InitializationCell->True],
Cell[316909, 7758, 4527, 115, 70, "Input",ExpressionUUID->"97b1d85b-edea-4dce-8af5-88ef4907ed6e",
 InitializationCell->True],
Cell[321439, 7875, 15758, 384, 70, "Input",ExpressionUUID->"534afdc8-366f-42bb-8f19-be0273f2f631",
 InitializationCell->True],
Cell[337200, 8261, 1618, 40, 70, "Input",ExpressionUUID->"6372fc10-f1de-4aba-af51-7023592bcba6",
 InitializationCell->True],
Cell[338821, 8303, 3291, 86, 70, "Input",ExpressionUUID->"842305f0-9156-462f-a305-238218cafc78",
 InitializationCell->True],
Cell[342115, 8391, 4739, 119, 70, "Input",ExpressionUUID->"da321ddd-94a1-4d7c-8761-876d9290435d",
 InitializationCell->True],
Cell[346857, 8512, 9860, 233, 70, "Input",ExpressionUUID->"a7c6b7f3-16a2-447d-91f9-5970d44e2039",
 InitializationCell->True],
Cell[356720, 8747, 2974, 81, 70, "Input",ExpressionUUID->"a38ae142-cd67-4720-8727-5cf5cdc1f74e",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[359731, 8833, 90, 0, 70, "Subsection",ExpressionUUID->"9b004c12-6709-41c6-b09e-0aacbbea6691"],
Cell[359824, 8835, 9657, 245, 70, "Input",ExpressionUUID->"db9c4141-644a-4cdb-b3dc-35bd3b160da3",
 InitializationCell->True],
Cell[369484, 9082, 2139, 61, 70, "Input",ExpressionUUID->"10933651-0b16-4a43-893a-5132566d1ccd",
 InitializationCell->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[371672, 9149, 90, 0, 52, "Section",ExpressionUUID->"f7b89351-b82e-458d-bce9-f3c725209e58"],
Cell[371765, 9151, 10619, 229, 1620, "Input",ExpressionUUID->"6ca5fc88-9951-4045-ac07-4eb8fbd1f515",
 InitializationCell->True],
Cell[382387, 9382, 1452, 37, 155, "Input",ExpressionUUID->"b0e49f7d-ddc2-4eb6-a1a4-412e36cf6c8d",
 InitializationCell->True],
Cell[383842, 9421, 180, 4, 67, "Input",ExpressionUUID->"6ae29785-f7d1-4d85-9b99-b147d9011e08",
 InitializationCell->True]
}, Open  ]]
}, Open  ]]
}
]
*)

